{"version":3,"sources":["webpack://timetrex/./interface/html5/views/attendance/map/MapViewController.js"],"names":["MapViewController","BaseViewController","options","_","defaults","el","colors","name","value","moved_unsaved_markers","punches_dic","punch_api","layers","circle_layers","display_mode","geo_labels","zoom_changed_timer","dragend_timer","popups","info_panel_dic","map_control","search_typing_delay","stop_suggestions","map_last_bounds","geofence_filters","distances_grid","calculatedRouteData","super","Global","getProductEdition","this","edit_only_mode","edit_view_tpl","permission_id","sub_view_mode","viewId","script_name","context_menu_name","$","i18n","navigation_label","api","TTAPI","APIPunch","L","LatLngBounds","geo_fence_api","APIGEOFence","user_api","APIUser","render","buildContextMenu","initData","setSelectRibbonMenuIfNecessary","exclude","include","ContextMenuIconName","save","cancel","export_excel","context_btn","pId","parent_view_controller","editPermissionValidate","is_mass_editing","addClass","is_changed","is_viewing","grid_selected_length","data","incoming_data","user_generic_data_api","APIUserGenericData","edit_view","initEditViewUI","initEditView","buildEditViewUI","tab_model","current_edit_record","setTabModel","initLeafletMap","populateLeafletMap","_internal","_leaflet_map","on","callbackMapPanning","bind","ProgressBar","cancelProgressBar","setEditViewDataDone","setEditMenu","initDistanceGrid","tab","retval","tt_map_data","tt_routes","length","ignoreWarning","this_MapViewController","onMapSaveClick","values","removeEditView","closeOverlay","Debug","Text","method","showOverlay","grid2csv","osm","APIGlobal","pre_login_data","map_provider","osmUrl","map_tile_url","registration_key","TileLayer","minZoom","maxZoom","attribution","noWrap","tileLayer","provider","TTMap","autoPan","maxBoundsViscosity","current_map_default_coordinates","getCenter","alternative_default_coordinates","startMapCoordinates","equals","setView","initRoutingLogic","createLayer","type","cluster_layer_options","maxClusterRadius","spiderfyDistanceMultiplier","showCoverageOnHover","initSearchBox","routing_options","routing_url","map_routing_url","initRoutingEngine","hasOwnProperty","geo_bounds","drawGeoFences","extendMapBounds","window","callbackDistanceResults","single_marker_draggable","tt_markers","marker_options","draggable","callbacks","onMarkerDragend","callbackTriggerMarkerMove","onMarkerAddNew","addMarkerInteractive","addTTMapData","marker_bounds","generateMarkerBounds","Object","keys","undefined","setTimeout","initGeoFences","marker","new_position","marker_punch_id","punch_id","id","latitude","lat","toFixed","longitude","lng","position_accuracy","getLatLng","toString","clearTimeout","_mapZoomEndTimer","ref_id","route_info","pac_input","e","select","keyCode","first","click","search_key_delay","parseInt","Date","now","searchSuggest","search_suggestion_box","html","val","css","url","map_geocode_url","encodeURIComponent","get","n","display_name","latlng","LatLng","lon","bounds","boundingbox","suggestion_entry","text","display","position","cursor","padding","background","panTo","fitBounds","fadeOut","append","fadeIn","trigger","leaflet_map_center","center_point","center","radius","getViewAreaRadius","filters_all","branch","branch_id","department","department_id","job","job_id","job_item","job_item_id","getGEOFenceByGEOLocationAndBranchAndDepartmentAndJobAndTask","onResult","result","geo_fences_result","getResult","geo_fence_data","getLayer","clear","geofence_bounds","i","m","geo_fence","geo_type_id","geo_polygon","extend","drawGeoFencePolygon","geo_circle","drawGeoFenceCircle","new_bounds","force","markers","map","m_layer","getBounds","ne","getNorthEast","lat1","lon1","lat2","lon2","Math","acos","sin","cos","grid_parent_container","edit_view_tab","find","buildDistancesGrid","grid_selector","column_info_array","column_info_default","index","label","sortable","formatter","editable","title","edittype","_addColumn2Grid","field","column_info","jQuery","push","getDistancesGridData","TTGrid","gridComplete","setDistancesTableGridSize","multiselect","grid_source","route_array","route","in_punch","route_markers","punch","out_punch","status","first_name","last_name","row_route_info","table_filters","table_entry","filterOutput","in_time_stamp","time_stamp","in_latitude","in_longitude","out_time_stamp","out_latitude","out_longitude","distance","duration","job_manual_id","job_item_manual_id","total_time","getTimeUnit","route_distance","route_duration","TTConvertMapData","distance_in_user_format","foundDuplicateLine","existing_route_info","grid","tab_distances_table","setGridWidth","width","setGridHeight","height","setGridColumnsWidth"],"mappings":"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","file":"attendance-map-MapViewController.bundle.js?v=85d9db9f6464fa6b6266","sourcesContent":["// TODO: This file needs cleaning up of old functions once the Map is known to be stable\n// and that we are certain the old code is no longer needed\nimport { TTMap, TTConvertMapData } from '@/framework/leaflet/leaflet-timetrex';\n\nexport class MapViewController extends BaseViewController {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tel: '#map_view_container',\n\t\t\t// _required_files: {\n\t\t\t// \t15: ['leaflet-timetrex']\n\t\t\t// },\n\t\t\tcolors: [\n\t\t\t\t{ name: 'red', value: '#c0392b' },\n\t\t\t\t{ name: 'orange', value: '#d35400' },\n\t\t\t\t{ name: 'yellow', value: '#f39c12' },\n\t\t\t\t{ name: 'green', value: '#16a085' },\n\t\t\t\t{ name: 'lightblue', value: '#27ae60' },\n\t\t\t\t{ name: 'blue', value: '#2980b9' },\n\t\t\t\t{ name: 'purple', value: '#8e44ad' }\n\t\t\t],\n\t\t\tmoved_unsaved_markers: null, // type object as its an array with named keys\n\t\t\tpunches_dic: {},\n\t\t\tpunch_api: null,\n\t\t\tlayers: null,\n\t\t\tcircle_layers: null,\n\t\t\tdisplay_mode: null,\n\t\t\tgeo_labels: null,\n\t\t\tzoom_changed_timer: null,\n\t\t\tdragend_timer: null,\n\t\t\tpopups: [],\n\t\t\tinfo_panel_dic: {},\n\t\t\tmap_control: null,\n\t\t\tsearch_typing_delay: 0,\n\t\t\tstop_suggestions: false,\n\t\t\tmap_last_bounds: null,\n\t\t\tgeofence_filters: null,\n\t\t\tdistances_grid: null,\n\t\t\tcalculatedRouteData: null,\n\n\t\t\t// General page build section\n\t\t\t// -----------------------------------------------------------------------\n\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinit() {\n\t\tif ( Global.getProductEdition() >= 15 ) {\n\t\t\tthis.edit_only_mode = true;\n\t\t\tthis.moved_unsaved_markers = {};\n\t\t\t//this._super('initialize' );\n\t\t\tthis.edit_view_tpl = 'MapEditView.html';\n\t\t\tthis.permission_id = 'punch';\n\t\t\tthis.sub_view_mode = true;\n\t\t\tthis.viewId = 'Map';\n\t\t\tthis.script_name = 'MapView';\n\t\t\tthis.context_menu_name = $.i18n._( 'Map' );\n\t\t\tthis.navigation_label = $.i18n._( 'Map' ) + ':';\n\t\t\t// Including this.api below to avoid issues with references to this.api.key_name in BaseViewController.onContextMenuClick() in connection with onExportClick()\n\t\t\tthis.punch_api = this.api = TTAPI.APIPunch;\n\t\t\tthis.map_last_bounds = new L.LatLngBounds();\n\t\t\tthis.calculatedRouteData = {};\n\n\t\t\t//all product edition checks in this view should be based off the existance of this.geo_fence_api\n\t\t\tif ( Global.getProductEdition() >= 20 ) {\n\t\t\t\tthis.geo_fence_api = TTAPI.APIGEOFence;\n\t\t\t}\n\n\t\t\tthis.user_api = TTAPI.APIUser;\n\n\t\t\tthis.render();\n\t\t\tthis.buildContextMenu();\n\n\t\t\tthis.initData();\n\t\t\tthis.setSelectRibbonMenuIfNecessary();\n\t\t}\n\t}\n\n\tgetCustomContextMenuModel() {\n\t\tvar context_menu_model = {\n\t\t\texclude: ['default'],\n\t\t\tinclude: [\n\t\t\t\tContextMenuIconName.save,\n\t\t\t\tContextMenuIconName.cancel,\n\t\t\t\tContextMenuIconName.export_excel\n\t\t\t]\n\t\t};\n\n\t\treturn context_menu_model;\n\t}\n\n\tsetEditMenuSaveIcon( context_btn, pId ) {\n\t\t//#2557 - JavaScript exception - Cannot read property 'editPermissionValidate' of null\n\t\tif ( !this.parent_view_controller || !this.parent_view_controller.editPermissionValidate( 'punch' ) ||\n\t\t\tthis.parent_view_controller.is_mass_editing ||\n\t\t\tthis.display_mode === 'geo_fence' ) {\n\t\t\tcontext_btn.addClass( 'invisible-image' );\n\t\t}\n\t\tif ( !this.is_changed || this.parent_view_controller.is_viewing ) {\n\t\t\tcontext_btn.addClass( 'disable-image' );\n\t\t}\n\t}\n\n\tsetDefaultMenuExportIcon( context_btn, grid_selected_length, pId ) {\n\t\t// This function decides whether or not the export icon should be enabled.\n\t\t// Note that it checks for initialized distance grid, and grid stays initialized even when switching tabs,\n\t\t// thus after first click on distance tab, export icon will be enabled on both map and distance tabs.\n\t\tif ( !this.distances_grid ) {\n\t\t\tcontext_btn.addClass( 'disable-image' );\n\t\t}\n\t}\n\n\topenEditView( data ) {\n\t\tthis.incoming_data = data; // dont like using a 'global' variable like this when we dont need to. but we're going inbetween here and base controller.\n\t\tthis.user_generic_data_api = TTAPI.APIUserGenericData;\n\t\tif ( !this.edit_view ) {\n\t\t\tthis.initEditViewUI( this.viewId, this.edit_view_tpl );\n\t\t}\n\t\tthis.initEditView(); // calls to BaseViewController\n\t}\n\n\tbuildEditViewUI() {\n\t\tsuper.buildEditViewUI();\n\n\t\tvar tab_model = {\n\t\t\t'tab_map': {\n\t\t\t\t'label': $.i18n._( 'Map' ),\n\t\t\t\t'init_callback': 'initMapTabView'\n\t\t\t},\n\t\t\t'tab_map_distances': {\n\t\t\t\t'label': $.i18n._( 'Distances' ),\n\t\t\t\t'init_callback': 'initDistancesTableTabView'\n\t\t\t}\n\t\t};\n\n\t\tthis.current_edit_record = {}; // Needed so onTabShow in BaseViewController calls the tab init_callback.\n\t\tthis.setTabModel( tab_model );\n\n\t\t// only trigger map load in specific product editions\n\t\tif ( ( Global.getProductEdition() >= 15 ) ) {\n\t\t\tthis.initLeafletMap();\n\t\t\tthis.populateLeafletMap( this.incoming_data );\n\n\t\t\t// Normally we should avoid accessing the map internal logic directly, but in this case we dont want to hardcode geofence logic into leaflet-timetrex.\n\t\t\t// Note: attach the listener here and not earlier in initLeafletMap, otherwise it gets triggered too often during map set-up.\n\t\t\tthis.map_control._internal._leaflet_map.on( 'moveend', this.callbackMapPanning.bind( this ) );\n\n\t\t\tProgressBar.cancelProgressBar();\n\t\t}\n\t\tthis.setEditViewDataDone();\n\t}\n\n\tinitMapTabView() {\n\t\t// Re-build context menu to update icons after coming from distance tab.\n\t\tthis.buildContextMenu( true );\n\t\tthis.setEditMenu();\n\t}\n\n\tinitDistancesTableTabView() {\n\t\tthis.initDistanceGrid(); // will only init grid if it does not yet exist\n\t\t// Re-build context menu to update icons after coming from distance tab, see setDefaultMenuExportIcon on enabling the export button.\n\t\tthis.buildContextMenu( true );\n\t\tthis.setEditMenu();\n\t}\n\n\tcheckTabPermissions( tab ) {\n\t\tvar retval = true; //Most tabs are shown, so default to true.\n\n\t\tswitch ( tab ) {\n\t\t\t// only show the distances tab if there are routes\n\t\t\tcase 'tab_map_distances':\n\t\t\t\tif ( this.incoming_data\n\t\t\t\t\t&& this.incoming_data.tt_map_data\n\t\t\t\t\t&& this.incoming_data.tt_map_data.tt_routes\n\t\t\t\t\t&& this.incoming_data.tt_map_data.tt_routes.length > 0 ) {\n\t\t\t\t\tretval = true;\n\t\t\t\t} else {\n\t\t\t\t\tretval = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn retval;\n\t}\n\n\tsetEditViewDataDone() {\n\t\tsuper.setEditViewDataDone();\n\t}\n\n\tonSaveClick( ignoreWarning ) {\n\t\t// Parent ViewController handles the actual data save, but callback will come back here after successfull save.\n\t\t// Code note: 'moved_unsaved_markers' is an object, as each marker moved is stored as an attribute on the object. When passed to parent view controller for saving, the data is an array via _.values\n\n\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\tif ( this.parent_view_controller.onMapSaveClick ) {\n\t\t\tthis.parent_view_controller.onMapSaveClick( _.values( this.moved_unsaved_markers ), _onSaveClickCallback );\n\t\t} else {\n\t\t\tDebug.Text( 'ERROR: Save function does not exist on parent ViewController. Missing function or marker should not be set to draggable.', 'MapViewController.js', 'MapViewController', 'onSaveClick', 1 );\n\t\t}\n\n\t\tfunction _onSaveClickCallback() {\n\t\t\tthis_MapViewController.is_changed = false;\n\t\t\tthis_MapViewController.moved_unsaved_markers = {};\n\t\t\tthis_MapViewController.removeEditView();\n\t\t\tProgressBar.closeOverlay();\n\t\t}\n\t}\n\n\tonExportClick( method ) {\n\t\t//Debug.Text('Exporting Grid To CSV: '+method, 'MapViewController.js', 'MapViewController', 'onExportClick', 10);\n\n\t\tProgressBar.showOverlay();\n\t\t// if ( method == undefined ) {\n\t\t// \tmethod = this.api['export' + this.api.key_name];\n\t\t// }\n\t\tif ( this.distances_grid ) {\n\t\t\tthis.distances_grid.grid2csv( 'driving_distances' );\n\t\t} else {\n\t\t\tDebug.Text( 'ERROR: Exporting Grid To CSV Failed, grid does not exist.', 'MapViewController.js', 'MapViewController', 'onExportClick', 1 );\n\t\t}\n\t\tProgressBar.closeOverlay();\n\t}\n\n\t// Map initialisation section\n\t// -----------------------------------------------------------------------\n\n\tinitLeafletMap() {\n\t\tvar osm;\n\t\tif ( APIGlobal.pre_login_data.map_provider == 'timetrex' ) {\n\t\t\tvar osmUrl = APIGlobal.pre_login_data.map_tile_url + '/{z}/{x}/{y}.png?tt_key=' + APIGlobal.pre_login_data.registration_key;\n\t\t\tvar osmAttrib = 'Map data by ©<a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>.';\n\t\t\tosm = new L.TileLayer( osmUrl, { minZoom: 3, maxZoom: 18, attribution: osmAttrib, noWrap: true } );\n\t\t} else {\n\t\t\tosm = L.tileLayer.provider( APIGlobal.pre_login_data.map_provider );\n\t\t}\n\n\t\tthis.map_control = new TTMap( 'map', {\n\t\t\tautoPan: false,\n\t\t\tmaxBoundsViscosity: 1.0,\n\t\t\tlayers: [osm]\n\t\t} );\n\n\t\t// leaflet-timetrex already sets start view to center of US, lets try to find a better location based on company/employee\n\t\tvar current_map_default_coordinates = this.map_control.getCenter();\n\t\tvar alternative_default_coordinates = this.startMapCoordinates();\n\t\t// check if the calculated defaults are any different than map default (US continent center, zoom 4)\n\t\tif ( current_map_default_coordinates.equals( alternative_default_coordinates ) === false ) {\n\t\t\t// found better default coordinates, use those, and zoom in further (10)\n\t\t\tthis.map_control.setView( alternative_default_coordinates, 10 );\n\t\t}\n\n\t\tthis.initRoutingLogic(); // Must be before markers (and routes) are processed\n\n\t\tvar cluster_layer_options = {\n\t\t\tmaxClusterRadius: 55, // make sure not too big, else clusters cant spiderify, not too small for overlap\n\t\t\tspiderfyDistanceMultiplier: 5, // to prevent overlap, but with clickable tooltips to hide, not so much an issue now\n\t\t\tshowCoverageOnHover: false // with small number of markers close together, the polygon lines for bounds look more messy than helpful\n\t\t};\n\n\t\t// this.map_control.createLayer('markers'); // for normal marker layers vs clustered\n\t\tthis.map_control.createLayer( 'markers', {\n\t\t\ttype: 'marker-cluster',\n\t\t\tcluster_layer_options: cluster_layer_options\n\t\t} );\n\n\t\tthis.map_control.createLayer( 'lines' );\n\t\tthis.map_control.createLayer( 'marker-circles' );\n\t\tthis.map_control.createLayer( 'geofences' );\n\n\t\tthis.initSearchBox();\n\t}\n\n\tinitRoutingLogic() {\n\t\tvar routing_options = {\n\t\t\trouting_url: APIGlobal.pre_login_data.map_routing_url\n\t\t};\n\t\tthis.map_control.createLayer( 'routes' );\n\t\tthis.map_control.initRoutingEngine( routing_options );\n\t}\n\n\tpopulateLeafletMap( data ) {\n\n\t\t// TODO-future: Maybe split geofence logic out and make leaflet-timetrex handle this data? Or are geofences the exception to business data\n\t\t// The idea was that everything coming through in 'data' variable would be in TTMap data format.\n\n\t\t// Check if incoming data is geofences, all other 'data' will be in TTMap format.\n\t\tif ( data.length > 0 && data[0].hasOwnProperty( 'geo_type_id' ) ) {\n\t\t\t// this will be using the old data format which has an array only 1 level deep\n\t\t\t// we can call draw Geofences directly without checking api for geofence feature enabled like in initGeoFences(), because this geo_type_id will\n\t\t\t// only be present if triggered from edit geofence UI, which itself will check for the feature permissions.\n\t\t\tvar geo_bounds = this.drawGeoFences( data );\n\t\t\tthis.extendMapBounds( geo_bounds );\n\t\t\treturn true;\n\t\t\t// end geo-fence logic. Do not continue as we are only wanting to plot geofences.\n\t\t}\n\n\t\t// Trigger the plotting of the organised data onto the map.\n\t\tif ( !data || !data.options || !data.tt_map_data ) {\n\t\t\tDebug.Text( 'Error: TTMapData is in an invalid format. Abort.', 'MapViewController.js', 'MapViewController', 'populateLeafletMap', 1 );\n\t\t\treturn false;\n\t\t}\n\n\t\t// Temp for debug during dev\n\t\twindow.map_control = this.map_control;\n\n\t\t// Options Setting for addTTMap function\n\t\tvar options = {\n\t\t\tcallbackDistanceResults: this.callbackDistanceResults.bind( this )\n\t\t};\n\n\t\t// Marker Processing\n\n\t\tif ( data.options.single_marker_draggable === true // This prevents new marker & save marker on read only views. As of now, only timesheet and punch view can edit/add latlng locations\n\t\t\t&& data.tt_map_data.tt_markers\n\t\t\t&& data.tt_map_data.tt_markers.length === 0\n\t\t) {\n\t\t\t// Initiate new marker UI.\n\t\t\t// No markers found in data, this may be a new punch record being created, or existing punch with no gps.\n\t\t\t// Note, we no longer need to check for id to identify new punch records. Previous code needed to know, as new punches required data to be\n\t\t\t// passed back to parent controller, and existing punch map data would be directly saved by MapViewController.\n\t\t\t// Now, we always pass back, and parent does saving, not MapViewController. So new punches and existing punch without gps will be treated the same.\n\t\t\t// Note, this logic may need to change when mass edit is enabled. As that would also deal with single records.\n\n\t\t\tvar marker_options = {\n\t\t\t\tdraggable: true,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tonMarkerDragend: this.callbackTriggerMarkerMove.bind( this ),\n\t\t\t\t\tonMarkerAddNew: this.callbackTriggerMarkerMove.bind( this )\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.map_control.addMarkerInteractive( marker_options );\n\t\t\tDebug.Text( 'Note: No markers found in data. May be new record/existing with no gps', 'MapViewController.js', 'MapViewController', 'populateLeafletMap', 10 );\n\t\t}\n\n\t\t// Special logic to prep data further when there is only one marker. Related to tracking markers that have been moved.\n\t\tif ( data.tt_map_data.tt_markers && data.tt_map_data.tt_markers.length === 1 ) {\n\t\t\tdata.tt_map_data.tt_markers[0].callbacks = data.tt_map_data.tt_markers[0].callbacks || {};\n\n\t\t\t// check if onMarkerDragend already exists on marker data from parent view controller, add more checks if more callbacks added to 'this.mapCallbacks'\n\t\t\t// TODO-future: Instead of overwriting, add the callbacks in a chain? Requires future refactor.\n\t\t\tif ( data.tt_map_data.tt_markers[0].callbacks.onMarkerDragend ) {\n\t\t\t\tDebug.Text( 'Error: Duplicate onMarkerDragEnd callback found. Overwriting parent view callback.', 'MapViewController.js', 'MapViewController', 'populateLeafletMap', 1 );\n\t\t\t}\n\n\t\t\tdata.tt_map_data.tt_markers[0].callbacks.onMarkerDragend = this.callbackTriggerMarkerMove.bind( this );\n\n\t\t\t// As there is only one marker, center map on marker and zoom in to max -2 zoom (-2 is so we dont just see blank in rural)\n\t\t\t//this.map_control.setView( data.tt_map_data.tt_markers[0].latlng, 16 );\n\t\t\t// don't set specific zoom for single marker. let generateMarkerBounds() handle all that\n\t\t}\n\n\t\tif ( data.tt_map_data.tt_markers && data.tt_map_data.tt_markers.length > 0 ) {\n\t\t\t// Data modifications/checks done, send to TTMap to plot on map\n\t\t\tthis.map_control.addTTMapData( data.tt_map_data, options );\n\t\t} else {\n\t\t\t// No data available for map. Nothing to plot\n\t\t\tDebug.Text( 'Error: No data to plot for map.', 'MapViewController.js', 'MapViewController', 'populateLeafletMap', 1 );\n\t\t}\n\n\t\tvar marker_bounds = this.generateMarkerBounds();\n\t\tthis.extendMapBounds( marker_bounds );\n\n\t\t// Geofence Processing\n\n\t\t// check geofence data is in correct format (object with keys, not an array)\n\t\tif ( data.geofence_filters\n\t\t\t&& Object.keys( data.geofence_filters ).length > 0\n\t\t\t&& data.geofence_filters.length === undefined // means its not an array\n\t\t) {\n\t\t\tthis.geofence_filters = data.geofence_filters;\n\n\t\t\t//1 second later to make sure map is draw, the bounds got value\n\t\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\t\t// this setTimeout function was in the old code, but does not seem needed? Test it out for a while.\n\t\t\t// if commented out, it seems to show more bounds, and less bounds if left in.\n\t\t\t// maybe due to viewpoint not including it the marker first? Re-visit after rest of map is done.\n\t\t\tsetTimeout( function() {\n\t\t\t\t// This will load geo fences, then draw, then extend the bounds\n\t\t\t\tthis_MapViewController.initGeoFences( 'initial-map-load' );\n\t\t\t}, 1000 );\n\n\t\t}\n\t}\n\n\tcallbackTriggerMarkerMove( marker, new_position ) {\n\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\tthis_MapViewController.is_changed = true;\n\t\tthis_MapViewController.setEditMenu();\n\t\tvar marker_punch_id = marker.options.punch_id;\n\n\t\t// add the info to the array which tracks moved markers. Used later by the save function\n\t\tthis_MapViewController.moved_unsaved_markers[marker_punch_id] = {\n\t\t\tid: marker_punch_id,\n\t\t\tlatitude: new_position.lat.toFixed( 6 ), // database only stores to 6 decimal points. Note potential issues with up/down rounding with toFixed due to binary storage with floats, not too important here though\n\t\t\tlongitude: new_position.lng.toFixed( 6 ), // database only stores to 6 decimal points. Note potential issues with up/down rounding with toFixed, due to binary storage with floats, not too important here though\n\t\t\tposition_accuracy: 0\n\t\t};\n\t\tDebug.Text( 'Marker position change:\\nOriginal: ' + marker.getLatLng().toString() + '\\n=> New: ' + new_position.toString(), 'MapViewController.js', 'MapViewController', 'callbackTriggerMarkerMove', 10 );\n\t}\n\n\t// Callbacks from the map\n\t// -----------------------------------------------------------------------\n\n\tcallbackMapPanning() {\n\t\t// debounce the call so that fast zooming/panning like scroll-zooming does not trigger too many API calls in succession. As well as initial map changes during map load.\n\t\tclearTimeout( this._mapZoomEndTimer );\n\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\tthis._mapZoomEndTimer = setTimeout( function() {\n\t\t\tthis_MapViewController.initGeoFences( 'map-panning-end' );\n\t\t}, 500 );\n\t}\n\n\t// When results come in for a specific route, this callback should be called, so that it can track all distances and collate. As some user journeys will share route data.\n\tcallbackDistanceResults( ref_id, route_info ) {\n\t\tthis.calculatedRouteData[ref_id] = route_info;\n\t}\n\n\t// Map search bar section\n\t// -----------------------------------------------------------------------\n\n\tinitSearchBox() {\n\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\tvar pac_input = $( '#pac-input' );\n\t\tpac_input.bind( 'focus', function( e ) {\n\t\t\t$( this ).select();\n\t\t} );\n\n\t\tpac_input.bind( 'keyup', function( e ) {\n\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t$( '#suggestion-box div' ).first().click();\n\t\t\t} else {\n\t\t\t\tthis_MapViewController.search_key_delay = parseInt( Date.now() );\n\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\tif ( parseInt( Date.now() ) - this_MapViewController.search_key_delay >= 250 ) {\n\t\t\t\t\t\tthis_MapViewController.stop_suggestions = false;\n\t\t\t\t\t\tthis_MapViewController.searchSuggest();\n\t\t\t\t\t}\n\t\t\t\t}, 300 );\n\t\t\t}\n\t\t} );\n\t}\n\n\tsearchSuggest() {\n\t\tvar search_suggestion_box = $( '#suggestion-box' );\n\t\tsearch_suggestion_box.html( '' );\n\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\tvar pac_input = $( '#pac-input' );\n\t\tif ( pac_input.val().length >= 3 ) {\n\t\t\tpac_input.css( 'border', '1px dotted green' );\n\n\t\t\tvar url = APIGlobal.pre_login_data.map_geocode_url + '?q=' + encodeURIComponent( pac_input.val() ) + '&format=json&tt_key=' + APIGlobal.pre_login_data.registration_key;\n\n\t\t\t$.get( url, function( data ) {\n\t\t\t\tpac_input.css( 'border', 'none' );\n\t\t\t\tif ( this_MapViewController.stop_suggestions === false ) {\n\t\t\t\t\tsearch_suggestion_box.html( '' );\n\t\t\t\t\tfor ( var n in data ) {\n\t\t\t\t\t\tvar name = data[n].display_name;\n\t\t\t\t\t\tvar latlng = new L.LatLng( data[n].lat, data[n].lon );\n\t\t\t\t\t\tvar bounds = data[n].boundingbox;\n\t\t\t\t\t\tvar lat = data[n].lat;\n\t\t\t\t\t\tvar lng = data[n].lon;\n\t\t\t\t\t\tvar suggestion_entry = $( '<div class=\"map-suggest\"></div>' );\n\t\t\t\t\t\tsuggestion_entry.text( name );\n\t\t\t\t\t\tsuggestion_entry.data( 'latlng', latlng );\n\t\t\t\t\t\tsuggestion_entry.data( 'bounds', bounds );\n\t\t\t\t\t\tsuggestion_entry.css( {\n\t\t\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\tpadding: '7px',\n\t\t\t\t\t\t\tbackground: 'white'\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tsuggestion_entry.on( 'click', function() {\n\t\t\t\t\t\t\t// var address = $( this ).text(); // seems not to be used, was in original code, so leaving for future reference until testing complete\n\t\t\t\t\t\t\tvar latlng = $( this ).data( 'latlng' );\n\t\t\t\t\t\t\tvar boundingbox = $( this ).data( 'bounds' );\n\t\t\t\t\t\t\tvar bounds = new L.LatLngBounds( [boundingbox[0], boundingbox[2]], [boundingbox[1], boundingbox[3]] );\n\t\t\t\t\t\t\tthis_MapViewController.map_control.panTo( latlng );\n\t\t\t\t\t\t\tthis_MapViewController.map_control.fitBounds( bounds, { padding: [20, 20] } );\n\t\t\t\t\t\t\tthis_MapViewController.map_control.panTo( bounds.getCenter() );\n\t\t\t\t\t\t\tsearch_suggestion_box.fadeOut( 'fast' );\n\t\t\t\t\t\t\tsearch_suggestion_box.html( '' );\n\t\t\t\t\t\t\tthis_MapViewController.stop_suggestions = true;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tsearch_suggestion_box.append( suggestion_entry );\n\t\t\t\t\t\tsearch_suggestion_box.fadeIn( 'fast' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t// Geo fence section\n\t// -----------------------------------------------------------------------\n\n\tinitGeoFences( trigger ) {\n\t\t// Debug.Text( 'Init GeoFences', 'MapViewController.js', 'MapViewController', '_initGeoFence', 10 );\n\n\t\tif ( this.geo_fence_api && this.geofence_filters ) { //initialize function checks product edition for the inclusion of the geo_fence_api\n\t\t\t// Debug.Text( 'Init GeoFences: Data detected.', 'MapViewController.js', 'MapViewController', '_initGeoFence', 10 );\n\t\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\t\tvar leaflet_map_center = this_MapViewController.map_control.getCenter();\n\n\t\t\tvar center_point = {\n\t\t\t\tcenter: [leaflet_map_center.lat, leaflet_map_center.lng],\n\t\t\t\tradius: this.getViewAreaRadius() // TODO!\n\t\t\t};\n\n\t\t\tvar filters_all = this.geofence_filters;\n\t\t\tvar branch = filters_all.branch_id;\n\t\t\tvar department = filters_all.department_id;\n\t\t\tvar job = filters_all.job_id;\n\t\t\tvar job_item = filters_all.job_item_id;\n\n\t\t\tthis_MapViewController.geo_fence_api.getGEOFenceByGEOLocationAndBranchAndDepartmentAndJobAndTask( center_point, branch, department, job, job_item, {\n\t\t\t\tonResult: function( result ) {\n\t\t\t\t\tvar geo_fences_result = result.getResult();\n\t\t\t\t\tif ( geo_fences_result && geo_fences_result.length > 0 ) {\n\t\t\t\t\t\t// Geofences found, lets draw them on the map\n\t\t\t\t\t\t// TODO: Also clear the old fences first!\n\t\t\t\t\t\tvar geo_bounds = this_MapViewController.drawGeoFences( geo_fences_result ); // don't clean area;\n\n\t\t\t\t\t\t// Decide whether we need to expand the map bounds\n\t\t\t\t\t\tif ( trigger === 'initial-map-load' ) {\n\t\t\t\t\t\t\tthis_MapViewController.extendMapBounds( geo_bounds );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// do nothing as we only want to edit bounds on load. On panning we just want to re-generate fences for the view area.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t} else {\n\t\t\tDebug.Text( '_InitGeoFence() Denied. Functionality unavailable in this product edition.', 'MapViewController.js', 'MapViewController', '_initGeoFence', 10 );\n\t\t}\n\t}\n\n\tdrawGeoFences( geo_fence_data ) {\n\t\tif ( geo_fence_data && geo_fence_data.length > 0 ) {\n\t\t\tthis.map_control.getLayer( 'geofences' ).clear();\n\t\t\tthis.geo_labels = [];\n\t\t\tvar geofence_bounds = new L.LatLngBounds();\n\t\t\tfor ( var i = 0, m = geo_fence_data.length; i < m; i++ ) {\n\t\t\t\tvar geo_fence = geo_fence_data[i];\n\t\t\t\tif ( geo_fence.geo_type_id == 10 && geo_fence.geo_polygon ) {\n\t\t\t\t\tgeofence_bounds.extend( this.map_control.drawGeoFencePolygon( geo_fence ) );\n\t\t\t\t} else if ( geo_fence.geo_type_id == 20 && geo_fence.geo_circle ) {\n\t\t\t\t\tgeofence_bounds.extend( this.map_control.drawGeoFenceCircle( geo_fence ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn geofence_bounds;\n\t\t}\n\t}\n\n\t// Map bounds section\n\t// -----------------------------------------------------------------------\n\n\t/**\n\t * extendMapBounds\n\t * will fit map to specified bounds, by extending blank/existing bounds, or overriding bounds\n\t * @param new_bounds the bounds to existing existing or force\n\t * @param [force] optional boolean to prevent extending, and just overriding with new\n\t */\n\textendMapBounds( new_bounds, force ) {\n\t\tif ( new_bounds === undefined ) {\n\t\t\treturn false;\n\t\t}\n\t\tvar bounds;\n\t\tif ( force ) { // if force true, it means dont extend, override the bounds fresh\n\t\t\tbounds = new L.LatLngBounds();\n\t\t} else {\n\t\t\tbounds = this.map_last_bounds;\n\t\t}\n\t\tbounds.extend( new_bounds );\n\t\tthis.map_last_bounds = bounds;\n\n\t\t// Setting max zoom to 14 for two reasons: -- now 13, to trigger the move to bounds on a test (temp)\n\t\t// 1. to ensure radius for checking nearby geofences is high enough to include them\n\t\t// 2. to reduce chances of markers in the middle of nowhere showing as zoomed in blank maps.\n\t\tthis.map_control.fitBounds( bounds, { padding: [15, 15], maxZoom: 13 } );\n\t\treturn true;\n\t}\n\n\tgenerateMarkerBounds() {\n\t\tvar markers = Object.values( this.map_control.getLayer( 'markers' ).get() );\n\t\tif ( markers.length < 1 ) {\n\t\t\t// no markers to do bounds on. exit function. Not necessarily an error state.\n\t\t\treturn;\n\t\t}\n\n\t\tvar marker_bounds = new L.LatLngBounds();\n\t\t// for each marker, extend the bounds to include it\n\t\tmarkers.map( function( m_layer ) {\n\t\t\tmarker_bounds.extend( m_layer.getLatLng() );\n\t\t} );\n\t\treturn marker_bounds;\n\t}\n\n\tgetViewAreaRadius() {\n\t\tvar bounds = this.map_control.getBounds();\n\t\tif ( !bounds ) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar center = bounds.getCenter();\n\t\tvar ne = bounds.getNorthEast();\n\t\tvar r = 3963.0;\n\t\tvar lat1 = center.lat / 57.2958;\n\t\tvar lon1 = center.lng / 57.2958;\n\t\tvar lat2 = ne.lat / 57.2958;\n\t\tvar lon2 = ne.lng / 57.2958;\n\t\t// distance = circle radius from center to Northeast corner of bounds\n\t\tvar dis = r * Math.acos( Math.sin( lat1 ) * Math.sin( lat2 ) +\n\t\t\tMath.cos( lat1 ) * Math.cos( lat2 ) * Math.cos( lon2 - lon1 ) );\n\t\treturn dis * 1609.344;\n\t}\n\n\t// setDefaultMenuMapIcon: function ( context_btn ) {\n\t// \tif ( Global.getProductEdition() <= 10 ) {\n\t// \t\tcontext_btn.addClass( 'invisible-image' );\n\t// \t}\n\t//\n\t// \tvar show = false;\n\t// \tif ( this.grid ) {\n\t// \t\tvar selected_items = this.getSelectedItems();\n\t// \t\tDebug.Arr( selected_items, 'selected items', 'BaseViewController.js', 'BaseViewController', 'setDefaultMenuMapIcon', 10 );\n\t// \t\tif ( selected_items.length > 0 ) {\n\t// \t\t\tcontext_btn.removeClass( 'disable-image' );\n\t// \t\t} else {\n\t// \t\t\tcontext_btn.addClass( 'disable-image' );\n\t// \t\t}\n\t// \t}\n\t// },\n\n\t// Distance Table Code\n\t// -----------------------------------------------------------------------\n\n\tinitDistanceGrid() {\n\t\t// only init grid if it does not yet exist\n\t\tif ( !this.distances_grid ) {\n\t\t\tvar grid_parent_container = this.edit_view_tab.find( '#tab_map_distances_content_div' );\n\t\t\tthis.distances_grid = this.buildDistancesGrid( 'distance_grid_table' );\n\t\t\tgrid_parent_container.append( this.distances_grid );\n\t\t}\n\t}\n\n\tbuildDistancesGrid( grid_selector ) {\n\t\tvar column_info_array = [];\n\t\tvar column_info_default = {\n\t\t\tname: 'default',\n\t\t\tindex: 'default',\n\t\t\tlabel: $.i18n._( 'Default' ),\n\t\t\t// width: 100,\n\t\t\tsortable: true,\n\t\t\tformatter: 'select',\n\t\t\teditable: false,\n\t\t\ttitle: false,\n\t\t\tedittype: 'select'\n\t\t};\n\n\t\tfunction _addColumn2Grid( field, label, options ) {\n\t\t\tvar column_info = {\n\t\t\t\tname: field,\n\t\t\t\tindex: field,\n\t\t\t\tlabel: label // do not put the $.i18n reference directly in the function, as it will interfere with the extraction of language labels for translation files\n\t\t\t};\n\t\t\tif ( options ) {\n\t\t\t\tjQuery.extend( column_info, options ); // have the flexibility here to add individual column options now that we refactored to a function\n\t\t\t}\n\t\t\tcolumn_info_array.push( jQuery.extend( {}, column_info_default, column_info ) );\n\t\t}\n\n\t\t_addColumn2Grid( 'first_name', $.i18n._( 'First Name' ) );\n\t\t_addColumn2Grid( 'last_name', $.i18n._( 'Last Name' ) );\n\t\t_addColumn2Grid( 'branch', $.i18n._( 'Branch' ) );\n\t\t_addColumn2Grid( 'department', $.i18n._( 'Department' ) );\n\t\t_addColumn2Grid( 'job_manual_id', $.i18n._( 'Job Code' ) );\n\t\t_addColumn2Grid( 'job', $.i18n._( 'Job' ) );\n\t\t_addColumn2Grid( 'job_item_manual_id', $.i18n._( 'Task Code' ) );\n\t\t_addColumn2Grid( 'job_item', $.i18n._( 'Task' ) );\n\t\t_addColumn2Grid( 'in_time_stamp', $.i18n._( 'In Punch' ) );\n\t\t_addColumn2Grid( 'out_time_stamp', $.i18n._( 'Out Punch' ) );\n\t\t_addColumn2Grid( 'total_time', $.i18n._( 'Total Time' ) );\n\t\t_addColumn2Grid( 'duration', $.i18n._( 'Driving Duration' ) );\n\t\t_addColumn2Grid( 'distance', $.i18n._( 'Driving Distance' ) );\n\t\t_addColumn2Grid( 'in_latitude', $.i18n._( 'In Latitude' ) );\n\t\t_addColumn2Grid( 'in_longitude', $.i18n._( 'In Longitude' ) );\n\t\t_addColumn2Grid( 'out_latitude', $.i18n._( 'Out Latitude' ) );\n\t\t_addColumn2Grid( 'out_longitude', $.i18n._( 'Out Longitude' ) );\n\n\t\t// Future option. If implementing, create the function below based off showEmployeeSettingNoResultCover()\n\t\t// if ( data.length < 1 ) {\n\t\t// \tthis.showDistanceTableNoResultCover();\n\t\t// }\n\n\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\tvar data = this.getDistancesGridData();\n\n\t\treturn new TTGrid( grid_selector, {\n\t\t\tdata: data,\n\t\t\tgridComplete: function() {\n\t\t\t\tthis_MapViewController.setDistancesTableGridSize();\n\t\t\t},\n\t\t\tmultiselect: false\n\t\t}, column_info_array );\n\t}\n\n\tgetDistancesGridData() {\n\t\tvar this_MapViewController = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\tvar grid_source = [];\n\t\tvar route_array = this.incoming_data.tt_map_data.tt_routes;\n\n\t\tif ( !route_array || route_array.length < 1 ) {\n\t\t\t// error? there are no calculated routes. No need to error for now, as its likely this will be handled earlier.\n\t\t\treturn false;\n\t\t}\n\n\t\tObject.values( route_array ).map( function( route ) {\n\t\t\tvar in_punch = route.route_markers[0].punch;\n\t\t\tvar out_punch = route.route_markers[1].punch;\n\n\t\t\tif ( in_punch.status !== 'In'\n\t\t\t\t|| out_punch.status !== 'Out' ) {\n\t\t\t\tDebug.Text( 'ERROR: in_punch and out_punch have data mismatch punch In/Out status', 'MapViewController.js', 'MapViewController', 'getDistancesGridData', 1 );\n\t\t\t}\n\n\t\t\t// For some of the data we will only refer to in_punch. Therefore, make sure the data matches.\n\t\t\tif ( in_punch.first_name !== out_punch.first_name\n\t\t\t\t|| in_punch.last_name !== out_punch.last_name\n\t\t\t\t|| in_punch.branch !== out_punch.branch\n\t\t\t\t|| in_punch.department !== out_punch.department\n\t\t\t\t|| in_punch.job !== out_punch.job\n\t\t\t\t|| in_punch.job_item !== out_punch.job_item\n\t\t\t) {\n\t\t\t\tDebug.Text( 'ERROR: in_punch and out_punch have data mismatch.', 'MapViewController.js', 'MapViewController', 'getDistancesGridData', 1 );\n\t\t\t}\n\n\t\t\tvar table_filters = [false, undefined, null, 'false', 'undefined', 'null'];\n\t\t\tvar table_entry = {\n\t\t\t\tfirst_name: Global.filterOutput( in_punch.first_name, table_filters ),\n\t\t\t\tlast_name: Global.filterOutput( in_punch.last_name, table_filters ),\n\t\t\t\tin_time_stamp: Global.filterOutput( in_punch.time_stamp, table_filters ),\n\t\t\t\tin_latitude: Global.filterOutput( in_punch.latitude, table_filters ),\n\t\t\t\tin_longitude: Global.filterOutput( in_punch.longitude, table_filters ),\n\t\t\t\tout_time_stamp: Global.filterOutput( out_punch.time_stamp, table_filters ),\n\t\t\t\tout_latitude: Global.filterOutput( out_punch.latitude, table_filters ),\n\t\t\t\tout_longitude: Global.filterOutput( out_punch.longitude, table_filters ),\n\t\t\t\tdistance: '',\n\t\t\t\tduration: '',\n\t\t\t\tbranch: Global.filterOutput( in_punch.branch, table_filters ),\n\t\t\t\tdepartment: Global.filterOutput( in_punch.department, table_filters ),\n\t\t\t\tjob_manual_id: Global.filterOutput( in_punch.job_manual_id, table_filters ),\n\t\t\t\tjob: Global.filterOutput( in_punch.job, table_filters ),\n\t\t\t\tjob_item_manual_id: Global.filterOutput( in_punch.job_item_manual_id, table_filters ),\n\t\t\t\tjob_item: Global.filterOutput( in_punch.job_item, table_filters ),\n\t\t\t\ttotal_time: Global.filterOutput( Global.getTimeUnit( in_punch.total_time ), table_filters )\n\t\t\t};\n\t\t\tvar row_route_info;\n\t\t\t// if route info exists, set it, else try to acquire it from the main routes\n\t\t\tif ( route.route_distance && route.route_duration ) {\n\t\t\t\trow_route_info = {\n\t\t\t\t\tdistance: TTConvertMapData.convertMetersToUserUnits( route.route_distance ).distance_in_user_format,\n\t\t\t\t\tduration: Global.getTimeUnit( route.route_duration )\n\t\t\t\t};\n\t\t\t\tjQuery.extend( table_entry, row_route_info );\n\n\t\t\t\t// check for duplicate route flag, if there is one, look-up the reference for that duplicate route, and request the route info.\n\t\t\t} else if ( route.foundDuplicateLine && this_MapViewController.calculatedRouteData[route.ref_id] ) {\n\t\t\t\tvar existing_route_info = this_MapViewController.calculatedRouteData[route.ref_id];\n\n\t\t\t\trow_route_info = {\n\t\t\t\t\tdistance: TTConvertMapData.convertMetersToUserUnits( existing_route_info.route_distance ).distance_in_user_format,\n\t\t\t\t\tduration: Global.getTimeUnit( existing_route_info.route_duration )\n\t\t\t\t};\n\t\t\t\tjQuery.extend( table_entry, row_route_info );\n\t\t\t} else {\n\t\t\t\tDebug.Text( 'Note: No distance data found for entry. Leaving as empty strings', 'MapViewController.js', 'MapViewController', 'getDistancesGridData', 10 );\n\t\t\t}\n\t\t\tgrid_source.push( table_entry );\n\t\t} );\n\n\t\treturn grid_source;\n\t}\n\n\tsetDistancesTableGridSize( grid ) {\n\t\tif ( !grid ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tab_distances_table = this.edit_view.find( '#tab_map_distances_content_div' );\n\t\tgrid.grid.setGridWidth( tab_distances_table.width() );\n\t\tgrid.grid.setGridHeight( tab_distances_table.height() );\n\t\tgrid.setGridColumnsWidth();\n\t}\n\n}\n"],"sourceRoot":""}