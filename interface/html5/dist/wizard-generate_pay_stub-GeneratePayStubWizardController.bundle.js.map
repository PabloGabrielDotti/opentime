{"version":3,"sources":["webpack://timetrex/./interface/html5/views/wizard/generate_pay_stub/GeneratePayStubWizardController.js"],"names":["GeneratePayStubWizardController","BaseWizardController","options","_","defaults","el","super","this","title","$","i18n","steps","current_step","render","initCurrentStep","$this","content_div","empty","stepsWidgetDic","label","getLabel","text","append","form_item","Global","loadWidget","form_item_label","find","form_item_input_div","a_combobox","getAComboBox","TTAPI","APIPayPeriod","unbind","bind","e","target","saveCurrentStep","onPayPeriodChange","setPayRun","getValue","getField","combobox","getComboBox","onPayrollTypeChange","date_picker","getDatePicker","hide","textInput","loadWidgetByName","FormItemType","TEXT_INPUT","TTextInput","field","width","APIUser","div","pay_period_id","api","APIPayStub","step_2_ui","getCurrentPayRun","onResult","result","data","getResult","run_id","setValue","current_step_data","stepsDataDic","current_step_ui","pay_period_ids","array_unique","user_id","user_ids","onDoneClick","TAlertManager","showAlert","onCloseClick","type_id","transaction_date","cal_pay_stub_amendment","carry_forward_to_date","setIsIdempotent","generatePayStubs","isValid","user_generic_status_batch_id","getAttributeInAPIDetails","TTUUID","isUUID","zero_id","not_exist_id","UserGenericStatusWindowController","open","filter","filter_data","users","value","status_id","IndexViewController","goToView","call_back","refresh","newest_pay_period","getNewestPayPeriod","selected_pay_periods","show","strToDateTime","format","Date","pay_periods","i","length","item","push","date","getTime","api_pay_period","args","id","getPayPeriod","status_id_array","buildPayPeriodStatusIdArray","getOptions","result_data","type_array","buildRecordArray","setSourceData","default_data","getDefaultData"],"mappings":"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","file":"wizard-generate_pay_stub-GeneratePayStubWizardController.bundle.js?v=332e3ad1da0bc8e8832f","sourcesContent":["export class GeneratePayStubWizardController extends BaseWizardController {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tel: '.wizard-bg'\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinit( options ) {\n\t\t//this._super('initialize', options );\n\n\t\tthis.title = $.i18n._( 'Generate Pay Stub Wizard' );\n\t\tthis.steps = 3;\n\t\tthis.current_step = 1;\n\n\t\tthis.render();\n\t}\n\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.initCurrentStep();\n\t}\n\n\tbuildCurrentStepUI() {\n\t\tvar $this = this;\n\t\tthis.content_div.empty();\n\n\t\tthis.stepsWidgetDic[this.current_step] = {};\n\n\t\tswitch ( this.current_step ) {\n\t\t\tcase 1:\n\t\t\t\tvar label = this.getLabel();\n\t\t\t\tlabel.text( $.i18n._( 'Generate pay stubs for individual employees when manual modifications or a termination occurs. Use Payroll -> Process Payroll if you wish to generate pay stubs for all employees instead.' ) );\n\n\t\t\t\tthis.content_div.append( label );\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\n\t\t\t\tlabel = this.getLabel();\n\t\t\t\tlabel.text( $.i18n._( 'Select one or more pay periods and choose a payroll run type' ) );\n\t\t\t\tthis.content_div.append( label );\n\t\t\t\t// Pay period\n\t\t\t\tvar form_item = $( Global.loadWidget( 'global/widgets/wizard_form_item/WizardFormItem.html' ) );\n\t\t\t\tvar form_item_label = form_item.find( '.form-item-label' );\n\t\t\t\tvar form_item_input_div = form_item.find( '.form-item-input-div' );\n\t\t\t\tvar a_combobox = this.getAComboBox( TTAPI.APIPayPeriod, true, 'global_Pay_period', 'pay_period_id' );\n\t\t\t\ta_combobox.unbind( 'formItemChange' ).bind( 'formItemChange', function( e, target ) {\n\t\t\t\t\t$this.saveCurrentStep();\n\t\t\t\t\t$this.onPayPeriodChange( true );\n\t\t\t\t\t$this.setPayRun( target.getValue() );\n\t\t\t\t} );\n\t\t\t\tform_item_label.text( $.i18n._( 'Pay Period' ) + ': ' );\n\t\t\t\tform_item_input_div.append( a_combobox );\n\t\t\t\tthis.content_div.append( form_item );\n\t\t\t\tthis.stepsWidgetDic[this.current_step][a_combobox.getField()] = a_combobox;\n\n\t\t\t\t// Payroll Run Type\n\t\t\t\tform_item = $( Global.loadWidget( 'global/widgets/wizard_form_item/WizardFormItem.html' ) );\n\t\t\t\tform_item_label = form_item.find( '.form-item-label' );\n\t\t\t\tform_item_input_div = form_item.find( '.form-item-input-div' );\n\t\t\t\tvar combobox = this.getComboBox( 'type_id', false );\n\t\t\t\tform_item_label.text( $.i18n._( 'Payroll Run Type' ) + ': ' );\n\t\t\t\tform_item_input_div.append( combobox );\n\t\t\t\tthis.content_div.append( form_item );\n\t\t\t\tthis.stepsWidgetDic[this.current_step][combobox.getField()] = combobox;\n\n\t\t\t\tcombobox.unbind( 'formItemChange' ).bind( 'formItemChange', function( e, target ) {\n\t\t\t\t\t$this.saveCurrentStep();\n\t\t\t\t\t$this.onPayrollTypeChange( true );\n\t\t\t\t} );\n\n\t\t\t\t//Carry Forward to Date\n\t\t\t\tform_item = $( Global.loadWidget( 'global/widgets/wizard_form_item/WizardFormItem.html' ) );\n\t\t\t\tform_item_label = form_item.find( '.form-item-label' );\n\t\t\t\tform_item_input_div = form_item.find( '.form-item-input-div' );\n\t\t\t\tvar date_picker = this.getDatePicker( 'carry_forward_to_date' );\n\t\t\t\tform_item_label.text( $.i18n._( 'Carry Forward Adjustments to' ) + ': ' );\n\t\t\t\tform_item_input_div.append( date_picker );\n\t\t\t\tthis.content_div.append( form_item );\n\t\t\t\tthis.stepsWidgetDic[this.current_step][date_picker.getField()] = date_picker;\n\t\t\t\tthis.stepsWidgetDic[this.current_step][date_picker.getField() + '_row'] = form_item;\n\n\t\t\t\tform_item.hide();\n\n\t\t\t\t//Transaction Date\n\t\t\t\tform_item = $( Global.loadWidget( 'global/widgets/wizard_form_item/WizardFormItem.html' ) );\n\t\t\t\tform_item_label = form_item.find( '.form-item-label' );\n\t\t\t\tform_item_input_div = form_item.find( '.form-item-input-div' );\n\t\t\t\tdate_picker = this.getDatePicker( 'transaction_date' );\n\t\t\t\tform_item_label.text( $.i18n._( 'Transaction Date' ) + ': ' );\n\t\t\t\tform_item_input_div.append( date_picker );\n\t\t\t\tthis.content_div.append( form_item );\n\t\t\t\tthis.stepsWidgetDic[this.current_step][date_picker.getField()] = date_picker;\n\t\t\t\tthis.stepsWidgetDic[this.current_step][date_picker.getField() + '_row'] = form_item;\n\n\t\t\t\tform_item.hide();\n\n\t\t\t\t//Payroll Run #\n\t\t\t\tform_item = $( Global.loadWidget( 'global/widgets/wizard_form_item/WizardFormItem.html' ) );\n\t\t\t\tform_item_label = form_item.find( '.form-item-label' );\n\t\t\t\tform_item_input_div = form_item.find( '.form-item-input-div' );\n\t\t\t\tvar textInput = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\t\t\t\ttextInput = textInput.TTextInput( {\n\t\t\t\t\tfield: 'run_id',\n\t\t\t\t\twidth: 20\n\t\t\t\t} );\n\t\t\t\tform_item_label.text( $.i18n._( 'Payroll Run' ) + ': ' );\n\t\t\t\tform_item_input_div.append( textInput );\n\t\t\t\tthis.content_div.append( form_item );\n\t\t\t\tthis.stepsWidgetDic[this.current_step][textInput.getField()] = textInput;\n\t\t\t\tthis.stepsWidgetDic[this.current_step][textInput.getField() + '_row'] = form_item;\n\n\t\t\t\tform_item.hide();\n\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tlabel = this.getLabel();\n\t\t\t\tlabel.text( $.i18n._( 'Select one or more employees' ) );\n\n\t\t\t\ta_combobox = this.getAComboBox( TTAPI.APIUser, true, 'global_user', 'user_id', true );\n\t\t\t\tvar div = $( '<div class=\\'wizard-acombobox-div\\'></div>' );\n\t\t\t\tdiv.append( a_combobox );\n\n\t\t\t\tthis.stepsWidgetDic[this.current_step] = {};\n\t\t\t\tthis.stepsWidgetDic[this.current_step][a_combobox.getField()] = a_combobox;\n\n\t\t\t\tthis.content_div.append( label );\n\t\t\t\tthis.content_div.append( div );\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetPayRun( pay_period_id ) {\n\t\tvar api = TTAPI.APIPayStub;\n\t\tvar step_2_ui = this.stepsWidgetDic[2];\n\t\tapi.getCurrentPayRun( pay_period_id, {\n\t\t\tonResult: function( result ) {\n\t\t\t\tvar data = result.getResult();\n\t\t\t\tstep_2_ui.run_id.setValue( data );\n\t\t\t}\n\t\t} );\n\t}\n\n\tbuildCurrentStepData() {\n\t\tvar $this = this;\n\n\t\tvar current_step_data = this.stepsDataDic[this.current_step];\n\t\tvar current_step_ui = this.stepsWidgetDic[this.current_step];\n\n\t\tif ( current_step_data && current_step_ui ) {\n\t\t\tswitch ( this.current_step ) {\n\t\t\t\tcase 2:\n\t\t\t\t\tif ( current_step_data.pay_period_id ) {\n\t\t\t\t\t\tvar pay_period_ids = current_step_data.pay_period_id;\n\t\t\t\t\t\tpay_period_ids = Global.array_unique( pay_period_ids );\n\n\t\t\t\t\t\tif ( current_step_data ) {\n\t\t\t\t\t\t\tcurrent_step_ui.pay_period_id.setValue( pay_period_ids );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$this.setPayRun( pay_period_ids );\n\t\t\t\t\t}\n\t\t\t\t\tthis.onPayPeriodChange();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tif ( current_step_data.user_id ) {\n\t\t\t\t\t\tvar user_ids = current_step_data.user_id;\n\t\t\t\t\t\tuser_ids = Global.array_unique( user_ids );\n\t\t\t\t\t\tcurrent_step_ui.user_id.setValue( user_ids );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tonDoneClick() {\n\t\tvar $this = this;\n\t\tsuper.onDoneClick();\n\t\tthis.saveCurrentStep();\n\n\t\t// Function called stacks: TypeError: Cannot read property 'pay_period_id' of undefined\n\t\tif ( !this.stepsDataDic || !this.stepsDataDic[2] || !this.stepsDataDic[3] ) {\n\t\t\tTAlertManager.showAlert( $.i18n._( 'Wizard data is not correct on step 2 or step 3, please open wizard and try again' ) );\n\t\t\t$this.onCloseClick();\n\t\t}\n\n\t\tvar api = TTAPI.APIPayStub;\n\t\tvar pay_period_ids = this.stepsDataDic[2].pay_period_id;\n\t\tvar user_ids = this.stepsDataDic[3].user_id;\n\t\tvar type_id = this.stepsDataDic[2].type_id;\n\t\tvar run_id = this.stepsDataDic[2].run_id;\n\t\tvar transaction_date = null;\n\t\tvar cal_pay_stub_amendment = false;\n\t\tif ( type_id == 5 ) {\n\t\t\ttransaction_date = this.stepsDataDic[2].carry_forward_to_date;\n\t\t\tcal_pay_stub_amendment = true;\n\t\t} else {\n\t\t\ttransaction_date = this.stepsDataDic[2].transaction_date;\n\t\t}\n\n\t\tapi.setIsIdempotent( true ); //Force to idempotent API call to avoid duplicate network requests from causing errors displayed to the user.\n\t\tapi.generatePayStubs( pay_period_ids, user_ids, cal_pay_stub_amendment, run_id, type_id, transaction_date, { onResult: onDoneResult } );\n\n\t\tfunction onDoneResult( result ) {\n\t\t\tif ( result.isValid() ) {\n\t\t\t\tvar user_generic_status_batch_id = result.getAttributeInAPIDetails( 'user_generic_status_batch_id' );\n\n\t\t\t\tif ( user_generic_status_batch_id && TTUUID.isUUID( user_generic_status_batch_id ) && user_generic_status_batch_id != TTUUID.zero_id && user_generic_status_batch_id != TTUUID.not_exist_id ) {\n\t\t\t\t\tUserGenericStatusWindowController.open( user_generic_status_batch_id, user_ids, function() {\n\t\t\t\t\t\tif ( cal_pay_stub_amendment ) {\n\t\t\t\t\t\t\tvar filter = { filter_data: {} };\n\t\t\t\t\t\t\tvar users = { value: user_ids };\n\t\t\t\t\t\t\tfilter.filter_data.user_id = users;\n\t\t\t\t\t\t\tfilter.filter_data.status_id = 50; //active\n\t\t\t\t\t\t\tIndexViewController.goToView( 'PayStubAmendment', filter );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this.onCloseClick();\n\n\t\t\tif ( $this.call_back ) {\n\t\t\t\t$this.call_back();\n\t\t\t}\n\t\t}\n\n\t\t$this.onCloseClick();\n\t}\n\n\tonPayrollTypeChange( refresh ) {\n\t\tvar current_step_ui = this.stepsWidgetDic[this.current_step];\n\t\tvar current_step_data = this.stepsDataDic[this.current_step];\n\t\t//Error: Uncaught TypeError: Cannot read property 'hide' of undefined in /interface/html5/index.php#!m=PayStub line 221\n\t\tif ( !current_step_ui ||\n\t\t\t!current_step_ui['run_id_row'] ||\n\t\t\t!current_step_ui['carry_forward_to_date_row'] ||\n\t\t\t!current_step_ui['transaction_date_row'] ) {\n\t\t\treturn;\n\t\t}\n\t\tcurrent_step_ui['run_id_row'].hide();\n\t\tcurrent_step_ui['carry_forward_to_date_row'].hide();\n\t\tcurrent_step_ui['transaction_date_row'].hide();\n\t\tvar newest_pay_period = this.getNewestPayPeriod( this.selected_pay_periods );\n\t\tif ( current_step_data.type_id == 20 ) {\n\t\t\tcurrent_step_ui['run_id_row'].show();\n\t\t}\n\n\t\tif ( current_step_data.type_id != 5 ) {\n\t\t\tcurrent_step_ui['transaction_date_row'].show();\n\t\t\tif ( !refresh ) {\n\t\t\t\tif ( current_step_data.transaction_date ) {\n\t\t\t\t\tcurrent_step_ui['transaction_date'].setValue( Global.strToDateTime( current_step_data.transaction_date ).format() );\n\t\t\t\t} else {\n\t\t\t\t\tcurrent_step_ui['transaction_date'].setValue( newest_pay_period ? Global.strToDateTime( newest_pay_period.transaction_date ).format() : null );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrent_step_ui['transaction_date'].setValue( newest_pay_period ? Global.strToDateTime( newest_pay_period.transaction_date ).format() : null );\n\t\t\t}\n\t\t}\n\n\t\tif ( current_step_data.type_id == 5 ) {\n\t\t\tcurrent_step_ui['carry_forward_to_date_row'].show();\n\t\t\tif ( !refresh ) {\n\t\t\t\tcurrent_step_ui['carry_forward_to_date'].setValue( current_step_data.carry_forward_to_date || new Date().format() );\n\t\t\t} else {\n\t\t\t\tcurrent_step_ui['carry_forward_to_date'].setValue( new Date().format() );\n\t\t\t}\n\t\t}\n\t}\n\n\tbuildPayPeriodStatusIdArray( pay_periods ) {\n\t\tvar result = [];\n\t\tfor ( var i = 0; i < pay_periods.length; i++ ) {\n\t\t\tvar item = pay_periods[i];\n\t\t\tresult.push( item.status_id );\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetNewestPayPeriod( pay_periods ) {\n\t\tvar result;\n\t\tfor ( var i = 0; i < pay_periods.length; i++ ) {\n\t\t\tvar item = pay_periods[i];\n\t\t\tvar date = Global.strToDateTime( item.transaction_date ).getTime();\n\t\t\tif ( !result || date > result ) {\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tonPayPeriodChange( refresh ) {\n\t\tvar $this = this;\n\t\tvar current_step_ui = this.stepsWidgetDic[this.current_step];\n\t\tvar current_step_data = this.stepsDataDic[this.current_step];\n\t\tvar api = TTAPI.APIPayStub;\n\t\tvar api_pay_period = TTAPI.APIPayPeriod;\n\t\tvar args = {};\n\t\targs.filter_data = {};\n\t\targs.filter_data.id = current_step_data.pay_period_id;\n\t\tif ( !current_step_data.pay_period_id || current_step_data.pay_period_id.length === 0 ) {\n\t\t\targs.filter_data.id = [0];\n\t\t}\n\t\tapi_pay_period.getPayPeriod( args, {\n\t\t\tonResult: function( result ) {\n\t\t\t\t$this.selected_pay_periods = result.getResult();\n\t\t\t\tvar status_id_array = $this.buildPayPeriodStatusIdArray( $this.selected_pay_periods );\n\t\t\t\tapi.getOptions( 'payroll_run_type', status_id_array, {\n\t\t\t\t\tonResult: function( result ) {\n\t\t\t\t\t\tvar result_data = result.getResult();\n\t\t\t\t\t\tvar type_array = Global.buildRecordArray( result_data );\n\t\t\t\t\t\tcurrent_step_ui['type_id'].setSourceData( type_array );\n\t\t\t\t\t\tif ( !refresh ) {\n\t\t\t\t\t\t\tif ( !current_step_data.type_id ) {\n\t\t\t\t\t\t\t\tcurrent_step_data.type_id = type_array && type_array[0].value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrent_step_ui['type_id'].setValue( current_step_data.type_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrent_step_data.type_id = type_array && type_array[0].value;\n\t\t\t\t\t\t\tcurrent_step_ui['type_id'].setValue( current_step_data.type_id );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$this.onPayrollTypeChange( refresh );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\tsaveCurrentStep() {\n\t\tthis.stepsDataDic[this.current_step] = {};\n\t\tvar current_step_data = this.stepsDataDic[this.current_step];\n\t\tvar current_step_ui = this.stepsWidgetDic[this.current_step];\n\t\tswitch ( this.current_step ) {\n\t\t\tcase 1:\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcurrent_step_data.pay_period_id = current_step_ui.pay_period_id.getValue();\n\t\t\t\tcurrent_step_data.transaction_date = current_step_ui.transaction_date.getValue();\n\t\t\t\tcurrent_step_data.carry_forward_to_date = current_step_ui.carry_forward_to_date.getValue();\n\t\t\t\tcurrent_step_data.type_id = current_step_ui.type_id.getValue();\n\t\t\t\tcurrent_step_data.run_id = current_step_ui.run_id.getValue();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcurrent_step_data.user_id = current_step_ui.user_id.getValue();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetDefaultDataToSteps() {\n\n\t\tif ( !this.default_data ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.stepsDataDic[2] = {};\n\t\tthis.stepsDataDic[3] = {};\n\n\t\tif ( this.getDefaultData( 'user_id' ) ) {\n\t\t\tthis.stepsDataDic[3].user_id = this.getDefaultData( 'user_id' );\n\t\t}\n\n\t\tif ( this.getDefaultData( 'pay_period_id' ) ) {\n\t\t\tthis.stepsDataDic[2].pay_period_id = this.getDefaultData( 'pay_period_id' );\n\t\t}\n\t}\n\n}\n"],"sourceRoot":""}