{"version":3,"sources":["webpack://timetrex/./interface/html5/views/payroll/pay_periods/PayPeriodsViewController.js"],"names":["PayPeriodsViewController","BaseViewController","options","_","defaults","el","status_array","type_array","pay_period_schedule_api","super","this","edit_view_tpl","permission_id","script_name","viewId","table_name_key","context_menu_name","$","i18n","navigation_label","api","TTAPI","APIPayPeriod","APIPayPeriodSchedule","render","sub_view_mode","buildContextMenu","initData","setSelectRibbonMenuIfNecessary","IndexViewController","setNotificationBar","is_cancel","removeEditView","parent_view_controller","onSubViewRemoved","callBack","option_name","field_name","initDropDownOptions","result","context_menu_model","exclude","ContextMenuIconName","copy","include","label","id","delete_data","group","icon","Icons","delete_icon","import_icon","sort_order","edit_only_mode","push","$this","initOptions","edit_view","initEditViewUI","getPayPeriodData","current_edit_record","initEditView","doNotSetFocus","context_menu_array","Global","isSet","selectContextMenu","setTotalDisplaySpan","len","length","grid_selected_length","getGridSelectIdArray","i","context_btn","find","attr","removeClass","add","setDefaultMenuAddIcon","edit","setDefaultMenuEditIcon","view","setDefaultMenuViewIcon","mass_edit","setDefaultMenuMassEditIcon","setDefaultMenuDeleteIcon","delete_and_next","setDefaultMenuDeleteAndNextIcon","save","setDefaultMenuSaveIcon","save_and_next","setDefaultMenuSaveAndNextIcon","save_and_continue","setDefaultMenuSaveAndContinueIcon","save_and_new","setDefaultMenuSaveAndAddIcon","save_and_copy","setDefaultMenuSaveAndCopyIcon","copy_as_new","setDefaultMenuCopyAsNewIcon","login","setDefaultMenuLoginIcon","cancel","setDefaultMenuCancelIcon","setDefaultMenuImportIcon","setDefaultMenuDeleteDataIcon","export_excel","setDefaultMenuExportIcon","setContextMenuGroupVisibility","importValidate","addClass","selected_item","p_id","getSelectedItem","editPermissionValidate","addPermissionValidate","is_mass_editing","setEditMenuSaveIcon","setEditMenuAddIcon","setEditMenuEditIcon","setEditMenuViewIcon","setEditMenuMassEditIcon","setEditMenuDeleteIcon","setEditMenuDeleteAndNextIcon","setEditMenuSaveAndContinueIcon","setEditMenuSaveAndAddIcon","setEditMenuSaveAndNextIcon","setEditMenuSaveAndCopyIcon","setEditMenuCopyAndAddIcon","setEditMenuImportIcon","pId","grid_selected_id_array","ids","each","index","value","grid_selected_row","getRecordFromGridById","TAlertManager","showConfirmAlert","ProgressBar","showOverlay","importData","onResult","res","closeOverlay","isValid","search","showErrorAlert","deleteData","onExportClick","key_name","filter","filter_data","result_data","getResult","buildSearchFields","search_fields","SearchField","in_column","field","layout_name","api_class","multiple","basic_search","form_item_type","FormItemType","AWESOME_BOX","APIUser","buildEditViewUI","tab_model","setTabModel","navigation","AComboBox","allow_multiple_selection","navigation_mode","show_search_inputs","setNavigation","tab_pay_period_column1","edit_view_tab","edit_view_tabs","form_item_input","loadWidgetByName","COMBO_BOX","TComboBox","set_empty","setSourceData","addEditFieldToColumn","TEXT","TText","DATE_PICKER","TDatePicker","mode","target","doNotValidate","setIsChanged","setMassEditingFieldsWhenFormChange","key","getField","c_value","getValue","onStatusChange","validate","disabled","edit_view_ui_dic","unbind","removeAttr","bind","setDateColumnStatus","attachElement","detachElement","editFieldResize","setEditViewDataDone","isEditChange","loadSubView","container","beforeViewLoadedFun","afterViewLoadedFun","loadViewSource","template","html","TTPromise","wait","sub_pay_periods_view_controller"],"mappings":"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","file":"payroll-pay_periods-PayPeriodsViewController.bundle.js?v=369642224ae1c6b1ca52","sourcesContent":["export class PayPeriodsViewController extends BaseViewController {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tel: '#pay_periods_view_container',\n\n\t\t\tstatus_array: null,\n\t\t\ttype_array: null,\n\t\t\tpay_period_schedule_api: null\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinit( options ) {\n\n\t\t//this._super('initialize', options );\n\t\tthis.edit_view_tpl = 'PayPeriodsEditView.html';\n\t\tthis.permission_id = 'pay_period_schedule';\n\t\tthis.script_name = 'PayPeriodsView';\n\t\tthis.viewId = 'PayPeriods';\n\t\tthis.table_name_key = 'pay_period';\n\t\tthis.context_menu_name = $.i18n._( 'Pay Period' );\n\t\tthis.navigation_label = $.i18n._( 'Pay Period' ) + ':';\n\t\tthis.api = TTAPI.APIPayPeriod;\n\t\tthis.pay_period_schedule_api = TTAPI.APIPayPeriodSchedule;\n\n\t\tthis.render();\n\n\t\tif ( this.sub_view_mode ) {\n\t\t\tthis.buildContextMenu( true );\n\t\t} else {\n\t\t\tthis.buildContextMenu();\n\t\t}\n\n\t\t//call init data in parent view\n\n\t\tif ( !this.sub_view_mode ) {\n\t\t\tthis.initData();\n\t\t}\n\n\t\tthis.setSelectRibbonMenuIfNecessary();\n\n\t\tIndexViewController.setNotificationBar( 'pay_period' );\n\t}\n\n\tremoveEditView( is_cancel ) {\n\n\t\tsuper.removeEditView();\n\n\t\tif ( this.parent_view_controller &&\n\t\t\t( this.parent_view_controller.viewId === 'TimeSheet' || this.parent_view_controller.viewId === 'PayStub' ) ) {\n\t\t\tthis.parent_view_controller.onSubViewRemoved( is_cancel );\n\t\t}\n\t}\n\n\tinitOptions( callBack ) {\n\t\tvar $this = this;\n\n\t\tvar options = [\n\t\t\t{ option_name: 'status', field_name: null, api: null },\n\t\t\t{ option_name: 'type', field_name: 'type_id', api: this.pay_period_schedule_api }\n\t\t];\n\n\t\tthis.initDropDownOptions( options, function( result ) {\n\n\t\t\tif ( callBack ) {\n\t\t\t\tcallBack( result ); // First to initialize drop down options, and then to initialize edit view UI.\n\t\t\t}\n\n\t\t} );\n\t}\n\n\tgetCustomContextMenuModel() {\n\t\tvar context_menu_model = {\n\t\t\texclude: [ContextMenuIconName.copy],\n\t\t\tinclude: [\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Delete<br>Data' ),\n\t\t\t\t\tid: ContextMenuIconName.delete_data,\n\t\t\t\t\tgroup: 'other',\n\t\t\t\t\ticon: Icons.delete_icon\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Import<br>Data' ),\n\t\t\t\t\tid: ContextMenuIconName.import_icon,\n\t\t\t\t\tgroup: 'other',\n\t\t\t\t\ticon: Icons.import_icon,\n\t\t\t\t\tsort_order: 8000\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tif ( this.edit_only_mode ) {\n\t\t\tcontext_menu_model.exclude.push( ContextMenuIconName.import_icon, ContextMenuIconName.delete_data );\n\t\t}\n\n\t\treturn context_menu_model;\n\t}\n\n\topenEditView( id ) {\n\n\t\tvar $this = this;\n\n\t\tif ( $this.edit_only_mode ) {\n\n\t\t\t$this.initOptions( function( result ) {\n\n\t\t\t\tif ( !$this.edit_view ) {\n\t\t\t\t\t$this.initEditViewUI( $this.viewId, $this.edit_view_tpl );\n\t\t\t\t}\n\n\t\t\t\t$this.getPayPeriodData( id, function( result ) {\n\t\t\t\t\t// Waiting for the TTAPI.API returns data to set the current edit record.\n\t\t\t\t\t$this.current_edit_record = result;\n\n\t\t\t\t\t$this.initEditView();\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} else {\n\t\t\tif ( !this.edit_view ) {\n\t\t\t\tthis.initEditViewUI( $this.viewId, $this.edit_view_tpl );\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/* jshint ignore:start */\n\tsetDefaultMenu( doNotSetFocus ) {\n\n\t\t//Error: Uncaught TypeError: Cannot read property 'length' of undefined in /interface/html5/#!m=Employee&a=edit&id=42411&tab=Wage line 282\n\t\tif ( !this.context_menu_array ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !Global.isSet( doNotSetFocus ) || !doNotSetFocus ) {\n\t\t\tthis.selectContextMenu();\n\t\t}\n\n\t\tthis.setTotalDisplaySpan();\n\n\t\tvar len = this.context_menu_array.length;\n\n\t\tvar grid_selected_id_array = this.getGridSelectIdArray();\n\n\t\tvar grid_selected_length = grid_selected_id_array.length;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tvar context_btn = $( this.context_menu_array[i] );\n\t\t\tvar id = $( context_btn.find( '.ribbon-sub-menu-icon' ) ).attr( 'id' );\n\n\t\t\tcontext_btn.removeClass( 'invisible-image' );\n\t\t\tcontext_btn.removeClass( 'disable-image' );\n\n\t\t\tswitch ( id ) {\n\t\t\t\tcase ContextMenuIconName.add:\n\t\t\t\t\tthis.setDefaultMenuAddIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.edit:\n\t\t\t\t\tthis.setDefaultMenuEditIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.view:\n\t\t\t\t\tthis.setDefaultMenuViewIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.mass_edit:\n\t\t\t\t\tthis.setDefaultMenuMassEditIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.delete_icon:\n\t\t\t\t\tthis.setDefaultMenuDeleteIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.delete_and_next:\n\t\t\t\t\tthis.setDefaultMenuDeleteAndNextIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save:\n\t\t\t\t\tthis.setDefaultMenuSaveIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save_and_next:\n\t\t\t\t\tthis.setDefaultMenuSaveAndNextIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save_and_continue:\n\t\t\t\t\tthis.setDefaultMenuSaveAndContinueIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save_and_new:\n\t\t\t\t\tthis.setDefaultMenuSaveAndAddIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save_and_copy:\n\t\t\t\t\tthis.setDefaultMenuSaveAndCopyIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.copy_as_new:\n\t\t\t\t\tthis.setDefaultMenuCopyAsNewIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.login:\n\t\t\t\t\tthis.setDefaultMenuLoginIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.cancel:\n\t\t\t\t\tthis.setDefaultMenuCancelIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.import_icon:\n\t\t\t\t\tthis.setDefaultMenuImportIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.delete_data:\n\t\t\t\t\tthis.setDefaultMenuDeleteDataIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.export_excel:\n\t\t\t\t\tthis.setDefaultMenuExportIcon( context_btn, grid_selected_length );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setContextMenuGroupVisibility();\n\t}\n\n\t/* jshint ignore:end */\n\tsetDefaultMenuImportIcon( context_btn, grid_selected_length ) {\n\n\t\tif ( !this.importValidate() ) {\n\t\t\tcontext_btn.addClass( 'invisible-image' );\n\t\t}\n\n\t\tif ( grid_selected_length >= 1 ) {\n\t\t\tcontext_btn.removeClass( 'disable-image' );\n\t\t} else {\n\t\t\tcontext_btn.addClass( 'disable-image' );\n\t\t}\n\t}\n\n\timportValidate( selected_item ) {\n\t\tvar p_id = this.permission_id;\n\n\t\tif ( !Global.isSet( selected_item ) ) {\n\t\t\tselected_item = this.getSelectedItem();\n\t\t}\n\n\t\tif ( p_id === 'report' ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( this.editPermissionValidate( p_id, selected_item ) || this.addPermissionValidate( p_id, selected_item ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tsetDefaultMenuDeleteDataIcon( context_btn, grid_selected_length ) {\n\n\t\tif ( !this.importValidate() ) {\n\t\t\tcontext_btn.addClass( 'invisible-image' );\n\t\t}\n\n\t\tif ( grid_selected_length >= 1 ) {\n\t\t\tcontext_btn.removeClass( 'disable-image' );\n\t\t} else {\n\t\t\tcontext_btn.addClass( 'disable-image' );\n\t\t}\n\t}\n\n\t/* jshint ignore:start */\n\tsetEditMenu() {\n\n\t\tthis.selectContextMenu();\n\t\tvar len = this.context_menu_array.length;\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tvar context_btn = $( this.context_menu_array[i] );\n\t\t\tvar id = $( context_btn.find( '.ribbon-sub-menu-icon' ) ).attr( 'id' );\n\t\t\tcontext_btn.removeClass( 'disable-image' );\n\n\t\t\tif ( this.is_mass_editing ) {\n\t\t\t\tswitch ( id ) {\n\t\t\t\t\tcase ContextMenuIconName.save:\n\t\t\t\t\t\tthis.setEditMenuSaveIcon( context_btn );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ContextMenuIconName.cancel:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcontext_btn.addClass( 'disable-image' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch ( id ) {\n\t\t\t\tcase ContextMenuIconName.add:\n\n\t\t\t\t\tthis.setEditMenuAddIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.edit:\n\t\t\t\t\tthis.setEditMenuEditIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.view:\n\t\t\t\t\tthis.setEditMenuViewIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.mass_edit:\n\t\t\t\t\tthis.setEditMenuMassEditIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.delete_icon:\n\t\t\t\t\tthis.setEditMenuDeleteIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.delete_and_next:\n\t\t\t\t\tthis.setEditMenuDeleteAndNextIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save:\n\t\t\t\t\tthis.setEditMenuSaveIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save_and_continue:\n\t\t\t\t\tthis.setEditMenuSaveAndContinueIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save_and_new:\n\t\t\t\t\tthis.setEditMenuSaveAndAddIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save_and_next:\n\t\t\t\t\tthis.setEditMenuSaveAndNextIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.save_and_copy:\n\t\t\t\t\tthis.setEditMenuSaveAndCopyIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.copy_as_new:\n\t\t\t\t\tthis.setEditMenuCopyAndAddIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.cancel:\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.import_icon:\n\t\t\t\tcase ContextMenuIconName.delete_data:\n\t\t\t\t\tthis.setEditMenuImportIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.export_excel:\n\t\t\t\t\tthis.setDefaultMenuExportIcon( context_btn );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setContextMenuGroupVisibility();\n\t}\n\n\t/* jshint ignore:end */\n\tsetEditMenuImportIcon( context_btn, pId ) {\n\t\tif ( !this.importValidate() ) {\n\t\t\tcontext_btn.addClass( 'invisible-image' );\n\t\t}\n\t\tcontext_btn.addClass( 'disable-image' );\n\t}\n\n\tonCustomContextClick( context_btn ) {\n\t\tvar $this = this;\n\n\t\tvar grid_selected_id_array;\n\n\t\tvar ids = [];\n\n\t\tif ( $this.edit_view && $this.current_edit_record.id ) {\n\t\t\tids.push( $this.current_edit_record.id );\n\t\t} else {\n\t\t\tgrid_selected_id_array = this.getGridSelectIdArray();\n\t\t\t$.each( grid_selected_id_array, function( index, value ) {\n\t\t\t\tvar grid_selected_row = $this.getRecordFromGridById( value );\n\t\t\t\tids.push( grid_selected_row.id );\n\t\t\t} );\n\t\t}\n\n\t\tif ( ids.length > 0 ) {\n\n\t\t\tswitch ( context_btn ) {\n\n\t\t\t\tcase ContextMenuIconName.import_icon:\n\t\t\t\t\tTAlertManager.showConfirmAlert( $.i18n._( 'This will import employee attendance data from other pay periods into this pay period.Are you sure you wish to continue?' ), null, function( result ) {\n\n\t\t\t\t\t\tif ( result ) {\n\t\t\t\t\t\t\tProgressBar.showOverlay();\n\t\t\t\t\t\t\t$this.api.importData( ids, {\n\t\t\t\t\t\t\t\tonResult: function( res ) {\n\t\t\t\t\t\t\t\t\tProgressBar.closeOverlay();\n\t\t\t\t\t\t\t\t\tif ( res.isValid() ) {\n\t\t\t\t\t\t\t\t\t\t$this.search( false );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tTAlertManager.showErrorAlert( res );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tProgressBar.closeOverlay();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.delete_data:\n\n\t\t\t\t\tTAlertManager.showConfirmAlert( $.i18n._( 'This will delete all attendance data assigned to this pay period. Are you sure you wish to continue?' ), null, function( result ) {\n\n\t\t\t\t\t\tif ( result ) {\n\t\t\t\t\t\t\tProgressBar.showOverlay();\n\t\t\t\t\t\t\t$this.api.deleteData( ids, {\n\t\t\t\t\t\t\t\tonResult: function( res ) {\n\t\t\t\t\t\t\t\t\tProgressBar.closeOverlay();\n\t\t\t\t\t\t\t\t\tif ( res.isValid() ) {\n\t\t\t\t\t\t\t\t\t\t$this.search( false );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tTAlertManager.showErrorAlert( res );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tProgressBar.closeOverlay();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextMenuIconName.export_excel:\n\t\t\t\t\tthis.onExportClick( 'export' + this.api.key_name );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t}\n\n\tgetPayPeriodData( id, callBack ) {\n\t\tvar filter = {};\n\t\tfilter.filter_data = {};\n\t\tfilter.filter_data.id = [id];\n\n\t\tthis.api['get' + this.api.key_name]( filter, {\n\t\t\tonResult: function( result ) {\n\t\t\t\tvar result_data = result.getResult();\n\n\t\t\t\tif ( !result_data ) {\n\t\t\t\t\tresult_data = [];\n\t\t\t\t}\n\t\t\t\tresult_data = result_data[0];\n\n\t\t\t\tcallBack( result_data );\n\n\t\t\t}\n\t\t} );\n\t}\n\n\tbuildSearchFields() {\n\t\tsuper.buildSearchFields();\n\t\tthis.search_fields = [\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Pay Period Schedule' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'pay_period_schedule_id',\n\t\t\t\tlayout_name: 'global_pay_period_schedule',\n\t\t\t\tapi_class: TTAPI.APIPayPeriodSchedule,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tscript_name: 'PayPeriodScheduleView',\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Status' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'status_id',\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tlayout_name: 'global_option_column',\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'type' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'type_id',\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tlayout_name: 'global_option_column',\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Created By' ),\n\t\t\t\tin_column: 2,\n\t\t\t\tfield: 'created_by',\n\t\t\t\tlayout_name: 'global_user',\n\t\t\t\tapi_class: TTAPI.APIUser,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tscript_name: 'EmployeeView',\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Updated By' ),\n\t\t\t\tin_column: 2,\n\t\t\t\tfield: 'updated_by',\n\t\t\t\tlayout_name: 'global_user',\n\t\t\t\tapi_class: TTAPI.APIUser,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tscript_name: 'EmployeeView',\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} )\n\n\t\t];\n\t}\n\n\tbuildEditViewUI() {\n\n\t\tsuper.buildEditViewUI();\n\n\t\tvar $this = this;\n\n\t\tvar tab_model = {\n\t\t\t'tab_pay_period': { 'label': $.i18n._( 'Pay Period' ) },\n\t\t\t'tab_audit': true,\n\t\t};\n\t\tthis.setTabModel( tab_model );\n\n\t\tif ( !this.edit_only_mode ) {\n\t\t\tthis.navigation.AComboBox( {\n\t\t\t\tid: this.script_name + '_navigation',\n\t\t\t\tapi_class: TTAPI.APIPayPeriod,\n\t\t\t\tallow_multiple_selection: false,\n\t\t\t\tlayout_name: 'global_Pay_period',\n\t\t\t\tnavigation_mode: true,\n\t\t\t\tshow_search_inputs: true\n\t\t\t} );\n\n\t\t\tthis.setNavigation();\n\t\t}\n\n\t\t//Tab 0 start\n\n\t\tvar tab_pay_period = this.edit_view_tab.find( '#tab_pay_period' );\n\n\t\tvar tab_pay_period_column1 = tab_pay_period.find( '.first-column' );\n\t\tthis.edit_view_tabs[0] = [];\n\n\t\tthis.edit_view_tabs[0].push( tab_pay_period_column1 );\n\n\t\t// Status\n\n\t\tvar form_item_input = Global.loadWidgetByName( FormItemType.COMBO_BOX );\n\n\t\tform_item_input.TComboBox( { field: 'status_id', set_empty: false } );\n\t\tform_item_input.setSourceData( $this.status_array );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Status' ), form_item_input, tab_pay_period_column1, '' );\n\n\t\t// Pay Period Schedule\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: 'pay_period_schedule' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Pay Period Schedule' ), form_item_input, tab_pay_period_column1, '', null, true );\n\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.AWESOME_BOX );\n\t\tform_item_input.AComboBox( {\n\t\t\tapi_class: TTAPI.APIPayPeriodSchedule,\n\t\t\tallow_multiple_selection: false,\n\t\t\tlayout_name: 'global_pay_period_schedule',\n\t\t\tshow_search_inputs: true,\n\t\t\tset_empty: true,\n\t\t\tfield: 'pay_period_schedule_id'\n\t\t} );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Pay Period Schedule' ), form_item_input, tab_pay_period_column1, '', null, true );\n\n\t\t// Start date\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.DATE_PICKER );\n\n\t\tform_item_input.TDatePicker( { field: 'start_date', mode: 'date_time' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Start Date' ), form_item_input, tab_pay_period_column1, '', null, true );\n\n\t\t// End date\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.DATE_PICKER );\n\n\t\tform_item_input.TDatePicker( { field: 'end_date', mode: 'date_time' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'End Date' ), form_item_input, tab_pay_period_column1, '', null, true );\n\n\t\t// Transaction date\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.DATE_PICKER );\n\n\t\tform_item_input.TDatePicker( { field: 'transaction_date', mode: 'date_time' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Transaction Date' ), form_item_input, tab_pay_period_column1, '', null, true );\n\t}\n\n\tonFormItemChange( target, doNotValidate ) {\n\n\t\tthis.setIsChanged( target );\n\t\tthis.setMassEditingFieldsWhenFormChange( target );\n\t\tvar key = target.getField();\n\t\tvar c_value = target.getValue();\n\n\t\tif ( !this.current_edit_record ) {\n\t\t\tthis.current_edit_record = {};\n\t\t}\n\n\t\tthis.current_edit_record[key] = c_value;\n\n\t\tif ( key === 'status_id' ) {\n\t\t\tthis.onStatusChange();\n\t\t}\n\n\t\tif ( !doNotValidate ) {\n\t\t\tthis.validate();\n\t\t}\n\t}\n\n\tsetDateColumnStatus( value, disabled ) {\n\t\tif ( this.edit_view_ui_dic[value] ) {\n\t\t\tif ( disabled ) {\n\t\t\t\tthis.edit_view_ui_dic[value].find( 'input' ).attr( 'disabled', 'disabled' );\n\t\t\t\tthis.edit_view_ui_dic[value].find( 'img' ).unbind( 'click' );\n\t\t\t} else {\n\t\t\t\tthis.edit_view_ui_dic[value].find( 'input' ).removeAttr( 'disabled' );\n\t\t\t\tthis.edit_view_ui_dic[value].find( 'img' ).bind( 'click' );\n\t\t\t}\n\t\t}\n\t}\n\n\tonStatusChange() {\n\t\t//TypeError: Cannot read property 'status_id' of undefined\n\t\tif ( this.current_edit_record && this.current_edit_record['status_id'] == 20 ) {\n\t\t\tthis.setDateColumnStatus( 'start_date', true );\n\t\t\tthis.setDateColumnStatus( 'end_date', true );\n\t\t\tthis.setDateColumnStatus( 'transaction_date', true );\n\t\t} else {\n\t\t\tthis.setDateColumnStatus( 'start_date', false );\n\t\t\tthis.setDateColumnStatus( 'end_date', false );\n\t\t\tthis.setDateColumnStatus( 'transaction_date', false );\n\t\t}\n\t}\n\n\tisEditChange() {\n\t\tif ( this.current_edit_record && this.current_edit_record.id ) {\n\t\t\tthis.attachElement( 'pay_period_schedule' );\n\t\t\tthis.detachElement( 'pay_period_schedule_id' );\n\t\t} else if ( this.is_mass_editing ) {\n\t\t\tthis.detachElement( 'pay_period_schedule' );\n\t\t\tthis.detachElement( 'pay_period_schedule_id' );\n\t\t} else {\n\t\t\tthis.detachElement( 'pay_period_schedule' );\n\t\t\tthis.attachElement( 'pay_period_schedule_id' );\n\n\t\t}\n\n\t\tthis.editFieldResize();\n\t}\n\n\tsetEditViewDataDone() {\n\t\tsuper.setEditViewDataDone();\n\t\tthis.onStatusChange();\n\t\tthis.isEditChange();\n\t}\n\n}\n\nPayPeriodsViewController.loadSubView = function( container, beforeViewLoadedFun, afterViewLoadedFun ) {\n\n\tGlobal.loadViewSource( 'PayPeriods', 'SubPayPeriodsView.html', function( result ) {\n\n\t\tvar args = {};\n\t\tvar template = _.template( result );\n\n\t\tif ( Global.isSet( beforeViewLoadedFun ) ) {\n\t\t\tbeforeViewLoadedFun();\n\t\t}\n\n\t\tif ( Global.isSet( container ) ) {\n\t\t\tcontainer.html( template( args ) );\n\n\t\t\tif ( Global.isSet( afterViewLoadedFun ) ) {\n\t\t\t\tTTPromise.wait( 'BaseViewController', 'initialize', function() {\n\t\t\t\t\tafterViewLoadedFun( sub_pay_periods_view_controller );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n};"],"sourceRoot":""}