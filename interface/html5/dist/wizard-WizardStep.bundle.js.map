{"version":3,"sources":["webpack://timetrex/./interface/html5/global/widgets/wizard/WizardStep.js"],"names":["WizardStep","TTBackboneView","options","_","defaults","previous_step_name","next_step_name","buttons","wizard_obj","clicked_buttons","reload","api","name","title","$","i18n","instructions","super","initialize","this","setWizardObject","init","render","el","find","html","callback","length","append","val","initCardsBlock","_render","content","button","gridId","grid_div","allMultipleSelection","remove","grid","grid_columns","getGridColumns","$this","TTGrid","onSelectRow","e","onGridSelectRow","onSelectAll","n","ondblClickRow","onGridDblClickRow","multiselect","winMultiSelect","setGridSize","setGridGroupColumns","callBack","setGridHeight","setGridWidth","width","height","div","ul","id","icon","label","desc","src","container","img","right_container","description","selected_id","addButtonClick","ProgressBar","showOverlay","window","clickProcessing","clickProcessingHandle","setTimeout","closeOverlay","_onNavigationClick","element","target","hasClass","parents","addClass","hasOwnProperty","context_name","icon_name","button_name","getRibbonButton","Global","getRibbonIconRealPath","unbind","bind","onNavigationClick","isButtonClicked","appendButton","action_id","getMakePaymentData","getWizardObject","selected_remittance_agency_event_id","onResult","result","url","getResult","open","getFileAndPayWithPaymentServicesData","retval","TAlertManager","showAlert"],"mappings":"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","file":"wizard-WizardStep.bundle.js?v=a9fc7f865360adc7d8fd","sourcesContent":["import { TTBackboneView } from '@/views/TTBackboneView';\n\nexport class WizardStep extends TTBackboneView {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tprevious_step_name: null,\n\t\t\tnext_step_name: null,\n\t\t\tbuttons: null,\n\t\t\twizard_obj: null, //rename to wizard_obj\n\n\t\t\tclicked_buttons: {},\n\t\t\treload: false,\n\n\t\t\tapi: null,\n\n\t\t\t//override in children\n\t\t\tname: 'undefined',\n\t\t\ttitle: $.i18n._( 'Undefined Step' ),\n\t\t\tinstructions: $.i18n._( 'Undefined step data' )\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinitialize( wizard_obj ) {\n\t\tsuper.initialize( wizard_obj );\n\n\t\tthis.buttons = {};\n\t\tthis.reload = false;\n\t\tthis.setWizardObject( wizard_obj );\n\t\tvar $this = this;\n\t\tthis.init();\n\t}\n\n\t//Children must always call render()\n\tinit() {\n\t\tthis.render();\n\t}\n\n\tinitCardsBlock() {\n\t\t$( this.wizard_obj.el ).find( '#cards' ).html( '' );\n\t}\n\n\tsetTitle( title ) {\n\t\t$( this.wizard_obj.el ).find( '.title-1' ).html( title );\n\t}\n\n\tsetInstructions( instructions, callback ) {\n\n\t\tif ( $( this.el ).find( '.instructions' ).length == 0 ) {\n\t\t\t$( this.el ).find( '.progress-bar' ).append( '<p class=\"instructions\"></p>' );\n\t\t}\n\n\t\t$( this.el ).find( '.progress-bar .instructions' ).html( instructions );\n\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tsetWizardObject( val ) {\n\t\tthis.wizard_obj = val;\n\t\tthis.el = this.wizard_obj.el;\n\t}\n\n\tgetWizardObject() {\n\t\treturn this.wizard_obj;\n\t}\n\n\tsetNextStepName( val ) {\n\t\tthis.next_step_name = val;\n\t}\n\n\tgetNextStepName() {\n\t\treturn false;\n\t}\n\n\tsetPreviousStepName( val ) {\n\t\tthis.previous_step_name = val;\n\t}\n\n\tgetPreviousStepName() {\n\t\treturn false;\n\t}\n\n\trender() {\n\t\tthis.initCardsBlock();\n\t\treturn this._render();\n\t}\n\n\t_render() {\n\t\treturn;\n\t\t//always overrirde\n\t}\n\n\tappend( content ) {\n\t\t$( this.wizard_obj.el ).find( '.content' ).append( content );\n\t}\n\n\tappendButton( button ) {\n\t\t$( this.wizard_obj.el ).find( '#cards' ).append( button );\n\t}\n\n\tsetGrid( gridId, grid_div, allMultipleSelection ) {\n\n\t\tif ( !allMultipleSelection ) {\n\t\t\tallMultipleSelection = false;\n\t\t}\n\n\t\t$( '#' + gridId ).remove(); //Remove the grid to prevent JS Exception: Uncaught TypeError: Failed to execute 'replaceChild' on 'Node': parameter 2 is not of type 'Node'.\n\n\t\tthis.append( grid_div );\n\n\t\tvar grid = $( '#' + gridId );\n\n\t\tvar grid_columns = this.getGridColumns( gridId );\n\n\t\tvar $this = this;\n\n\t\tgrid = new TTGrid( gridId, {\n\t\t\tonSelectRow: function( e ) {\n\t\t\t\t$this.onGridSelectRow( e );\n\t\t\t},\n\t\t\tonSelectAll: function( e ) {\n\t\t\t\tfor ( var n in e ) {\n\t\t\t\t\t$this.onGridSelectRow( e[n] );\n\t\t\t\t}\n\t\t\t},\n\t\t\tondblClickRow: function() {\n\t\t\t\t$this.onGridDblClickRow();\n\t\t\t},\n\t\t\tmultiselect: false,\n\t\t\twinMultiSelect: false\n\t\t}, grid_columns );\n\n\t\tthis.setGridSize( grid );\n\t\tthis.setGridGroupColumns( gridId );\n\n\t\treturn grid; //allowing chaining off this method.\n\t}\n\n\tgetGridColumns( gridId, callBack ) {\n\t\t//override if step object needs a grid.\n\t}\n\n\tsetGridAutoHeight( grid, length ) {\n\t\tif ( length > 0 && length < 10 ) {\n\t\t\tgrid.grid.setGridHeight( length * 23 );\n\t\t} else if ( length > 10 ) {\n\t\t\tgrid.grid.setGridHeight( 400 );\n\t\t}\n\t}\n\n\tsetGridSize( grid ) {\n\t\tgrid.grid.setGridWidth( $( this.wizard_obj.el ).find( '.content .grid-div' ).width() - 11 );\n\t\tgrid.grid.setGridHeight( $( this.wizard_obj.el ).find( '.content' ).height() - 150 ); //During merge, this wasn't in MASTER branch.\n\t}\n\n\tgetRibbonButtonBox() {\n\t\tvar div = $( '<div class=\"menu ribbon-button-bar\"></div>' );\n\t\tvar ul = $( '<ul></ul>' );\n\n\t\tdiv.append( ul );\n\n\t\treturn div;\n\t}\n\n\t/**\n\t * to get old-style icons, don't provide desc\n\t * to get card-style icons, provide desc\n\t * to get card-style icons without a description, send a blank string ('') as desc\n\t *\n\t * @param id\n\t * @param icon\n\t * @param label\n\t * @param desc\n\t * @returns {*|jQuery|HTMLElement}\n\t */\n\tgetRibbonButton( id, icon, label, desc ) {\n\t\t//prelaod imgages to reduce the appearance of phantom flashing\n\t\t$( '<img></img>' )[0].src = icon;\n\n\t\tif ( typeof desc == 'undefined' ) {\n\t\t\tvar button = $( '<li><div class=\"ribbon-sub-menu-icon\" id=\"' + id + '\"><img src=\"' + icon + '\" >' + label + '</div></li>' );\n\t\t\treturn button;\n\t\t}\n\n\t\tvar container = $( '<div class=\"wizard_icon_card\" id=\"' + id + '\"></div>' );\n\n\t\tvar img = $( '<img src=\"' + icon + '\"></img>' );\n\n\t\tvar right_container = $( '<div class=\"right_container\"></div>' );\n\n\t\tvar title = $( '<h3 class=\"button_title\"></h3>' );\n\t\ttitle.html( label ? label : '' );\n\n\t\tvar description = $( '<div class=\"description\"></div>' );\n\t\tdescription.html( desc ? desc : '' );\n\n\t\tcontainer.append( img );\n\t\tright_container.append( title );\n\t\tright_container.append( description );\n\t\tcontainer.append( right_container );\n\n\t\treturn container;\n\t}\n\n\t//\n\t//stubs that should be overrideen\n\t//\n\n\tonGridSelectRow( selected_id ) {\n\t\t//\n\t}\n\n\tonGridDblClickRow( selected_id ) {\n\t\t//\n\t}\n\n\tonNavigationClick( e, icon ) {\n\t\tif ( e ) {\n\t\t\tthis.addButtonClick( e, icon );\n\t\t}\n\n\t\t//Prevent double clicking on tax wizard buttons.\n\t\tProgressBar.showOverlay();\n\n\t\t//this flag is turned off in ProgressBarManager::closeOverlay, or 2s whichever happens first\n\t\tif ( window.clickProcessing == true ) {\n\t\t\treturn;\n\t\t} else {\n\t\t\twindow.clickProcessing = true;\n\t\t\twindow.clickProcessingHandle = window.setTimeout( function() {\n\t\t\t\tif ( window.clickProcessing == true ) {\n\t\t\t\t\twindow.clickProcessing = false;\n\t\t\t\t\tProgressBar.closeOverlay();\n\t\t\t\t}\n\t\t\t}, 1000 );\n\t\t}\n\n\t\tthis._onNavigationClick( icon );\n\t}\n\n\t//Overridden in each Wizard step.\n\t_onNavigationClick( icon ) {\n\t}\n\n\t//Overridden in each Wizard step that needs to determine if required buttons are clicked or not.\n\tisRequiredButtonsClicked() {\n\t\treturn true;\n\t}\n\n\taddButtonClick( e, icon ) {\n\t\t// $(e.target).addClass('clicked_wizard_icon');\n\t\t// $(e.target).find('img').addClass('disable-image');\n\t\tvar element = $( e.target );\n\t\tif ( !element.hasClass( 'wizard_icon_card' ) ) {\n\t\t\telement = $( e.target ).parents( '.wizard_icon_card' );\n\t\t}\n\t\telement.addClass( 'clicked_wizard_icon' );\n\t\telement.addClass( 'disable-image' );\n\n\t\tthis.clicked_buttons[icon] = true;\n\t}\n\n\tisButtonClicked( icon ) {\n\t\tif ( this.clicked_buttons.hasOwnProperty( icon ) && typeof this.clicked_buttons[icon] != 'undefined' ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\taddButton( context_name, icon_name, title, description, button_name ) {\n\t\tif ( typeof button_name == 'undefined' ) {\n\t\t\tbutton_name = context_name;\n\t\t}\n\n\t\tvar button = this.getRibbonButton( context_name, Global.getRibbonIconRealPath( icon_name ), title, description );\n\n\t\tvar $this = this;\n\t\tbutton.unbind( 'click' ).bind( 'click', function( e ) {\n\t\t\t$this.onNavigationClick( e, button_name );\n\t\t} );\n\t\t//ribbon_button_box.find('ul').append(button);\n\n\t\tif ( this.isButtonClicked( button_name ) ) {\n\t\t\tbutton.addClass( 'clicked_wizard_icon' );\n\t\t\tbutton.addClass( 'disable-image' );\n\t\t}\n\n\t\tthis.buttons[icon_name] = button;\n\t\tthis.appendButton( button );\n\n\t\treturn button;\n\t}\n\n\tsetGridGroupColumns( gridId ) {\n\n\t}\n\n\turlClick( action_id ) {\n\t\tthis.api.getMakePaymentData( this.getWizardObject().selected_remittance_agency_event_id, action_id, {\n\t\t\tonResult: function( result ) {\n\t\t\t\tvar url = result.getResult();\n\t\t\t\twindow.open( url );\n\t\t\t}\n\t\t} );\n\t}\n\n\tpaymentServicesClick( action_id ) {\n\t\tthis.api.getFileAndPayWithPaymentServicesData( this.getWizardObject().selected_remittance_agency_event_id, action_id, {\n\t\t\tonResult: function( result ) {\n\t\t\t\tvar retval = result.getResult();\n\n\t\t\t\tif ( retval['user_message'] && retval['user_message'] != '' ) {\n\t\t\t\t\tTAlertManager.showAlert( retval['user_message'] );\n\t\t\t\t} else {\n\t\t\t\t\tif ( retval == false ) {\n\t\t\t\t\t\tTAlertManager.showAlert( $.i18n._( 'ERROR! Something went wrong, please contact customer service immediately!' ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n}"],"sourceRoot":""}