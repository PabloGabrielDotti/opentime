{"version":3,"sources":["webpack://timetrex/./node_modules/linkifyjs/lib/linkify-string.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify/core/parser.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify/core/scanner.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify/core/state.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify/core/tokens/create-token-class.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify/core/tokens/multi.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify/core/tokens/text.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify/utils/class.js","webpack://timetrex/./node_modules/linkifyjs/lib/linkify/utils/options.js","webpack://timetrex/./node_modules/linkifyjs/string.js"],"names":["linkify","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireWildcard","tokenize","Options","options","escapeText","text","replace","escapeAttr","href","attributesToString","attributes","result","attr","val","push","join","linkifyStr","str","opts","arguments","length","undefined","tokens","i","token","type","nl2br","isLink","check","_opts$resolve","resolve","formatted","formattedHref","tagName","className","target","link","toString","String","defineProperty","set","get","this","e","exports","test","scanner","parser","inherits","find","_class","Array","isArray","arg","run","filtered","toObject","start","TOKENS","State","_state","_multi","MULTI_TOKENS","_text","makeState","tokenClass","TokenState","S_START","S_PROTOCOL","S_MAILTO","S_PROTOCOL_SLASH","S_PROTOCOL_SLASH_SLASH","S_DOMAIN","S_DOMAIN_DOT","S_TLD","URL","S_TLD_COLON","S_TLD_PORT","S_URL","S_URL_NON_ACCEPTING","S_URL_OPENBRACE","S_URL_OPENBRACKET","S_URL_OPENANGLEBRACKET","S_URL_OPENPAREN","S_URL_OPENBRACE_Q","S_URL_OPENBRACKET_Q","S_URL_OPENANGLEBRACKET_Q","S_URL_OPENPAREN_Q","S_URL_OPENBRACE_SYMS","S_URL_OPENBRACKET_SYMS","S_URL_OPENANGLEBRACKET_SYMS","S_URL_OPENPAREN_SYMS","S_EMAIL_DOMAIN","S_EMAIL_DOMAIN_DOT","S_EMAIL","EMAIL","S_EMAIL_COLON","S_EMAIL_PORT","S_MAILTO_EMAIL","MAILTOEMAIL","S_MAILTO_EMAIL_NON_ACCEPTING","S_LOCALPART","S_LOCALPART_AT","S_LOCALPART_DOT","S_NL","NL","on","PROTOCOL","MAILTO","SLASH","TLD","DOMAIN","LOCALHOST","NUM","DOT","COLON","qsAccepting","AT","PLUS","POUND","UNDERSCORE","SYM","AMPERSAND","qsNonAccepting","QUERY","PUNCTUATION","CLOSEBRACE","CLOSEBRACKET","CLOSEANGLEBRACKET","CLOSEPAREN","OPENBRACE","OPENBRACKET","OPENANGLEBRACKET","OPENPAREN","localpartAccepting","len","cursor","multis","textTokens","state","secondState","nextState","multiLength","latestAccepting","sinceAccepts","next","accepts","TEXT","MULTI","emit","slice","tlds","split","NUMBERS","ALPHANUM","WHITESPACE","domainStates","CharacterState","S_NUM","S_DOMAIN_HYPHEN","S_WS","WS","newStates","stateify","apply","partialProtocolFileStates","partialProtocolFtpStates","partialProtocolHttpStates","partialProtocolMailtoStates","S_PROTOCOL_FILE","pop","S_PROTOCOL_FTP","S_PROTOCOL_HTTP","S_PROTOCOL_SECURE","S_FULL_PROTOCOL","S_FULL_MAILTO","partialLocalhostStates","_i","defaultTransition","lowerStr","c","toLowerCase","tokenLength","TOKEN","substr","BaseState","tClass","j","T","symbol","item","jump","character","charOrRegExp","RegExp","constructor","endToken","defaultToken","createTokenClass","value","v","Base","_createTokenClass","isDomainToken","MultiToken","toHref","protocol","hasProtocol","hasSlashSlash","TextToken","inheritsToken","props","parent","child","extended","create","p","_typeof","Symbol","iterator","defaults","defaultProtocol","events","format","noop","formatHref","validate","ignoreTags","linkAttributes","linkClass","ignoredTags","toUpperCase","contains","arr","getObject","operator","optionValue","option"],"mappings":"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","file":"vendors-node_modules_linkifyjs_string_js.bundle.js?v=f6df86ad93b6d1d3e0a4","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _linkify = require('./linkify');\n\nvar linkify = _interopRequireWildcard(_linkify);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar tokenize = linkify.tokenize,\n    options = linkify.options; /**\n                               \tConvert strings of text into linkable HTML text\n                               */\n\nvar Options = options.Options;\n\n\nfunction escapeText(text) {\n\treturn text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nfunction escapeAttr(href) {\n\treturn href.replace(/\"/g, '&quot;');\n}\n\nfunction attributesToString(attributes) {\n\tif (!attributes) {\n\t\treturn '';\n\t}\n\tvar result = [];\n\n\tfor (var attr in attributes) {\n\t\tvar val = attributes[attr] + '';\n\t\tresult.push(attr + '=\"' + escapeAttr(val) + '\"');\n\t}\n\treturn result.join(' ');\n}\n\nfunction linkifyStr(str) {\n\tvar opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\topts = new Options(opts);\n\n\tvar tokens = tokenize(str);\n\tvar result = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\n\t\tif (token.type === 'nl' && opts.nl2br) {\n\t\t\tresult.push('<br>\\n');\n\t\t\tcontinue;\n\t\t} else if (!token.isLink || !opts.check(token)) {\n\t\t\tresult.push(escapeText(token.toString()));\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar _opts$resolve = opts.resolve(token),\n\t\t    formatted = _opts$resolve.formatted,\n\t\t    formattedHref = _opts$resolve.formattedHref,\n\t\t    tagName = _opts$resolve.tagName,\n\t\t    className = _opts$resolve.className,\n\t\t    target = _opts$resolve.target,\n\t\t    attributes = _opts$resolve.attributes;\n\n\t\tvar link = '<' + tagName + ' href=\"' + escapeAttr(formattedHref) + '\"';\n\n\t\tif (className) {\n\t\t\tlink += ' class=\"' + escapeAttr(className) + '\"';\n\t\t}\n\n\t\tif (target) {\n\t\t\tlink += ' target=\"' + escapeAttr(target) + '\"';\n\t\t}\n\n\t\tif (attributes) {\n\t\t\tlink += ' ' + attributesToString(attributes);\n\t\t}\n\n\t\tlink += '>' + escapeText(formatted) + '</' + tagName + '>';\n\t\tresult.push(link);\n\t}\n\n\treturn result.join('');\n}\n\nif (!String.prototype.linkify) {\n\ttry {\n\t\tObject.defineProperty(String.prototype, 'linkify', {\n\t\t\tset: function set() {},\n\t\t\tget: function get() {\n\t\t\t\treturn function linkify(opts) {\n\t\t\t\t\treturn linkifyStr(this, opts);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\t// IE 8 doesn't like Object.defineProperty on non-DOM objects\n\t\tif (!String.prototype.linkify) {\n\t\t\tString.prototype.linkify = function (opts) {\n\t\t\t\treturn linkifyStr(this, opts);\n\t\t\t};\n\t\t}\n\t}\n}\n\nexports.default = linkifyStr;","'use strict';\n\nexports.__esModule = true;\nexports.tokenize = exports.test = exports.scanner = exports.parser = exports.options = exports.inherits = exports.find = undefined;\n\nvar _class = require('./linkify/utils/class');\n\nvar _options = require('./linkify/utils/options');\n\nvar options = _interopRequireWildcard(_options);\n\nvar _scanner = require('./linkify/core/scanner');\n\nvar scanner = _interopRequireWildcard(_scanner);\n\nvar _parser = require('./linkify/core/parser');\n\nvar parser = _interopRequireWildcard(_parser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nif (!Array.isArray) {\n\tArray.isArray = function (arg) {\n\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n}\n\n/**\n\tConverts a string into tokens that represent linkable and non-linkable bits\n\t@method tokenize\n\t@param {String} str\n\t@return {Array} tokens\n*/\nvar tokenize = function tokenize(str) {\n\treturn parser.run(scanner.run(str));\n};\n\n/**\n\tReturns a list of linkable items in the given string.\n*/\nvar find = function find(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\tvar filtered = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\t\tif (token.isLink && (!type || token.type === type)) {\n\t\t\tfiltered.push(token.toObject());\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\n/**\n\tIs the given string valid linkable text of some sort\n\tNote that this does not trim the text for you.\n\n\tOptionally pass in a second `type` param, which is the type of link to test\n\tfor.\n\n\tFor example,\n\n\t\ttest(str, 'email');\n\n\tWill return `true` if str is a valid email.\n*/\nvar test = function test(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\treturn tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].type === type);\n};\n\n// Scanner and parser provide states and tokens for the lexicographic stage\n// (will be used to add additional link types)\nexports.find = find;\nexports.inherits = _class.inherits;\nexports.options = options;\nexports.parser = parser;\nexports.scanner = scanner;\nexports.test = test;\nexports.tokenize = tokenize;","'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _multi = require('./tokens/multi');\n\nvar MULTI_TOKENS = _interopRequireWildcard(_multi);\n\nvar _text = require('./tokens/text');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main parser\n*/\n\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.TokenState(tokenClass);\n};\n\n// The universal starting state.\nvar S_START = makeState();\n\n// Intermediate states for URLs. Note that domains that begin with a protocol\n// are treated slighly differently from those that don't.\nvar S_PROTOCOL = makeState(); // e.g., 'http:'\nvar S_MAILTO = makeState(); // 'mailto:'\nvar S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''\nvar S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'\nvar S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\nvar S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\nvar S_TLD = makeState(_multi.URL); // (A) Simplest possible URL with no query string\nvar S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\nvar S_TLD_PORT = makeState(_multi.URL); // TLD followed by a port number\nvar S_URL = makeState(_multi.URL); // Long URL with optional port and maybe query string\nvar S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\nvar S_URL_OPENBRACE = makeState(); // URL followed by {\nvar S_URL_OPENBRACKET = makeState(); // URL followed by [\nvar S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\nvar S_URL_OPENPAREN = makeState(); // URL followed by (\nvar S_URL_OPENBRACE_Q = makeState(_multi.URL); // URL followed by { and some symbols that the URL can end it\nvar S_URL_OPENBRACKET_Q = makeState(_multi.URL); // URL followed by [ and some symbols that the URL can end it\nvar S_URL_OPENANGLEBRACKET_Q = makeState(_multi.URL); // URL followed by < and some symbols that the URL can end it\nvar S_URL_OPENPAREN_Q = makeState(_multi.URL); // URL followed by ( and some symbols that the URL can end it\nvar S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\nvar S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\nvar S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\nvar S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\nvar S_EMAIL = makeState(_multi.EMAIL); // (C) Possible email address (could have more tlds)\nvar S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\nvar S_EMAIL_PORT = makeState(_multi.EMAIL); // (C) Email address with a port\nvar S_MAILTO_EMAIL = makeState(_multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)\nvar S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\nvar S_LOCALPART = makeState(); // Local part of the email address\nvar S_LOCALPART_AT = makeState(); // Local part of the email address plus @\nvar S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\nvar S_NL = makeState(_multi.NL); // single new line\n\n// Make path from start to protocol (with '//')\nS_START.on(_text.NL, S_NL).on(_text.PROTOCOL, S_PROTOCOL).on(_text.MAILTO, S_MAILTO).on(_text.SLASH, S_PROTOCOL_SLASH);\n\nS_PROTOCOL.on(_text.SLASH, S_PROTOCOL_SLASH);\nS_PROTOCOL_SLASH.on(_text.SLASH, S_PROTOCOL_SLASH_SLASH);\n\n// The very first potential domain name\nS_START.on(_text.TLD, S_DOMAIN).on(_text.DOMAIN, S_DOMAIN).on(_text.LOCALHOST, S_TLD).on(_text.NUM, S_DOMAIN);\n\n// Force URL for protocol followed by anything sane\nS_PROTOCOL_SLASH_SLASH.on(_text.TLD, S_URL).on(_text.DOMAIN, S_URL).on(_text.NUM, S_URL).on(_text.LOCALHOST, S_URL);\n\n// Account for dots and hyphens\n// hyphens are usually parts of domain names\nS_DOMAIN.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL_DOMAIN.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Hyphen can jump back to a domain name\n\n// After the first domain and a dot, we can find either a URL or another domain\nS_DOMAIN_DOT.on(_text.TLD, S_TLD).on(_text.DOMAIN, S_DOMAIN).on(_text.NUM, S_DOMAIN).on(_text.LOCALHOST, S_DOMAIN);\n\nS_EMAIL_DOMAIN_DOT.on(_text.TLD, S_EMAIL).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.NUM, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL_DOMAIN);\n\n// S_TLD accepts! But the URL could be longer, try to find a match greedily\n// The `run` function should be able to \"rollback\" to the accepting state\nS_TLD.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Become real URLs after `SLASH` or `COLON NUM SLASH`\n// Here PSS and non-PSS converge\nS_TLD.on(_text.COLON, S_TLD_COLON).on(_text.SLASH, S_URL);\nS_TLD_COLON.on(_text.NUM, S_TLD_PORT);\nS_TLD_PORT.on(_text.SLASH, S_URL);\nS_EMAIL.on(_text.COLON, S_EMAIL_COLON);\nS_EMAIL_COLON.on(_text.NUM, S_EMAIL_PORT);\n\n// Types of characters the URL can definitely end in\nvar qsAccepting = [_text.DOMAIN, _text.AT, _text.LOCALHOST, _text.NUM, _text.PLUS, _text.POUND, _text.PROTOCOL, _text.SLASH, _text.TLD, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND];\n\n// Types of tokens that can follow a URL and be part of the query string\n// but cannot be the very last characters\n// Characters that cannot appear in the URL at all should be excluded\nvar qsNonAccepting = [_text.COLON, _text.DOT, _text.QUERY, _text.PUNCTUATION, _text.CLOSEBRACE, _text.CLOSEBRACKET, _text.CLOSEANGLEBRACKET, _text.CLOSEPAREN, _text.OPENBRACE, _text.OPENBRACKET, _text.OPENANGLEBRACKET, _text.OPENPAREN];\n\n// These states are responsible primarily for determining whether or not to\n// include the final round bracket.\n\n// URL, followed by an opening bracket\nS_URL.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// URL with extra symbols at the end, followed by an opening bracket\nS_URL_NON_ACCEPTING.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// Closing bracket component. This character WILL be included in the URL\nS_URL_OPENBRACE.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_Q.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_Q.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_Q.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_Q.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_SYMS.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_SYMS.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_SYMS.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_SYMS.on(_text.CLOSEPAREN, S_URL);\n\n// URL that beings with an opening bracket, followed by a symbols.\n// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n// has a single opening bracket for some reason).\nS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// URL that begins with an opening bracket, followed by some symbols\nS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\nS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// Account for the query string\nS_URL.on(qsAccepting, S_URL);\nS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\nS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\nS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\n// Email address-specific state definitions\n// Note: We are not allowing '/' in email addresses since this would interfere\n// with real URLs\n\n// For addresses with the mailto prefix\n// 'mailto:' followed by anything sane is a valid email\nS_MAILTO.on(_text.TLD, S_MAILTO_EMAIL).on(_text.DOMAIN, S_MAILTO_EMAIL).on(_text.NUM, S_MAILTO_EMAIL).on(_text.LOCALHOST, S_MAILTO_EMAIL);\n\n// Greedily get more potential valid email values\nS_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\nS_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\n// For addresses without the mailto prefix\n// Tokens allowed in the localpart of the email\nvar localpartAccepting = [_text.DOMAIN, _text.NUM, _text.PLUS, _text.POUND, _text.QUERY, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND, _text.TLD];\n\n// Some of the tokens in `localpartAccepting` are already accounted for here and\n// will not be overwritten (don't worry)\nS_DOMAIN.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_TLD.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\n// Okay we're on a localpart. Now what?\n// TODO: IP addresses and what if the email starts with numbers?\nS_LOCALPART.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT) // close to an email address now\n.on(_text.DOT, S_LOCALPART_DOT);\nS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\nS_LOCALPART_AT.on(_text.TLD, S_EMAIL_DOMAIN).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL);\n// States following `@` defined above\n\nvar run = function run(tokens) {\n\tvar len = tokens.length;\n\tvar cursor = 0;\n\tvar multis = [];\n\tvar textTokens = [];\n\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar multiLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t// Consider these to be just plain text\n\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t}\n\n\t\twhile (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {\n\n\t\t\t// Get the next state\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t\tmultiLength++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\n\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\tfor (var i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Accepting state!\n\n\t\t\t// First close off the textTokens (if available)\n\t\t\tif (textTokens.length > 0) {\n\t\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t\t\ttextTokens = [];\n\t\t\t}\n\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\tmultiLength -= sinceAccepts;\n\n\t\t\t// Create a new multitoken\n\t\t\tvar MULTI = latestAccepting.emit();\n\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t}\n\t}\n\n\t// Finally close off the textTokens (if available)\n\tif (textTokens.length > 0) {\n\t\tmultis.push(new _multi.TEXT(textTokens));\n\t}\n\n\treturn multis;\n};\n\nexports.State = _state.TokenState;\nexports.TOKENS = MULTI_TOKENS;\nexports.run = run;\nexports.start = S_START;","'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _text = require('./tokens/text');\n\nvar TOKENS = _interopRequireWildcard(_text);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar tlds = 'aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|ac|academy|accenture|accountant|accountants|aco|active|actor|ad|adac|ads|adult|ae|aeg|aero|aetna|af|afamilycompany|afl|africa|ag|agakhan|agency|ai|aig|aigo|airbus|airforce|airtel|akdn|al|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|am|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|ao|aol|apartments|app|apple|aq|aquarelle|ar|arab|aramco|archi|army|arpa|art|arte|as|asda|asia|associates|at|athleta|attorney|au|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aw|aws|ax|axa|az|azure|ba|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bb|bbc|bbt|bbva|bcg|bcn|bd|be|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bf|bg|bh|bharti|bi|bible|bid|bike|bing|bingo|bio|biz|bj|black|blackfriday|blanco|blockbuster|blog|bloomberg|blue|bm|bms|bmw|bn|bnl|bnpparibas|bo|boats|boehringer|bofa|bom|bond|boo|book|booking|boots|bosch|bostik|boston|bot|boutique|box|br|bradesco|bridgestone|broadway|broker|brother|brussels|bs|bt|budapest|bugatti|build|builders|business|buy|buzz|bv|bw|by|bz|bzh|ca|cab|cafe|cal|call|calvinklein|cam|camera|camp|cancerresearch|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|cartier|casa|case|caseih|cash|casino|cat|catering|catholic|cba|cbn|cbre|cbs|cc|cd|ceb|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|chase|chat|cheap|chintai|chloe|christmas|chrome|chrysler|church|ci|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|ck|cl|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm|cn|co|coach|codes|coffee|college|cologne|com|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|coop|corsica|country|coupon|coupons|courses|cr|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|csc|cu|cuisinella|cv|cw|cx|cy|cymru|cyou|cz|dabur|dad|dance|data|date|dating|datsun|day|dclk|dds|de|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dj|dk|dm|dnp|do|docs|doctor|dodge|dog|doha|domains|dot|download|drive|dtv|dubai|duck|dunlop|duns|dupont|durban|dvag|dvr|dz|earth|eat|ec|eco|edeka|edu|education|ee|eg|email|emerck|energy|engineer|engineering|enterprises|epost|epson|equipment|er|ericsson|erni|es|esq|estate|esurance|et|etisalat|eu|eurovision|eus|events|everbank|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fi|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|fj|fk|flickr|flights|flir|florist|flowers|fly|fm|fo|foo|food|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|fr|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fujixerox|fun|fund|furniture|futbol|fyi|ga|gal|gallery|gallo|gallup|game|games|gap|garden|gb|gbiz|gd|gdn|ge|gea|gent|genting|george|gf|gg|ggee|gh|gi|gift|gifts|gives|giving|gl|glade|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn|godaddy|gold|goldpoint|golf|goo|goodhands|goodyear|goog|google|gop|got|gov|gp|gq|gr|grainger|graphics|gratis|green|gripe|grocery|group|gs|gt|gu|guardian|gucci|guge|guide|guitars|guru|gw|gy|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hk|hkt|hm|hn|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|honeywell|horse|hospital|host|hosting|hot|hoteles|hotels|hotmail|house|how|hr|hsbc|ht|htc|hu|hughes|hyatt|hyundai|ibm|icbc|ice|icu|id|ie|ieee|ifm|ikano|il|im|imamat|imdb|immo|immobilien|in|industries|infiniti|info|ing|ink|institute|insurance|insure|int|intel|international|intuit|investments|io|ipiranga|iq|ir|irish|is|iselect|ismaili|ist|istanbul|it|itau|itv|iveco|iwc|jaguar|java|jcb|jcp|je|jeep|jetzt|jewelry|jio|jlc|jll|jm|jmp|jnj|jo|jobs|joburg|jot|joy|jp|jpmorgan|jprs|juegos|juniper|kaufen|kddi|ke|kerryhotels|kerrylogistics|kerryproperties|kfh|kg|kh|ki|kia|kim|kinder|kindle|kitchen|kiwi|km|kn|koeln|komatsu|kosher|kp|kpmg|kpn|kr|krd|kred|kuokgroup|kw|ky|kyoto|kz|la|lacaixa|ladbrokes|lamborghini|lamer|lancaster|lancia|lancome|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lb|lc|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|li|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lixil|lk|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|lr|ls|lt|ltd|ltda|lu|lundbeck|lupin|luxe|luxury|lv|ly|ma|macys|madrid|maif|maison|makeup|man|management|mango|map|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mc|mckinsey|md|me|med|media|meet|melbourne|meme|memorial|men|menu|meo|merckmsd|metlife|mg|mh|miami|microsoft|mil|mini|mint|mit|mitsubishi|mk|ml|mlb|mls|mm|mma|mn|mo|mobi|mobile|mobily|moda|moe|moi|mom|monash|money|monster|mopar|mormon|mortgage|moscow|moto|motorcycles|mov|movie|movistar|mp|mq|mr|ms|msd|mt|mtn|mtr|mu|museum|mutual|mv|mw|mx|my|mz|na|nab|nadex|nagoya|name|nationwide|natura|navy|nba|nc|ne|nec|net|netbank|netflix|network|neustar|new|newholland|news|next|nextdirect|nexus|nf|nfl|ng|ngo|nhk|ni|nico|nike|nikon|ninja|nissan|nissay|nl|no|nokia|northwesternmutual|norton|now|nowruz|nowtv|np|nr|nra|nrw|ntt|nu|nyc|nz|obi|observer|off|office|okinawa|olayan|olayangroup|oldnavy|ollo|om|omega|one|ong|onl|online|onyourside|ooo|open|oracle|orange|org|organic|origins|osaka|otsuka|ott|ovh|pa|page|panasonic|panerai|paris|pars|partners|parts|party|passagens|pay|pccw|pe|pet|pf|pfizer|pg|ph|pharmacy|phd|philips|phone|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|pk|pl|place|play|playstation|plumbing|plus|pm|pn|pnc|pohl|poker|politie|porn|post|pr|pramerica|praxi|press|prime|pro|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|ps|pt|pub|pw|pwc|py|qa|qpon|quebec|quest|qvc|racing|radio|raid|re|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|rightathome|ril|rio|rip|rmit|ro|rocher|rocks|rodeo|rogers|room|rs|rsvp|ru|rugby|ruhr|run|rw|rwe|ryukyu|sa|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|save|saxo|sb|sbi|sbs|sc|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scjohnson|scor|scot|sd|se|search|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|sg|sh|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shop|shopping|shouji|show|showtime|shriram|si|silk|sina|singles|site|sj|sk|ski|skin|sky|skype|sl|sling|sm|smart|smile|sn|sncf|so|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|sr|srl|srt|st|stada|staples|star|starhub|statebank|statefarm|statoil|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv|swatch|swiftcover|swiss|sx|sy|sydney|symantec|systems|sz|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|tdk|team|tech|technology|tel|telecity|telefonica|temasek|tennis|teva|tf|tg|th|thd|theater|theatre|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tj|tjmaxx|tjx|tk|tkmaxx|tl|tm|tmall|tn|to|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tr|trade|trading|training|travel|travelchannel|travelers|travelersinsurance|trust|trv|tt|tube|tui|tunes|tushu|tv|tvs|tw|tz|ua|ubank|ubs|uconnect|ug|uk|unicom|university|uno|uol|ups|us|uy|uz|va|vacations|vana|vanguard|vc|ve|vegas|ventures|verisign|versicherung|vet|vg|vi|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|vista|vistaprint|viva|vivo|vlaanderen|vn|vodka|volkswagen|volvo|vote|voting|voto|voyage|vu|vuelos|wales|walmart|walter|wang|wanggou|warman|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weibo|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|ws|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--2scrj9c|xn--30rr7y|xn--3bst00m|xn--3ds443g|xn--3e0b707e|xn--3hcrj9c|xn--3oq18vl8pn36a|xn--3pxu8k|xn--42c2d9a|xn--45br5cyl|xn--45brj9c|xn--45q11c|xn--4gbrim|xn--54b7fta0cc|xn--55qw42g|xn--55qx5d|xn--5su34j936bgsg|xn--5tzm5g|xn--6frz82g|xn--6qq986b3xl|xn--80adxhks|xn--80ao21a|xn--80aqecdr1a|xn--80asehdb|xn--80aswg|xn--8y0a063a|xn--90a3ac|xn--90ae|xn--90ais|xn--9dbq2a|xn--9et52u|xn--9krt00a|xn--b4w605ferd|xn--bck1b9a5dre4c|xn--c1avg|xn--c2br7g|xn--cck2b3b|xn--cg4bki|xn--clchc0ea0b2g2a9gcd|xn--czr694b|xn--czrs0t|xn--czru2d|xn--d1acj3b|xn--d1alf|xn--e1a4c|xn--eckvdtc9d|xn--efvy88h|xn--estv75g|xn--fct429k|xn--fhbei|xn--fiq228c5hs|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--fjq720a|xn--flw351e|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--fzys8d69uvgm|xn--g2xx48c|xn--gckr3f0f|xn--gecrj9c|xn--gk3at1e|xn--h2breg3eve|xn--h2brj9c|xn--h2brj9c8c|xn--hxt814e|xn--i1b6b1a6a2e|xn--imr513n|xn--io0a7i|xn--j1aef|xn--j1amh|xn--j6w193g|xn--jlq61u9w7b|xn--jvr189m|xn--kcrx77d1x4a|xn--kprw13d|xn--kpry57d|xn--kpu716f|xn--kput3i|xn--l1acc|xn--lgbbat1ad8j|xn--mgb9awbf|xn--mgba3a3ejt|xn--mgba3a4f16a|xn--mgba7c0bbn0a|xn--mgbaakc7dvf|xn--mgbaam7a8h|xn--mgbab2bd|xn--mgbai9azgqp6j|xn--mgbayh7gpa|xn--mgbb9fbpob|xn--mgbbh1a|xn--mgbbh1a71e|xn--mgbc0a9azcg|xn--mgbca7dzdo|xn--mgberp4a5d4ar|xn--mgbgu82a|xn--mgbi4ecexp|xn--mgbpl2fh|xn--mgbt3dhd|xn--mgbtx2b|xn--mgbx4cd0ab|xn--mix891f|xn--mk1bu44c|xn--mxtq1m|xn--ngbc5azd|xn--ngbe9e0a|xn--ngbrx|xn--node|xn--nqv7f|xn--nqv7fs00ema|xn--nyqy26a|xn--o3cw4h|xn--ogbpf8fl|xn--p1acf|xn--p1ai|xn--pbt977c|xn--pgbs0dh|xn--pssy2u|xn--q9jyb4c|xn--qcka1pmc|xn--qxam|xn--rhqv96g|xn--rovu88b|xn--rvc1e0am3e|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--tckwe|xn--tiq49xqyj|xn--unup4y|xn--vermgensberater-ctb|xn--vermgensberatung-pwb|xn--vhquv|xn--vuq861b|xn--w4r85el8fhu5dnra|xn--w4rs40l|xn--wgbh1c|xn--wgbl6a|xn--xhq521b|xn--xkc2al3hye2a|xn--xkc2dl3a5ee0h|xn--y9a3aq|xn--yfro4i67o|xn--ygbi2ammx|xn--zfr164b|xperia|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye|yodobashi|yoga|yokohama|you|youtube|yt|yun|za|zappos|zara|zero|zip|zippo|zm|zone|zuerich|zw'.split('|'); // macro, see gulpfile.js\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n\n\t@module linkify\n\t@submodule scanner\n\t@main scanner\n*/\n\nvar NUMBERS = '0123456789'.split('');\nvar ALPHANUM = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\nvar WHITESPACE = [' ', '\\f', '\\r', '\\t', '\\v', '\\xA0', '\\u1680', '\\u180E']; // excluding line breaks\n\nvar domainStates = []; // states that jump to DOMAIN on /[a-z0-9]/\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.CharacterState(tokenClass);\n};\n\n// Frequently used states\nvar S_START = makeState();\nvar S_NUM = makeState(_text.NUM);\nvar S_DOMAIN = makeState(_text.DOMAIN);\nvar S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters\nvar S_WS = makeState(_text.WS);\n\n// States for special URL symbols\nS_START.on('@', makeState(_text.AT)).on('.', makeState(_text.DOT)).on('+', makeState(_text.PLUS)).on('#', makeState(_text.POUND)).on('?', makeState(_text.QUERY)).on('/', makeState(_text.SLASH)).on('_', makeState(_text.UNDERSCORE)).on(':', makeState(_text.COLON)).on('{', makeState(_text.OPENBRACE)).on('[', makeState(_text.OPENBRACKET)).on('<', makeState(_text.OPENANGLEBRACKET)).on('(', makeState(_text.OPENPAREN)).on('}', makeState(_text.CLOSEBRACE)).on(']', makeState(_text.CLOSEBRACKET)).on('>', makeState(_text.CLOSEANGLEBRACKET)).on(')', makeState(_text.CLOSEPAREN)).on('&', makeState(_text.AMPERSAND)).on([',', ';', '!', '\"', '\\''], makeState(_text.PUNCTUATION));\n\n// Whitespace jumps\n// Tokens of only non-newline whitespace are arbitrarily long\nS_START.on('\\n', makeState(_text.NL)).on(WHITESPACE, S_WS);\n\n// If any whitespace except newline, more whitespace!\nS_WS.on(WHITESPACE, S_WS);\n\n// Generates states for top-level domains\n// Note that this is most accurate when tlds are in alphabetical order\nfor (var i = 0; i < tlds.length; i++) {\n\tvar newStates = (0, _state.stateify)(tlds[i], S_START, _text.TLD, _text.DOMAIN);\n\tdomainStates.push.apply(domainStates, newStates);\n}\n\n// Collect the states generated by different protocls\nvar partialProtocolFileStates = (0, _state.stateify)('file', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolFtpStates = (0, _state.stateify)('ftp', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolHttpStates = (0, _state.stateify)('http', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolMailtoStates = (0, _state.stateify)('mailto', S_START, _text.DOMAIN, _text.DOMAIN);\n\n// Add the states to the array of DOMAINeric states\ndomainStates.push.apply(domainStates, partialProtocolFileStates);\ndomainStates.push.apply(domainStates, partialProtocolFtpStates);\ndomainStates.push.apply(domainStates, partialProtocolHttpStates);\ndomainStates.push.apply(domainStates, partialProtocolMailtoStates);\n\n// Protocol states\nvar S_PROTOCOL_FILE = partialProtocolFileStates.pop();\nvar S_PROTOCOL_FTP = partialProtocolFtpStates.pop();\nvar S_PROTOCOL_HTTP = partialProtocolHttpStates.pop();\nvar S_MAILTO = partialProtocolMailtoStates.pop();\nvar S_PROTOCOL_SECURE = makeState(_text.DOMAIN);\nvar S_FULL_PROTOCOL = makeState(_text.PROTOCOL); // Full protocol ends with COLON\nvar S_FULL_MAILTO = makeState(_text.MAILTO); // Mailto ends with COLON\n\n// Secure protocols (end with 's')\nS_PROTOCOL_FTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\nS_PROTOCOL_HTTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\ndomainStates.push(S_PROTOCOL_SECURE);\n\n// Become protocol tokens after a COLON\nS_PROTOCOL_FILE.on(':', S_FULL_PROTOCOL);\nS_PROTOCOL_SECURE.on(':', S_FULL_PROTOCOL);\nS_MAILTO.on(':', S_FULL_MAILTO);\n\n// Localhost\nvar partialLocalhostStates = (0, _state.stateify)('localhost', S_START, _text.LOCALHOST, _text.DOMAIN);\ndomainStates.push.apply(domainStates, partialLocalhostStates);\n\n// Everything else\n// DOMAINs make more DOMAINs\n// Number and character transitions\nS_START.on(NUMBERS, S_NUM);\nS_NUM.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_NUM).on(ALPHANUM, S_DOMAIN); // number becomes DOMAIN\n\nS_DOMAIN.on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n\n// All the generated states should have a jump to DOMAIN\nfor (var _i = 0; _i < domainStates.length; _i++) {\n\tdomainStates[_i].on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n}\n\nS_DOMAIN_HYPHEN.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_DOMAIN).on(ALPHANUM, S_DOMAIN);\n\n// Set default transition\nS_START.defaultTransition = makeState(_text.SYM);\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {String} str Input string to scan\n\t@return {Array} Array of TOKEN instances\n*/\nvar run = function run(str) {\n\n\t// The state machine only looks at lowercase strings.\n\t// This selective `toLowerCase` is used because lowercasing the entire\n\t// string causes the length and character position to vary in some in some\n\t// non-English strings. This happens only on V8-based runtimes.\n\tvar lowerStr = str.replace(/[A-Z]/g, function (c) {\n\t\treturn c.toLowerCase();\n\t});\n\tvar len = str.length;\n\tvar tokens = []; // return value\n\n\tvar cursor = 0;\n\n\t// Tokenize the string\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar nextState = null;\n\t\tvar tokenLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && (nextState = state.next(lowerStr[cursor]))) {\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\ttokenLength++;\n\t\t\tcursor++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\t\t\tcontinue;\n\t\t} // Should never happen\n\n\t\t// Roll back to the latest accepting state\n\t\tcursor -= sinceAccepts;\n\t\ttokenLength -= sinceAccepts;\n\n\t\t// Get the class for the new token\n\t\tvar TOKEN = latestAccepting.emit(); // Current token class\n\n\t\t// No more jumps, just make a new token\n\t\ttokens.push(new TOKEN(str.substr(cursor - tokenLength, tokenLength)));\n\t}\n\n\treturn tokens;\n};\n\nvar start = S_START;\nexports.State = _state.CharacterState;\nexports.TOKENS = TOKENS;\nexports.run = run;\nexports.start = start;","'use strict';\n\nexports.__esModule = true;\nexports.stateify = exports.TokenState = exports.CharacterState = undefined;\n\nvar _class = require('../utils/class');\n\nfunction createStateClass() {\n\treturn function (tClass) {\n\t\tthis.j = [];\n\t\tthis.T = tClass || null;\n\t};\n}\n\n/**\n\tA simple state machine that can emit token classes\n\n\tThe `j` property in this class refers to state jumps. It's a\n\tmultidimensional array where for each element:\n\n\t* index [0] is a symbol or class of symbols to transition to.\n\t* index [1] is a State instance which matches\n\n\tThe type of symbol will depend on the target implementation for this class.\n\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\tbut with a slighly different (polymorphic) implementation.\n\n\tThe `T` property refers to the token class.\n\n\tTODO: Can the `on` and `next` methods be combined?\n\n\t@class BaseState\n*/\nvar BaseState = createStateClass();\nBaseState.prototype = {\n\tdefaultTransition: false,\n\n\t/**\n \t@method constructor\n \t@param {Class} tClass Pass in the kind of token to emit if there are\n \t\tno jumps after this state and the state is accepting.\n */\n\n\t/**\n \tOn the given symbol(s), this machine should go to the given state\n \t\t@method on\n \t@param {Array|Mixed} symbol\n \t@param {BaseState} state Note that the type of this state should be the\n \t\tsame as the current instance (i.e., don't pass in a different\n \t\tsubclass)\n */\n\ton: function on(symbol, state) {\n\t\tif (symbol instanceof Array) {\n\t\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tthis.j.push([symbol, state]);\n\t\treturn this;\n\t},\n\n\n\t/**\n \tGiven the next item, returns next state for that item\n \t@method next\n \t@param {Mixed} item Should be an instance of the symbols handled by\n \t\tthis particular machine.\n \t@return {State} state Returns false if no jumps are available\n */\n\tnext: function next(item) {\n\t\tfor (var i = 0; i < this.j.length; i++) {\n\t\t\tvar jump = this.j[i];\n\t\t\tvar symbol = jump[0]; // Next item to check for\n\t\t\tvar state = jump[1]; // State to jump to if items match\n\n\t\t\t// compare item with symbol\n\t\t\tif (this.test(item, symbol)) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\n\t\t// Nowhere left to jump!\n\t\treturn this.defaultTransition;\n\t},\n\n\n\t/**\n \tDoes this state accept?\n \t`true` only of `this.T` exists\n \t\t@method accepts\n \t@return {Boolean}\n */\n\taccepts: function accepts() {\n\t\treturn !!this.T;\n\t},\n\n\n\t/**\n \tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n \ta class of items handled by this state machine.\n \t\tThis method should be overriden in extended classes.\n \t\t@method test\n \t@param {Mixed} item Does this item match the given symbol?\n \t@param {Mixed} symbol\n \t@return {Boolean}\n */\n\ttest: function test(item, symbol) {\n\t\treturn item === symbol;\n\t},\n\n\n\t/**\n \tEmit the token for this State (just return it in this case)\n \tIf this emits a token, this instance is an accepting state\n \t@method emit\n \t@return {Class} T\n */\n\temit: function emit() {\n\t\treturn this.T;\n\t}\n};\n\n/**\n\tState machine for string-based input\n\n\t@class CharacterState\n\t@extends BaseState\n*/\nvar CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t/**\n \tDoes the given character match the given character or regular\n \texpression?\n \t\t@method test\n \t@param {String} char\n \t@param {String|RegExp} charOrRegExp\n \t@return {Boolean}\n */\n\ttest: function test(character, charOrRegExp) {\n\t\treturn character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);\n\t}\n});\n\n/**\n\tState machine for input in the form of TextTokens\n\n\t@class TokenState\n\t@extends BaseState\n*/\nvar TokenState = (0, _class.inherits)(BaseState, createStateClass(), {\n\n\t/**\n  * Similar to `on`, but returns the state the results in the transition from\n  * the given item\n  * @method jump\n  * @param {Mixed} item\n  * @param {Token} [token]\n  * @return state\n  */\n\tjump: function jump(token) {\n\t\tvar tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\tvar state = this.next(new token('')); // dummy temp token\n\t\tif (state === this.defaultTransition) {\n\t\t\t// Make a new state!\n\t\t\tstate = new this.constructor(tClass);\n\t\t\tthis.on(token, state);\n\t\t} else if (tClass) {\n\t\t\tstate.T = tClass;\n\t\t}\n\t\treturn state;\n\t},\n\n\n\t/**\n \tIs the given token an instance of the given token class?\n \t\t@method test\n \t@param {TextToken} token\n \t@param {Class} tokenClass\n \t@return {Boolean}\n */\n\ttest: function test(token, tokenClass) {\n\t\treturn token instanceof tokenClass;\n\t}\n});\n\n/**\n\tGiven a non-empty target string, generates states (if required) for each\n\tconsecutive substring of characters in str starting from the beginning of\n\tthe string. The final state will have a special value, as specified in\n\toptions. All other \"in between\" substrings will have a default end state.\n\n\tThis turns the state machine into a Trie-like data structure (rather than a\n\tintelligently-designed DFA).\n\n\tNote that I haven't really tried these with any strings other than\n\tDOMAIN.\n\n\t@param {String} str\n\t@param {CharacterState} start State to jump from the first character\n\t@param {Class} endToken Token class to emit when the given string has been\n\t\tmatched and no more jumps exist.\n\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\twe don't have a full match\n\t@return {Array} list of newly-created states\n*/\nfunction stateify(str, start, endToken, defaultToken) {\n\tvar i = 0,\n\t    len = str.length,\n\t    state = start,\n\t    newStates = [],\n\t    nextState = void 0;\n\n\t// Find the next state without a jump to the next character\n\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tif (i >= len) {\n\t\treturn [];\n\t} // no new tokens were added\n\n\twhile (i < len - 1) {\n\t\tnextState = new CharacterState(defaultToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[i], nextState);\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tnextState = new CharacterState(endToken);\n\tnewStates.push(nextState);\n\tstate.on(str[len - 1], nextState);\n\n\treturn newStates;\n}\n\nexports.CharacterState = CharacterState;\nexports.TokenState = TokenState;\nexports.stateify = stateify;","\"use strict\";\n\nexports.__esModule = true;\nfunction createTokenClass() {\n\treturn function (value) {\n\t\tif (value) {\n\t\t\tthis.v = value;\n\t\t}\n\t};\n}\n\nexports.createTokenClass = createTokenClass;","'use strict';\n\nexports.__esModule = true;\nexports.URL = exports.TEXT = exports.NL = exports.EMAIL = exports.MAILTOEMAIL = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\nvar _text = require('./text');\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n// Is the given token a valid domain token?\n// Should nums be included here?\nfunction isDomainToken(token) {\n\treturn token instanceof _text.DOMAIN || token instanceof _text.TLD;\n}\n\n/**\n\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\tthan the value for a token being a small string of text, it's value an array\n\tof text tokens.\n\n\tUsed for grouping together URLs, emails, hashtags, and other potential\n\tcreations.\n\n\t@class MultiToken\n\t@abstract\n*/\nvar MultiToken = (0, _createTokenClass.createTokenClass)();\n\nMultiToken.prototype = {\n\t/**\n \tString representing the type for this token\n \t@property type\n \t@default 'TOKEN'\n */\n\ttype: 'token',\n\n\t/**\n \tIs this multitoken a link?\n \t@property isLink\n \t@default false\n */\n\tisLink: false,\n\n\t/**\n \tReturn the string this token represents.\n \t@method toString\n \t@return {String}\n */\n\ttoString: function toString() {\n\t\tvar result = [];\n\t\tfor (var i = 0; i < this.v.length; i++) {\n\t\t\tresult.push(this.v[i].toString());\n\t\t}\n\t\treturn result.join('');\n\t},\n\n\n\t/**\n \tWhat should the value for this token be in the `href` HTML attribute?\n \tReturns the `.toString` value by default.\n \t\t@method toHref\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\treturn this.toString();\n\t},\n\n\n\t/**\n \tReturns a hash of relevant values for this token, which includes keys\n \t* type - Kind of token ('url', 'email', etc.)\n \t* value - Original text\n \t* href - The value that should be added to the anchor tag's href\n \t\tattribute\n \t\t@method toObject\n \t@param {String} [protocol] `'http'` by default\n \t@return {Object}\n */\n\ttoObject: function toObject() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tvalue: this.toString(),\n\t\t\thref: this.toHref(protocol)\n\t\t};\n\t}\n};\n\n/**\n\tRepresents an arbitrarily mailto email address with the prefix included\n\t@class MAILTO\n\t@extends MultiToken\n*/\nvar MAILTOEMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true\n});\n\n/**\n\tRepresents a list of tokens making up a valid email address\n\t@class EMAIL\n\t@extends MultiToken\n*/\nvar EMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true,\n\ttoHref: function toHref() {\n\t\treturn 'mailto:' + this.toString();\n\t}\n});\n\n/**\n\tRepresents some plain text\n\t@class TEXT\n\t@extends MultiToken\n*/\nvar TEXT = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'text' });\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class NL\n\t@extends MultiToken\n*/\nvar NL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'nl' });\n\n/**\n\tRepresents a list of tokens making up a valid URL\n\t@class URL\n\t@extends MultiToken\n*/\nvar URL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'url',\n\tisLink: true,\n\n\t/**\n \tLowercases relevant parts of the domain and adds the protocol if\n \trequired. Note that this will not escape unsafe HTML characters in the\n \tURL.\n \t\t@method href\n \t@param {String} protocol\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\tvar hasProtocol = false;\n\t\tvar hasSlashSlash = false;\n\t\tvar tokens = this.v;\n\t\tvar result = [];\n\t\tvar i = 0;\n\n\t\t// Make the first part of the domain lowercase\n\t\t// Lowercase protocol\n\t\twhile (tokens[i] instanceof _text.PROTOCOL) {\n\t\t\thasProtocol = true;\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Skip slash-slash\n\t\twhile (tokens[i] instanceof _text.SLASH) {\n\t\t\thasSlashSlash = true;\n\t\t\tresult.push(tokens[i].toString());\n\t\t\ti++;\n\t\t}\n\n\t\t// Lowercase all other characters in the domain\n\t\twhile (isDomainToken(tokens[i])) {\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Leave all other characters as they were written\n\t\tfor (; i < tokens.length; i++) {\n\t\t\tresult.push(tokens[i].toString());\n\t\t}\n\n\t\tresult = result.join('');\n\n\t\tif (!(hasProtocol || hasSlashSlash)) {\n\t\t\tresult = protocol + '://' + result;\n\t\t}\n\n\t\treturn result;\n\t},\n\thasProtocol: function hasProtocol() {\n\t\treturn this.v[0] instanceof _text.PROTOCOL;\n\t}\n});\n\nexports.Base = MultiToken;\nexports.MAILTOEMAIL = MAILTOEMAIL;\nexports.EMAIL = EMAIL;\nexports.NL = NL;\nexports.TEXT = TEXT;\nexports.URL = URL;","'use strict';\n\nexports.__esModule = true;\nexports.AMPERSAND = exports.CLOSEPAREN = exports.CLOSEANGLEBRACKET = exports.CLOSEBRACKET = exports.CLOSEBRACE = exports.OPENPAREN = exports.OPENANGLEBRACKET = exports.OPENBRACKET = exports.OPENBRACE = exports.WS = exports.TLD = exports.SYM = exports.UNDERSCORE = exports.SLASH = exports.MAILTO = exports.PROTOCOL = exports.QUERY = exports.POUND = exports.PLUS = exports.NUM = exports.NL = exports.LOCALHOST = exports.PUNCTUATION = exports.DOT = exports.COLON = exports.AT = exports.DOMAIN = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n\n/**\n\tAbstract class used for manufacturing text tokens.\n\tPass in the value this token represents\n\n\t@class TextToken\n\t@abstract\n*/\nvar TextToken = (0, _createTokenClass.createTokenClass)();\nTextToken.prototype = {\n\ttoString: function toString() {\n\t\treturn this.v + '';\n\t}\n};\n\nfunction inheritsToken(value) {\n\tvar props = value ? { v: value } : {};\n\treturn (0, _class.inherits)(TextToken, (0, _createTokenClass.createTokenClass)(), props);\n}\n\n/**\n\tA valid domain token\n\t@class DOMAIN\n\t@extends TextToken\n*/\nvar DOMAIN = inheritsToken();\n\n/**\n\t@class AT\n\t@extends TextToken\n*/\nvar AT = inheritsToken('@');\n\n/**\n\tRepresents a single colon `:` character\n\n\t@class COLON\n\t@extends TextToken\n*/\nvar COLON = inheritsToken(':');\n\n/**\n\t@class DOT\n\t@extends TextToken\n*/\nvar DOT = inheritsToken('.');\n\n/**\n\tA character class that can surround the URL, but which the URL cannot begin\n\tor end with. Does not include certain English punctuation like parentheses.\n\n\t@class PUNCTUATION\n\t@extends TextToken\n*/\nvar PUNCTUATION = inheritsToken();\n\n/**\n\tThe word localhost (by itself)\n\t@class LOCALHOST\n\t@extends TextToken\n*/\nvar LOCALHOST = inheritsToken();\n\n/**\n\tNewline token\n\t@class NL\n\t@extends TextToken\n*/\nvar NL = inheritsToken('\\n');\n\n/**\n\t@class NUM\n\t@extends TextToken\n*/\nvar NUM = inheritsToken();\n\n/**\n\t@class PLUS\n\t@extends TextToken\n*/\nvar PLUS = inheritsToken('+');\n\n/**\n\t@class POUND\n\t@extends TextToken\n*/\nvar POUND = inheritsToken('#');\n\n/**\n\tRepresents a web URL protocol. Supported types include\n\n\t* `http:`\n\t* `https:`\n\t* `ftp:`\n\t* `ftps:`\n\n\t@class PROTOCOL\n\t@extends TextToken\n*/\nvar PROTOCOL = inheritsToken();\n\n/**\n\tRepresents the start of the email URI protocol\n\n\t@class MAILTO\n\t@extends TextToken\n*/\nvar MAILTO = inheritsToken('mailto:');\n\n/**\n\t@class QUERY\n\t@extends TextToken\n*/\nvar QUERY = inheritsToken('?');\n\n/**\n\t@class SLASH\n\t@extends TextToken\n*/\nvar SLASH = inheritsToken('/');\n\n/**\n\t@class UNDERSCORE\n\t@extends TextToken\n*/\nvar UNDERSCORE = inheritsToken('_');\n\n/**\n\tOne ore more non-whitespace symbol.\n\t@class SYM\n\t@extends TextToken\n*/\nvar SYM = inheritsToken();\n\n/**\n\t@class TLD\n\t@extends TextToken\n*/\nvar TLD = inheritsToken();\n\n/**\n\tRepresents a string of consecutive whitespace characters\n\n\t@class WS\n\t@extends TextToken\n*/\nvar WS = inheritsToken();\n\n/**\n\tOpening/closing bracket classes\n*/\n\nvar OPENBRACE = inheritsToken('{');\nvar OPENBRACKET = inheritsToken('[');\nvar OPENANGLEBRACKET = inheritsToken('<');\nvar OPENPAREN = inheritsToken('(');\nvar CLOSEBRACE = inheritsToken('}');\nvar CLOSEBRACKET = inheritsToken(']');\nvar CLOSEANGLEBRACKET = inheritsToken('>');\nvar CLOSEPAREN = inheritsToken(')');\n\nvar AMPERSAND = inheritsToken('&');\n\nexports.Base = TextToken;\nexports.DOMAIN = DOMAIN;\nexports.AT = AT;\nexports.COLON = COLON;\nexports.DOT = DOT;\nexports.PUNCTUATION = PUNCTUATION;\nexports.LOCALHOST = LOCALHOST;\nexports.NL = NL;\nexports.NUM = NUM;\nexports.PLUS = PLUS;\nexports.POUND = POUND;\nexports.QUERY = QUERY;\nexports.PROTOCOL = PROTOCOL;\nexports.MAILTO = MAILTO;\nexports.SLASH = SLASH;\nexports.UNDERSCORE = UNDERSCORE;\nexports.SYM = SYM;\nexports.TLD = TLD;\nexports.WS = WS;\nexports.OPENBRACE = OPENBRACE;\nexports.OPENBRACKET = OPENBRACKET;\nexports.OPENANGLEBRACKET = OPENANGLEBRACKET;\nexports.OPENPAREN = OPENPAREN;\nexports.CLOSEBRACE = CLOSEBRACE;\nexports.CLOSEBRACKET = CLOSEBRACKET;\nexports.CLOSEANGLEBRACKET = CLOSEANGLEBRACKET;\nexports.CLOSEPAREN = CLOSEPAREN;\nexports.AMPERSAND = AMPERSAND;","\"use strict\";\n\nexports.__esModule = true;\nexports.inherits = inherits;\nfunction inherits(parent, child) {\n\tvar props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\tvar extended = Object.create(parent.prototype);\n\tfor (var p in props) {\n\t\textended[p] = props[p];\n\t}\n\textended.constructor = child;\n\tchild.prototype = extended;\n\treturn child;\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar defaults = {\n\tdefaultProtocol: 'http',\n\tevents: null,\n\tformat: noop,\n\tformatHref: noop,\n\tnl2br: false,\n\ttagName: 'a',\n\ttarget: typeToTarget,\n\tvalidate: true,\n\tignoreTags: [],\n\tattributes: null,\n\tclassName: 'linkified' // Deprecated value - no default class will be provided in the future\n};\n\nexports.defaults = defaults;\nexports.Options = Options;\nexports.contains = contains;\n\n\nfunction Options(opts) {\n\topts = opts || {};\n\n\tthis.defaultProtocol = opts.hasOwnProperty('defaultProtocol') ? opts.defaultProtocol : defaults.defaultProtocol;\n\tthis.events = opts.hasOwnProperty('events') ? opts.events : defaults.events;\n\tthis.format = opts.hasOwnProperty('format') ? opts.format : defaults.format;\n\tthis.formatHref = opts.hasOwnProperty('formatHref') ? opts.formatHref : defaults.formatHref;\n\tthis.nl2br = opts.hasOwnProperty('nl2br') ? opts.nl2br : defaults.nl2br;\n\tthis.tagName = opts.hasOwnProperty('tagName') ? opts.tagName : defaults.tagName;\n\tthis.target = opts.hasOwnProperty('target') ? opts.target : defaults.target;\n\tthis.validate = opts.hasOwnProperty('validate') ? opts.validate : defaults.validate;\n\tthis.ignoreTags = [];\n\n\t// linkAttributes and linkClass is deprecated\n\tthis.attributes = opts.attributes || opts.linkAttributes || defaults.attributes;\n\tthis.className = opts.hasOwnProperty('className') ? opts.className : opts.linkClass || defaults.className;\n\n\t// Make all tags names upper case\n\tvar ignoredTags = opts.hasOwnProperty('ignoreTags') ? opts.ignoreTags : defaults.ignoreTags;\n\tfor (var i = 0; i < ignoredTags.length; i++) {\n\t\tthis.ignoreTags.push(ignoredTags[i].toUpperCase());\n\t}\n}\n\nOptions.prototype = {\n\t/**\n  * Given the token, return all options for how it should be displayed\n  */\n\tresolve: function resolve(token) {\n\t\tvar href = token.toHref(this.defaultProtocol);\n\t\treturn {\n\t\t\tformatted: this.get('format', token.toString(), token),\n\t\t\tformattedHref: this.get('formatHref', href, token),\n\t\t\ttagName: this.get('tagName', href, token),\n\t\t\tclassName: this.get('className', href, token),\n\t\t\ttarget: this.get('target', href, token),\n\t\t\tevents: this.getObject('events', href, token),\n\t\t\tattributes: this.getObject('attributes', href, token)\n\t\t};\n\t},\n\n\n\t/**\n  * Returns true or false based on whether a token should be displayed as a\n  * link based on the user options. By default,\n  */\n\tcheck: function check(token) {\n\t\treturn this.get('validate', token.toString(), token);\n\t},\n\n\n\t// Private methods\n\n\t/**\n  * Resolve an option's value based on the value of the option and the given\n  * params.\n  * @param {String} key Name of option to use\n  * @param operator will be passed to the target option if it's method\n  * @param {MultiToken} token The token from linkify.tokenize\n  */\n\tget: function get(key, operator, token) {\n\t\tvar optionValue = void 0,\n\t\t    option = this[key];\n\t\tif (!option) {\n\t\t\treturn option;\n\t\t}\n\n\t\tswitch (typeof option === 'undefined' ? 'undefined' : _typeof(option)) {\n\t\t\tcase 'function':\n\t\t\t\treturn option(operator, token.type);\n\t\t\tcase 'object':\n\t\t\t\toptionValue = option.hasOwnProperty(token.type) ? option[token.type] : defaults[key];\n\t\t\t\treturn typeof optionValue === 'function' ? optionValue(operator, token.type) : optionValue;\n\t\t}\n\n\t\treturn option;\n\t},\n\tgetObject: function getObject(key, operator, token) {\n\t\tvar option = this[key];\n\t\treturn typeof option === 'function' ? option(operator, token.type) : option;\n\t}\n};\n\n/**\n * Quick indexOf replacement for checking the ignoreTags option\n */\nfunction contains(arr, value) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (arr[i] === value) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction noop(val) {\n\treturn val;\n}\n\nfunction typeToTarget(href, type) {\n\treturn type === 'url' ? '_blank' : null;\n}","module.exports = require('./lib/linkify-string').default;\n"],"sourceRoot":""}