{"version":3,"sources":["webpack://timetrex/./interface/html5/views/portal/sign_in/PortalResetForgotPasswordController.js"],"names":["PortalResetForgotPasswordController","TTBackboneView","options","_","defaults","events","super","initialize","callback","this","api","el","Global","loadWidget","setElement","template","render","$this","$","focus","unbind","bind","e","keyCode","resetForgotPassword","append","$el","modal","on","removeView","remove","LocalCacheData","setAllURLArgs","omit","getAllURLArgs","IndexViewController","instance","router","navigate","company_id","trigger","replace","getPassword","password","passwordReset","key","new_password","confirm_password","onResult","result","isValid","details","getDetails","getDescription","error_string","isArray","each","index","val","hasOwnProperty","error","i","setError","clearError","i18n","widget","message","css","tooltip","title"],"mappings":"wOAGO,MAAMA,UAA4C,EAAAC,eACxD,YAAaC,EAAU,IACtBC,EAAEC,SAAUF,EAAS,CACpBG,OAAQ,CACP,sCAAuC,yBAIzCC,MAAOJ,GAGR,WAAYA,GACXI,MAAMC,WAAYL,GACbA,EAAQM,WACZC,KAAKD,SAAWN,EAAQM,UAIzBC,KAAKC,IAAM,iCACX,IAAIC,EAAKC,OAAOC,WAAY,uDAC5BJ,KAAKK,WAAYX,EAAEY,SAAUJ,EAAZR,IACjBM,KAAKO,SAIN,SACC,IAAIC,EAAQR,KACZA,KAAKS,EAAG,iBAAkBC,QAC1BV,KAAKS,EAAG,qBAAsBE,OAAQ,WAAYC,KAAM,WAAW,SAAUC,GACzD,KAAdA,EAAEC,SACNN,EAAMO,yBAGRN,EAAG,QAASO,OAAQhB,KAAKiB,KACzBjB,KAAKiB,IAAIC,MAAO,CACf,QAAQ,EACR,WAAY,WAEblB,KAAKiB,IAAIE,GAAI,mBAAmB,WAC/BX,EAAMY,gBAIR,aACCpB,KAAKiB,IAAII,SACTC,eAAeC,cAAe7B,EAAE8B,KAAMF,eAAeG,gBAAiB,OACtEH,eAAeC,cAAe7B,EAAE8B,KAAMF,eAAeG,gBAAiB,QACtEC,oBAAoBC,SAASC,OAAOC,SAAU,mCAAqCP,eAAeG,gBAAgBK,WAAY,CAC7HC,SAAS,EACTC,SAAS,IAIX,sBACC,IAAIxB,EAAQR,KACZ,GAAKA,KAAKiC,cAAgB,CACzB,IAAIC,EAAWlC,KAAKiC,cACpBjC,KAAKC,IAAIkC,cAAeb,eAAeG,gBAAgBW,IACtDF,EAASG,aACTH,EAASI,iBACP,CACDC,SAAU,SAAUC,GACnB,GAAMA,EAAOC,UAyBZjC,EAAMS,IAAIC,MAAO,QACZV,EAAMT,UACVS,EAAMT,eA3BiB,CACxB,IAAI2C,EAAUF,EAAOG,aACfD,IACLA,EAAUF,EAAOI,kBAElB,IAAIC,EAAe,GACd1C,OAAO2C,QAASJ,IAAgC,iBAAZA,EACxCjC,EAAEsC,KAAML,GAAS,SAAUM,EAAOC,GAC5BA,EAAIC,eAAgB,WACxBD,EAAMA,EAAIE,OAEX,IAAIC,EAAI,EACR,IAAM,IAAIhB,KAAOa,EAChBJ,GAA8BI,EAAIb,GAC7BgB,EAAI,IACRP,GAAgB,QAEjBO,OAIFP,EAAeH,EAEhBlC,EAAM6C,SAAU7C,EAAMC,EAAG,iBAAmBoC,QAalD,cACC,IAAIR,EAAerC,KAAKS,EAAG,iBACvB6B,EAAmBtC,KAAKS,EAAG,qBAC/B,OAAM4B,EAAaY,OAIlBjD,KAAKsD,WAAYjB,GAEbA,EAAaY,QAAUX,EAAiBW,OAC5CjD,KAAKqD,SAAUf,EAAkB7B,EAAE8C,KAAK7D,EAAG,iCACpC,IAEPM,KAAKsD,WAAYhB,GAGX,CACND,aAAcA,EAAaY,MAC3BX,iBAAkBA,EAAiBW,UAdnCjD,KAAKqD,SAAUhB,EAAc5B,EAAE8C,KAAK7D,EAAG,iCAChC,GAiBT,SAAU8D,EAAQC,GACjBD,EAAOE,IAAK,SAAU,iBACtBF,EAAOG,QAAS,CACfC,MAAOH,IAERD,EAAOG,QAAS,QAGjB,WAAYH,GACXA,EAAOE,IAAK,SAAU,kBACtBF,EAAOG,QAAS","file":"portal-sign_in-PortalResetForgotPasswordController.bundle.js?v=dcb492d3031477bc1c44","sourcesContent":["import { TTBackboneView } from '@/views/TTBackboneView';\nimport { TTAPI } from '@/services/TimeTrexClientAPI';\n\nexport class PortalResetForgotPasswordController extends TTBackboneView {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tevents: {\n\t\t\t\t'click .portal-reset-forgot-password': 'resetForgotPassword'\n\t\t\t}\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinitialize( options ) {\n\t\tsuper.initialize( options );\n\t\tif ( options.callback ) {\n\t\t\tthis.callback = options.callback;\n\t\t}\n\t\t// var $this = this;\n\t\t// __non_webpack_require__( this._required_files, function() {\n\t\tthis.api = TTAPI.APIRecruitmentAuthentication;\n\t\tvar el = Global.loadWidget( 'views/portal/sign_in/PortalResetForgotPassword.html' );\n\t\tthis.setElement( _.template( el )() );\n\t\tthis.render();\n\t\t// } );\n\t}\n\n\trender() {\n\t\tvar $this = this;\n\t\tthis.$( '#new_password' ).focus();\n\t\tthis.$( '#confirm_password' ).unbind( 'keydown' ).bind( 'keydown', function( e ) {\n\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t$this.resetForgotPassword();\n\t\t\t}\n\t\t} );\n\t\t$( 'body' ).append( this.$el );\n\t\tthis.$el.modal( {\n\t\t\t'show': true,\n\t\t\t'backdrop': 'static'\n\t\t} );\n\t\tthis.$el.on( 'hidden.bs.modal', function() {\n\t\t\t$this.removeView();\n\t\t} );\n\t}\n\n\tremoveView() {\n\t\tthis.$el.remove();\n\t\tLocalCacheData.setAllURLArgs( _.omit( LocalCacheData.getAllURLArgs(), 'sm' ) );\n\t\tLocalCacheData.setAllURLArgs( _.omit( LocalCacheData.getAllURLArgs(), 'key' ) );\n\t\tIndexViewController.instance.router.navigate( '#!m=PortalJobVacancy&company_id=' + LocalCacheData.getAllURLArgs().company_id, {\n\t\t\ttrigger: false,\n\t\t\treplace: true\n\t\t} );\n\t}\n\n\tresetForgotPassword() {\n\t\tvar $this = this;\n\t\tif ( this.getPassword() ) {\n\t\t\tvar password = this.getPassword();\n\t\t\tthis.api.passwordReset( LocalCacheData.getAllURLArgs().key,\n\t\t\t\tpassword.new_password,\n\t\t\t\tpassword.confirm_password\n\t\t\t\t, {\n\t\t\t\t\tonResult: function( result ) {\n\t\t\t\t\t\tif ( !result.isValid() ) {\n\t\t\t\t\t\t\tvar details = result.getDetails();\n\t\t\t\t\t\t\tif ( !details ) {\n\t\t\t\t\t\t\t\tdetails = result.getDescription(); // If the details is empty, try to get description to show.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar error_string = '';\n\t\t\t\t\t\t\tif ( Global.isArray( details ) || typeof details === 'object' ) {\n\t\t\t\t\t\t\t\t$.each( details, function( index, val ) {\n\t\t\t\t\t\t\t\t\tif ( val.hasOwnProperty( 'error' ) ) {\n\t\t\t\t\t\t\t\t\t\tval = val.error;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar i = 0;\n\t\t\t\t\t\t\t\t\tfor ( var key in val ) {\n\t\t\t\t\t\t\t\t\t\terror_string = error_string + val[key];\n\t\t\t\t\t\t\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\t\t\t\t\t\t\terror_string += '<br>';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\terror_string = details;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$this.setError( $this.$( '#new_password' ), error_string );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$this.$el.modal( 'hide' );\n\t\t\t\t\t\t\tif ( $this.callback ) {\n\t\t\t\t\t\t\t\t$this.callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t}\n\n\tgetPassword() {\n\t\tvar new_password = this.$( '#new_password' );\n\t\tvar confirm_password = this.$( '#confirm_password' );\n\t\tif ( !new_password.val() ) {\n\t\t\tthis.setError( new_password, $.i18n._( 'New password can\\'t be empty' ) );\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthis.clearError( new_password );\n\t\t}\n\t\tif ( new_password.val() !== confirm_password.val() ) {\n\t\t\tthis.setError( confirm_password, $.i18n._( 'New password does not match' ) );\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthis.clearError( confirm_password );\n\t\t}\n\n\t\treturn {\n\t\t\tnew_password: new_password.val(),\n\t\t\tconfirm_password: confirm_password.val()\n\t\t};\n\t}\n\n\tsetError( widget, message ) {\n\t\twidget.css( 'border', '1px solid red' );\n\t\twidget.tooltip( {\n\t\t\ttitle: message\n\t\t} );\n\t\twidget.tooltip( 'show' );\n\t}\n\n\tclearError( widget ) {\n\t\twidget.css( 'border', '1px solid #ccc' );\n\t\twidget.tooltip( 'dispose' );\n\t}\n\n}"],"sourceRoot":""}