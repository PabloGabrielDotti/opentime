{"version":3,"sources":["webpack://timetrex/./interface/html5/framework/leaflet/leaflet-timetrex.js","webpack://timetrex/./interface/html5/framework/measurement.js"],"names":["TTMap","map_html_element_id","map_options","this","defaults","start_view_coordinates","L","LatLng","start_view_zoom","colors","name","value","_internal","_layers","_leaflet_map","map","setView","createPane","worldbounds","LatLngBounds","latLng","setMaxBounds","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","addMarker","coordinates","_options","this_ttmap","Debug","Text","options","ref_id","TTUUID","generateUUID","jQuery","extend","marker","type","getLayer","add","flyTo","draggable","callbacks","onMarkerDragend","on","e","target","getLatLng","panTo","popupText","bindPopup","openPopup","permanent_title","permanent_title_text","bindTooltip","permanent","direction","offset","interactive","opacity","toggleTooltip","originalEvent","shiftKey","latlng","_preSpiderfyLatlng","window","open","lat","lng","position_accuracy","circle_options","radius","accuracy_circle","circle","Circle","_createAccuracyCircle","accuracy_circle_ref_id","remove","addInfoBox","info","control","onAdd","_div","DomUtil","create","update","innerHTML","heading","text","extra","addTo","addMarkerInteractive","this_TTMap","addClass","_container","$","i18n","_","event","onMarkerAddNew","removeClass","off","addPolyLine","line_points","length","reduce","result","coord","toString","line","Polyline","line_add_result","drawGeoFenceCircle","geo_fence","stroke","fill","weight","color","geo_color","fillOpacity","fillColor","layer","parseFloat","geo_circle","center","is_geofence","getBounds","drawGeoFencePolygon","latlngs","geo_polygon","item","Polygon","initRoutingEngine","routing_options","routing_url","calculateRealWorldRoute","tt_route","line_route_object","start_point","getStartMarker","end_point","getEndMarker","Routing","waypoints","fitSelectedRoutes","show","units","lineOptions","styles","addWaypoints","createMarker","routeLine","route","route_line_options","summary","totalDistance","FeatureGroup","getLayers","routeLayerGroup","eachLayer","addRouteInfoToLine","route_distance","autoRoute","router","OSRMv1","serviceUrl","profile","routingOptions","alternatives","steps","route_control","_line_route_object","routes","route_result_object","route_duration","totalTime","_route_result","callbackDistanceResults","error","error_text","Arr","line_object","route_result","distance_converted","TTConvertMapData","convertMetersToUserUnits","label_text","distance_in_user_format","user_distance_unit","pane","addTTMapData","data","tt_markers","Object","values","forEach","tt_marker","tt_routes","line_result","foundDuplicateLine","coords","zoom","fitBounds","bounds","getCenter","createLayer","undefined","TTMapData","Layer","TTRoute","_route_markers","route_markers","_layer_name","_references","_objects","cluster_layer_options","maxClusterRadius","spiderfyDistanceMultiplier","zoomToBoundsOnClick","cluster_click_bounds_options","paddingTopLeft","paddingBottomRight","_marker_cluster","markerClusterGroup","a","zoomToBounds","addLayer","object","key","tt_layer_group","tt_layer_key","get","search","clear","this_layer","keys","TTMarker","_latlng","autoPan","punch2TTMarker","_punch","latitude","longitude","position_coordinates","marker_ref_id","id","first_name","last_name","punch","punch_id","punch_date","punch_time","title","Global","filterOutput","punchControl2TTRoute","_punch_control","processPunchesFromViewController","single_marker_draggable","tt_map_data","metadata","data_type","output_markers","output_routes","user_objs","entries","i","i_arr_length","punch_date_objs","j","j_arr_length","punch_control_objs","control_key","total_punch_controls","current_punch_control","punch_key","punch_control_total_punches","punch_objects","marker_converted","push","route_converted","multidimensionalPunchArray2TTMapData","data_count","data_new_format","data_format_issues","data_invalid_coordinates","each","punch_value","punch_control_id","zero_id","user_id","date_stamp","tmp_punch_objects","status","count","data_format","data_format_issues_count","punches2MultidimensionalPunchArray","geofence_filters","groupArrayDataByKey","processBasicFromGenericViewController","entry_key","entry_value","entry","equals","original_entry","basicGeneric2TTMarker","basicGenericLocationArray2TTMapData","meters","userDistanceFormat","LocalCacheData","getLoginUserPreference","distance_format","measurement","convert","from","Unit","Distance","METRE","to","MILE","toFixed","KILOMETRE","distance_metres","win","ns","UNIT","Speed","MILES_PER_HOUR","KILOMETRE_PER_HOUR","METRE_PER_SECOND","KNOT","MILLIMETRE","INCH","YARDS","Pressure","HECTOPASCAL","PASCAL","BAR","Temperature","CELSIUS","FAHRENHEIT","KELVIN","Duration","HOUR","MINUTE","SECOND","DEFINITIONS","base","factor","de","en","en_GB","plural","reverse","MeasurementConverter","unitType","inputUnit","outputUnit","self","inputDef","outputDef","baseValue","baseType","mjs","setInputUnit","unit","setOutputUnit","UnitType","valueToConvert","converter","readyToConvert","mJs","Converter","define","amd","module","exports","measurementjs","mJsNamespace"],"mappings":"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","file":"interface_html5_framework_leaflet_leaflet-timetrex_js.bundle.js?v=931c238af925ac871a36","sourcesContent":["/**\n * Timetrex Map Handler to act as intermediary between our application and Leaflet\n * See bottom of file for the exported classes/functions.\n *\n * Note: this library makes use of Object.entries and Object.values, which are not supported by IE11 without polyfills.\n */\n// CSS\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport './leaflet-timetrex.css';\nimport iconRetinaUrl from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconUrl from 'leaflet/dist/images/marker-icon.png';\nimport shadowUrl from'leaflet/dist/images/marker-shadow.png';\n\n// JS\nimport 'leaflet';\nimport 'leaflet-draw';\nimport 'leaflet-routing-machine';\nimport 'leaflet-providers';\nimport 'leaflet.markercluster';\nimport measurementjs from '@/framework/measurement.js';\n\n// Leaflet images need special handling with webpack, due to the way they handle images. The plugin approach did not seem to work. Gave duplicate dist/dist urls. See https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-399857656. Another alternative is at https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-264311098\n// Not currently done for GEOFence maps, as markers are not used in the geofence editor/viewer.\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n\ticonRetinaUrl: iconRetinaUrl,\n\ticonUrl: iconUrl,\n\tshadowUrl: shadowUrl,\n});\n\n// ----------------------------------------------------- TTMap Class ----------------------------------------------------------------------------------\n/**\n * TTMap - Create an instance of this class to control your leaflet maps\n * @param map_html_element_id - Element to which the leaflet map is bound\n * @param map_options - additional options when creating the map\n * @constructor\n * @example\n * var MapIndex = new TTMap(); // You can create many independant MapHandlers for multiple maps\n * var testObject = { name: 'John', coordinates: new L.LatLng(1,2) }\n * MapIndex.createLayer('markers');\n * MapIndex.createLayer('lines');\n * MapIndex.getLayer('markers').add(testObject, testObject.coordinates)\n * MapIndex.getLayer('markers').add(testObject, testObject)\n * MapIndex.getLayer('markers').get(someObject.coordinates)\n * MapIndex.getLayer('markers').get(someObject.differentKey)\n * MapIndex.getLayer('lines').get() // Gets all records for that layer\n */\nfunction TTMap( map_html_element_id, map_options ) {\n\t// Check that this class is used as an instance. Don't return the normal interface if not\n\tif ( !( this instanceof TTMap ) ) {\n\t\treturn 'Must access this class via an instance created with `new` keyword';\n\t}\n\n\t// Config\n\t// -----------------------------------\n\n\tthis.defaults = {\n\t\tstart_view_coordinates: new L.LatLng( 39.50, -98.35 ), // middle of american continent\n\t\tstart_view_zoom: 4, // this zoom (4) covers a good area of the middle of american continent\n\t\tcolors: [\n\t\t\t{ name: 'red', value: '#c0392b' },\n\t\t\t{ name: 'orange', value: '#d35400' },\n\t\t\t{ name: 'yellow', value: '#f39c12' },\n\t\t\t{ name: 'green', value: '#16a085' },\n\t\t\t{ name: 'lightblue', value: '#27ae60' },\n\t\t\t{ name: 'blue', value: '#2980b9' },\n\t\t\t{ name: 'purple', value: '#8e44ad' }\n\t\t]\n\t};\n\tthis._internal = {\n\t\t_layers: {},\n\t\t_leaflet_map: L.map( 'map', map_options ).setView( this.defaults.start_view_coordinates, this.defaults.start_view_zoom )\n\t\t// _leaflet_map: L.map( 'map', map_options ).fitWorld() // cant remember why this is commented out. not needed and legacy?\n\t};\n\n\t// create the pane for distance line tooltips, so that we can set the pane's zIndex (in CSS) and prevent those tooltips covering up MarkerClusters\n\tthis._internal._leaflet_map.createPane( 'distanceTooltipPane' );\n\n\t//do not allow map wrapping. stop the map at the outer bounds of the world.\n\tvar worldbounds = new L.LatLngBounds( L.latLng( 85, -180 ), L.latLng( -85, 180 ) );\n\tthis._internal._leaflet_map.setMaxBounds( worldbounds );\n}\n\n// Adding map elements section\n// ----------------------------------\n\nTTMap.prototype.addMarker = function ( coordinates, _options ) {\n\tvar this_ttmap = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\tif ( !coordinates ) {\n\t\tDebug.Text( 'ERROR: Invalid parameters supplied to function. Marker not added to map.', 'leaflet-timetrex.js', 'TTMap', 'prototype.addMarker', 1 );\n\t\treturn false;\n\t}\n\tvar options = {\n\t\tref_id: TTUUID.generateUUID()\n\t};\n\n\tif ( _options ) {\n\t\tjQuery.extend( options, _options ); // override above defaults with 'options'\n\t}\n\n\tvar marker = L.marker( coordinates, options );\n\tmarker.type = 'marker';\n\tthis.getLayer( 'markers' ).add( marker, options.ref_id );\n\tthis_ttmap._internal._leaflet_map.flyTo( coordinates, 18 );\n\n\t// only add a listener if marker is draggable, to reduce event listeners.\n\tif ( options.draggable && options.callbacks && options.callbacks.onMarkerDragend ) {\n\t\tmarker.on( 'dragend', function ( e ) {\n\t\t\toptions.callbacks.onMarkerDragend( this, e.target.getLatLng() );\n\t\t\tthis_ttmap._internal._leaflet_map.panTo( e.target.getLatLng() );\n\t\t} );\n\t}\n\n\tif ( options.popupText ) {\n\t\tmarker.bindPopup( options.popupText ).openPopup();\n\t}\n\n\tif ( options.permanent_title && options.permanent_title_text ) {\n\t\t// add tooltip\n\t\tmarker.bindTooltip( options.permanent_title_text, {\n\t\t\tpermanent: true,\n\t\t\t// comment out direction and offset if you wish to allow auto label placement according to tooltip position on map\n\t\t\tdirection: 'top', // prevent overlap from 'auto' when 2 close markers overlap their tooltips.\n\t\t\toffset: [-15, -15], // adjust visual alignment of tooltip to marker\n\t\t\tinteractive: true, // allows tooltip to close when clicked, not just toggle on marker click\n\t\t\topacity: 0.85 // to allow user to see things behind tooltip such as clustergroups\n\t\t} );\n\t\tmarker.on( 'click', function ( e ) {\n\t\t\tthis.toggleTooltip();\n\n\t\t\t// Open Google Maps on SHIFT + CLICK\n\t\t\tif ( e.originalEvent.shiftKey ) {\n\t\t\t\t// use prespider latlng where possible, otherwise latlng will be slightly wrong as the marker moves during spiderify\n\t\t\t\t// Dev note: Using the old method as the new Google Maps API's do not allow for a pinpoint marker AND hybrid/satellite map view.\n\t\t\t\t// See here for more info: https://stackoverflow.com/a/47051786 and for params here: https://moz.com/ugc/everything-you-never-wanted-to-know-about-google-maps-parameters\n\t\t\t\tvar latlng = e.target._preSpiderfyLatlng ? e.target._preSpiderfyLatlng : e.target.getLatLng();\n\t\t\t\twindow.open( 'http://maps.google.com/maps/place/?q=' + latlng.lat + ',' + latlng.lng + '&t=h' );\n\t\t\t}\n\t\t} );\n\t} else {\n\t\tmarker.on( 'click', function ( e ) {\n\t\t\t// Open Google Maps on SHIFT + CLICK\n\t\t\tif ( e.originalEvent.shiftKey ) {\n\t\t\t\t// use prespider latlng where possible, otherwise latlng will be slightly wrong as the marker moves during spiderify\n\t\t\t\t// Dev note: Using the old method as the new Google Maps API's do not allow for a pinpoint marker AND hybrid/satellite map view.\n\t\t\t\t// See here for more info: https://stackoverflow.com/a/47051786 and for params here: https://moz.com/ugc/everything-you-never-wanted-to-know-about-google-maps-parameters\n\t\t\t\tvar latlng = e.target._preSpiderfyLatlng ? e.target._preSpiderfyLatlng : e.target.getLatLng();\n\t\t\t\twindow.open( 'http://maps.google.com/maps/place/?q=' + latlng.lat + ',' + latlng.lng + '&t=h' );\n\t\t\t}\n\t\t} );\n\t}\n\n\tif ( options.position_accuracy > 0 ) {\n\t\tvar circle_options = {\n\t\t\tref_id: TTUUID.generateUUID(),\n\t\t\tradius: options.position_accuracy\n\t\t};\n\t\tvar accuracy_circle = _createAccuracyCircle( coordinates, circle_options );\n\n\t\tthis.getLayer( 'marker-circles' ).add( accuracy_circle, circle_options.ref_id );\n\t\tmarker.accuracy_circle_ref_id = circle_options.ref_id;\n\n\t\t// only add a listener if marker is has an accuracy, to reduce event listeners.\n\t\tmarker.on( 'dragstart', function ( e ) {\n\t\t\tif ( this.accuracy_circle_ref_id ) {\n\t\t\t\tthis.options.position_accuracy = 0;\n\t\t\t\tthis_ttmap.getLayer( 'marker-circles' ).remove( this.accuracy_circle_ref_id );\n\t\t\t\t// TODO-PROGRESS: See what the remove command returns out of interest\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction _createAccuracyCircle( coordinates, options ) {\n\t\t// Not a lot of validation here, as this function is internal to addMarker, and only called from there\n\t\tvar circle = new L.Circle( coordinates, options );\n\t\tcircle.type = 'accuracy-circle';\n\n\t\treturn circle;\n\t}\n\n\treturn marker;\n};\n\nTTMap.prototype.addInfoBox = function ( options ) {\n\tvar map = this._internal._leaflet_map;\n\n\tvar info = L.control();\n\tinfo.onAdd = function ( map ) {\n\t\tthis._div = L.DomUtil.create( 'div', 'ttmap-info-box' );\n\t\tthis.update( options );\n\t\treturn this._div;\n\t};\n\n\t// method that we will use to update the control based on feature properties passed\n\tinfo.update = function ( options ) {\n\t\tthis._div.innerHTML = '<h4>' + options.heading + '</h4>' + '<p>' + options.text + '</p>';\n\t\tif ( options.extra ) {\n\t\t\tthis._div.innerHTML += options.extra;\n\t\t}\n\t};\n\n\tinfo.addTo( map );\n};\n\nTTMap.prototype.addMarkerInteractive = function ( options ) {\n\tvar this_TTMap = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\tvar map = this._internal._leaflet_map;\n\tL.DomUtil.addClass( map._container, 'crosshair-cursor-enabled' );\n\tthis.addInfoBox( {\n\t\theading: $.i18n._( 'Set new location' ),\n\t\ttext: $.i18n._( 'Click anywhere on the map to place a position marker.' ),\n\t\textra: '<p><em>'+ $.i18n._( 'Tip: Use SHIFT + CLICK and drag to quickly zoom into a specific area.' ) +'</em></p>'\n\t} );\n\n\tmap.on( 'click', function ( event ) {\n\t\tvar marker = this_TTMap.addMarker( event.latlng, options );\n\t\tmarker.options.callbacks.onMarkerAddNew( marker, event.latlng );\n\t\tL.DomUtil.removeClass( map._container, 'crosshair-cursor-enabled' );\n\t\tmap.off( 'click' );\n\t} );\n};\n\n// Shapes\n// -----------------------------------\n\nTTMap.prototype.addPolyLine = function ( line_points, _options ) {\n\tif ( !line_points || line_points.length < 2 ) {\n\t\tDebug.Text( 'ERROR: Invalid params passed for creating polyline.', 'leaflet-timetrex.js', 'TTMap', 'prototype.addPolyLine', 1 );\n\t\treturn false;\n\t}\n\tvar options = {\n\t\t// geodesic: true,\n\t\t// color: 'blue',\n\t\t// opacity: 0.8,\n\t\t// weight: 5,\n\t\t// stroke: true,\n\t\t// fillColor: 'blue',\n\t\t// fillOpacity: 0.35,\n\t\tref_id: line_points.reduce( function ( result, coord ) {\n\t\t\treturn result + coord.toString();\n\t\t}, '' )\n\t};\n\tif ( _options ) {\n\t\tjQuery.extend( options, _options ); // override above defaults with 'options'\n\t}\n\n\tvar line = new L.Polyline( line_points, options );\n\tline.type = 'line';\n\n\tvar line_add_result = this.getLayer( 'lines' ).add( line, options.ref_id );\n\n\t// FUTURE: This conditional return of 2 different things could get confusing in future,\n\t// to simplify, we can edit Layer.add to return just the line object, but do we want to do that?\n\t// Which is more useful in future, returning the line object or the current array on add.\n\tif ( line_add_result !== false ) {\n\t\treturn line;\n\t} else {\n\t\treturn line_add_result;\n\t}\n};\n\nTTMap.prototype.drawGeoFenceCircle = function ( geo_fence ) {\n\t// Debug.Arr(geo_fence, 'Draw GeoFence Circle','leaflet-timetrex.js','TTMap','prototype.drawGeoFenceCircle', 10);\n\n\tvar options = {\n\t\tstroke: true,\n\t\tfill: true,\n\t\topacity: 0.8,\n\t\tweight: 2,\n\t\tcolor: geo_fence.geo_color ? '#' + geo_fence.geo_color : '#0F820F',\n\t\tfillOpacity: 0.25,\n\t\tfillColor: geo_fence.geo_color ? '#' + geo_fence.geo_color : '#0F820F',\n\t\tref_id: TTUUID.generateUUID()\n\t};\n\n\tvar layer = new L.Circle(\n\t\t[parseFloat( geo_fence.geo_circle.center[0] ), parseFloat( geo_fence.geo_circle.center[1] )],\n\t\tparseFloat( geo_fence.geo_circle.radius ),\n\t\toptions\n\t);\n\n\tlayer.bindTooltip( geo_fence.name, {\n\t\tpermanent: true, // shows tooltip all the time, not just on geofence hover\n\t\tdirection: 'center', // centers the tooltip and removes the arrow\n\t\tinteractive: true // allows tooltip to close when clicked, not just toggle on geofence click\n\t} );\n\tlayer.on( 'click', function () {\n\t\tthis.toggleTooltip();\n\t} );\n\n\tlayer.is_geofence = true;\n\tlayer.type = 'geofence-circle';\n\tthis.getLayer( 'geofences' ).add( layer, options.ref_id );\n\treturn layer.getBounds();\n};\n\nTTMap.prototype.drawGeoFencePolygon = function ( geo_fence ) {\n\t// Debug.Arr(geo_fence, 'Draw GeoFence Polygon','leaflet-timetrex.js','TTMap','prototype.drawGeoFencePolygon', 10);\n\tvar latlngs = _.map( geo_fence.geo_polygon, function ( item ) {\n\t\treturn { lat: parseFloat( item[0] ), lng: parseFloat( item[1] ) };\n\t} );\n\n\tvar options = {\n\t\tstroke: true,\n\t\tfill: true,\n\t\topacity: 0.8,\n\t\tweight: 2,\n\t\tcolor: geo_fence.geo_color ? '#' + geo_fence.geo_color : '#0F820F',\n\t\tfillOpacity: 0.25,\n\t\tfillColor: geo_fence.geo_color ? '#' + geo_fence.geo_color : '#0F820F',\n\t\tref_id: TTUUID.generateUUID()\n\t};\n\tvar layer = new L.Polygon( latlngs, options );\n\n\tlayer.bindTooltip( geo_fence.name, {\n\t\tpermanent: true, // shows tooltip all the time, not just on geofence hover\n\t\tdirection: 'center', // centers the tooltip and removes the arrow\n\t\tinteractive: true // allows tooltip to close when clicked, not just toggle on geofence click\n\t} );\n\tlayer.on( 'click', function () {\n\t\tthis.toggleTooltip();\n\t} );\n\n\tlayer.is_geofence = true;\n\tlayer.type = 'geofence-poly';\n\tthis.getLayer( 'geofences' ).add( layer, options.ref_id );\n\treturn layer.getBounds();\n};\n\n// Routing and Distance\n// -----------------------------------\n\nTTMap.prototype.initRoutingEngine = function ( routing_options ) {\n\tthis.defaults.routing_url = routing_options.routing_url;\n};\n\nTTMap.prototype.calculateRealWorldRoute = function ( tt_route, line_route_object, options ) {\n\tvar this_TTMap = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t// Debug note: If distances/routes are not generated/returned, check that the start/end points are valid coordinates\n\n\tvar start_point = tt_route.getStartMarker().latlng;\n\tvar end_point = tt_route.getEndMarker().latlng;\n\n\tif ( !this.defaults.routing_url\n\t\t|| !start_point || !start_point.lat || !start_point.lng\n\t\t|| !end_point || !end_point.lat || !end_point.lng\n\t\t|| !line_route_object ) {\n\t\t// Missing/invalid route engine config\n\t\tDebug.Text( 'ERROR: Missing/invalid route engine config, route points, or line object', 'leaflet-timetrex.js', 'TTMap', 'prototype.calculateRealWorldRoute', 1 );\n\t\treturn false;\n\t}\n\n\tif ( start_point.lat == end_point.lat && start_point.lng == end_point.lng ) {\n\t\t// Missing/invalid route engine config\n\t\tDebug.Text( 'Start and end points are the same. Not valid route.', 'leaflet-timetrex.js', 'TTMap', 'prototype.calculateRealWorldRoute', 10 );\n\t\treturn false;\n\t}\n\n\tvar control = L.Routing.control( {\n\t\twaypoints: [start_point, end_point],\n\t\tfitSelectedRoutes: false, // must be false otherwise leaflet will adjust bounds to view only a specific route, likely the last one plotted. We want to let the marker bounds logic decide the view area\n\t\tshow: false, // hide the routing steps from the map display, also needs CSS from https://github.com/perliedman/leaflet-routing-machine/issues/20\n\t\tunits: 'metric', //always get the units in m and convert on this side\n\t\tlineOptions: {\n\t\t\tstyles: [\n\t\t\t\t{ color: 'black', opacity: 0.15, weight: 9 },\n\t\t\t\t{ color: 'white', opacity: 0.5, weight: 6 },\n\t\t\t\t{ color: '#3388ff', opacity: 1, weight: 2 }\n\t\t\t],\n\t\t\taddWaypoints: false // do not allow waypoints to be added when route is dragged\n\t\t},\n\t\tcreateMarker: function () {\n\t\t}, // Needed to prevent route control from creating markers, as the map already does this with tt_markers\n\t\trouteLine: function ( route, route_line_options ) {\n\t\t\t// Dev note: Route lines are drawn here (actual routes) and in on('routesfound') (straight lines)\n\t\t\tif ( route.summary.totalDistance === 0 ) {\n\t\t\t\t// TODO figure out why it wants to draw these lines with distance 0. for now just allow attempt at line draw, but dont add a label\n\t\t\t\t// console.log(\n\t\t\t\t// \t'points:\\n' +\n\t\t\t\t// \t'start:'+start_point.toString()+'\\n' +\n\t\t\t\t// \t'end:'+end_point.toString()+'\\n' +\n\t\t\t\t// \t'route:',route);\n\t\t\t\tDebug.Text( 'Route distance is zero. Line not drawn.', 'leaflet-timetrex.js', 'TTMap', 'calculateRealWorldRoute.routeLine', 10 );\n\t\t\t\t// return; // commented out and replaced with the return below, so errors do not get generated by plugin when its expecting a line\n\t\t\t\treturn new L.FeatureGroup( L.Routing.line( route, route_line_options ).getLayers() );\n\t\t\t}\n\t\t\t// Using FeatureGroup to convert the LayerGroup returned by line(). This allows us to share click events further down for the distance tooltip\n\t\t\tvar routeLayerGroup = new L.FeatureGroup( L.Routing.line( route, route_line_options ).getLayers() );\n\t\t\trouteLayerGroup.eachLayer( function ( layer ) {\n\t\t\t\tif ( layer.options && layer.options.color === '#3388ff' ) {\n\t\t\t\t\t// Found main route line (With the above color) add distance info and add click listeners\n\t\t\t\t\tthis_TTMap.addRouteInfoToLine( layer, { route_distance: route.summary.totalDistance } ); // as an object so it can work with route_result\n\t\t\t\t\trouteLayerGroup.on( 'click', function ( e ) {\n\t\t\t\t\t\t// Need to do a careful mix of routeLayerGroup and layer, to ensure tooltip and toggle is only added to one layer, but on click to whole layer group\n\t\t\t\t\t\tlayer.toggleTooltip();\n\n\t\t\t\t\t\t// Open Google Maps on SHIFT + CLICK\n\t\t\t\t\t\tif ( e.originalEvent.shiftKey ) {\n\t\t\t\t\t\t\t// window.open( 'http://maps.google.com/maps/place/?q=' + latlng.lat + ',' + latlng.lng + '&t=h' );\n\t\t\t\t\t\t\t// Dev note: Using the old method as the new Google Maps API's do not allow for a pinpoint marker AND hybrid/satellite map view.\n\t\t\t\t\t\t\t// See here for more info: https://stackoverflow.com/a/47051786 and for params here: https://moz.com/ugc/everything-you-never-wanted-to-know-about-google-maps-parameters\n\t\t\t\t\t\t\twindow.open( 'http://maps.google.com/maps?saddr=' + start_point.lat + ',' + start_point.lng + '&daddr=' + end_point.lat + ', ' + end_point.lng + '&t=h' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Remove old straight line - note this line holds all the distance and time data.\n\t\t\t// Once we start creating the distance table, we need this info. Refactor this code at that point if needed. Also store the data of the 3 route lines.\n\t\t\tthis_TTMap.getLayer( 'lines' ).remove( line_route_object.options.ref_id );\n\n\t\t\t// Dev note: Need to use and return actual control's line generation function, else we get a addTo undefined error,\n\t\t\t// As the rest of the library code is expecting the original function. Not designed well for the custom function.\n\t\t\treturn routeLayerGroup;\n\n\t\t\t// --- Custom line logic. Keep for now for reference incase needed during customer testing and customization\n\t\t\t// var route_line;\n\t\t\t// for (i = 0; i < route_line_options.styles.length; i++) {\n\t\t\t// \tvar options = {};\n\t\t\t// \toptions.ref_id = TTUUID.generateUUID();\n\t\t\t// \tjQuery.extend( options, route_line_options.styles[i] );\n\t\t\t// \t// TODO: Add these to a new layer group! currently it's lines.\n\t\t\t// \troute_line = this_TTMap.addPolyLine(route.coordinates, options);\n\t\t\t// }\n\t\t\t// // Add label to the last line created, which is the blue main line\n\t\t\t// this_TTMap.addRouteInfoToLine(route_line, { route_distance: route.summary.totalDistance });\n\t\t\t// --- End Custom line logic\n\t\t},\n\t\tautoRoute: false, // trigger the route generation/calc manually with control.route() below\n\t\trouter: new L.Routing.OSRMv1( {\n\t\t\t\tserviceUrl: this.defaults.routing_url + '/route/v1',\n\t\t\t\tprofile: 'driving',\n\t\t\t\troutingOptions: { alternatives: false, steps: false } //This seems to be ignored by leaflet routing machine, but leave here just in case. Alternatives=alternative routes and steps=human readable steps for following route. Neither of which we need.\n\t\t\t\t// removing steps from Leaflet routing machine is not yet an option as discussed in https://github.com/perliedman/leaflet-routing-machine/issues/20\n\t\t\t\t// step generation handled by changes in e655d95063e9bfff4be9d004e34b4596097fb90b but Leaflet routing machine still expects these back.\n\t\t\t\t// TODO: update leaflet-timetrex allow routing machine code to not require steps etc, see control.hide() below too\n\t\t\t}\n\t\t)\n\t} );\n\tcontrol.route();\n\t// Code to use OSRM's Demo server for debugging/testing\n\t// var control = L.Routing.control( {\n\t// \twaypoints: [start_point, end_point],\n\t// \tunits: 'metric' //always get the units in m and convert on this side\n\t// } );\n\n\tline_route_object.route_control = control; // optional for future reference, data not used from this attribute yet\n\n\tcontrol.on( 'routesfound', function ( result ) {\n\t\t// Dev note: Route lines are drawn here (straight lines) and in routeLine() above (actual routes)\n\t\tvar _line_route_object = line_route_object;\n\t\tif ( result.routes[0].summary.totalDistance > 0 ) {\n\t\t\tvar route_result_object = {};\n\t\t\t// we have to store distance/time data against the line rather than control object,\n\t\t\t// as its the only shared thing between control punches with the same route\n\t\t\troute_result_object.route_distance = tt_route.route_distance = result.routes[0].summary.totalDistance;\n\t\t\troute_result_object.route_duration = tt_route.route_duration = result.routes[0].summary.totalTime;\n\t\t\troute_result_object._route_result = result; // optional for future reference, data not used from this attribute yet\n\n\t\t\t// Send the route info back to the MapViewController callback via _callbackDistanceResults() to allow tracking of all calculated routes for use by shared routes.\n\t\t\tif ( options.callbackDistanceResults ) {\n\t\t\t\toptions.callbackDistanceResults( tt_route.ref_id, route_result_object );\n\t\t\t}\n\n\t\t\t_line_route_object.on( 'click', function ( e ) {\n\t\t\t\t// Open Google Maps on SHIFT + CLICK\n\t\t\t\tif ( e.originalEvent.shiftKey ) {\n\t\t\t\t\t// window.open( 'http://maps.google.com/maps/place/?q=' + latlng.lat + ',' + latlng.lng + '&t=h' );\n\t\t\t\t\t// Dev note: Using the old method as the new Google Maps API's do not allow for a pinpoint marker AND hybrid/satellite map view.\n\t\t\t\t\t// See here for more info: https://stackoverflow.com/a/47051786 and for params here: https://moz.com/ugc/everything-you-never-wanted-to-know-about-google-maps-parameters\n\t\t\t\t\twindow.open( 'http://maps.google.com/maps?saddr=' + start_point.lat + ',' + start_point.lng + '&daddr=' + end_point.lat + ', ' + end_point.lng + '&t=h' );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// this_MapViewController._drawDistance( line_route_object );\n\t\t\t// instead, add the distance to the existing line route object\n\t\t\tthis_TTMap.addRouteInfoToLine( _line_route_object, route_result_object );\n\t\t} else {\n\t\t\tDebug.Text( 'Route distance not more than 0. Route not drawn.', 'leaflet-timetrex.js', 'TTMap', 'prototype.calculateRealWorldRoute', 10 );\n\t\t}\n\t} );\n\n\tcontrol.on( 'routingerror', function ( error ) {\n\t\tvar error_text = 'There was a routing error mapping from [' + start_point.lat + ',' + start_point.lng + '] to [' + end_point.lat + ',' + end_point.lng + ']';\n\t\tDebug.Arr( error, error_text, 'leaflet-timetrex.js', 'TTMap', 'prototype.calculateRealWorldRoute', 10 );\n\t} );\n\tcontrol.addTo( this._internal._leaflet_map ); // Add the route to the map.\n\t// control.hide(); // now done above in options. hide the routing steps from the map display, also needs CSS from https://github.com/perliedman/leaflet-routing-machine/issues/20\n\n};\n\nTTMap.prototype.addRouteInfoToLine = function ( line_object, route_result ) {\n\tif ( !route_result || !route_result.route_distance ) {\n\t\tDebug.Text( 'Error: Route result or distance missing.', 'leaflet-timetrex.js', 'TTMap', 'prototype.addRouteInfoToLine', 1 );\n\t\treturn;\n\t}\n\t// add the route results to the line object\n\tjQuery.extend( line_object, route_result );\n\n\t// display the distance info on the line\n\tvar distance_converted = TTConvertMapData.convertMetersToUserUnits( route_result.route_distance );\n\tvar label_text = distance_converted.distance_in_user_format + ' ' + distance_converted.user_distance_unit;\n\tline_object.bindTooltip( label_text, {\n\t\tpane: 'distanceTooltipPane',\n\t\tpermanent: true, // shows tooltip all the time, not just on geofence hover\n\t\tdirection: 'center', // centers the tooltip and removes the arrow\n\t\tinteractive: true // allows tooltip to close when clicked, not just toggle on geofence click\n\t} );\n};\n\n// General operations section\n// ----------------------------------\n\nTTMap.prototype.addTTMapData = function ( data, options ) {\n\n\tvar this_TTMap = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\tif ( !data ) {\n\t\treturn false;\n\t}\n\n\t// Handle marker data\n\tif ( data.tt_markers && data.tt_markers.length > 0 ) {\n\t\tObject.values( data.tt_markers ).forEach( function ( tt_marker ) {\n\t\t\tthis_TTMap.addMarker( tt_marker.latlng, tt_marker );\n\t\t} );\n\t}\n\n\t// Handle route data\n\tif ( data.tt_routes && data.tt_routes.length > 0 ) {\n\t\tObject.values( data.tt_routes ).forEach( function ( tt_route ) {\n\t\t\t// Add the basic straight line distance to the map\n\t\t\t// Note: A return of false below can mean either invalid params, or line already exists\n\t\t\tvar line_result = this_TTMap.addPolyLine( [tt_route.getStartMarker().latlng, tt_route.getEndMarker().latlng], tt_route );\n\n\t\t\tif ( line_result !== false ) {\n\t\t\t\t// Calculate actual real world route, and save distance to the straight line object\n\t\t\t\tthis_TTMap.calculateRealWorldRoute( tt_route, line_result, options );\n\t\t\t} else {\n\t\t\t\t// Could be invalid or duplicate. Mark it as duplicate, and the grid functions in MapViewController.getDistancesGridData()\n\t\t\t\t// Can then try to find the existing route data. If its simply invalid params, then that function has a fallback.\n\t\t\t\ttt_route.foundDuplicateLine = true;\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Allow public access to several map commands in leaflet map\n// ----------------------------------\n\nTTMap.prototype.setView = function ( coords, zoom ) {\n\treturn this._internal._leaflet_map.setView( coords, zoom );\n};\nTTMap.prototype.getBounds = function () {\n\treturn this._internal._leaflet_map.getBounds();\n};\nTTMap.prototype.fitBounds = function ( bounds, options ) {\n\treturn this._internal._leaflet_map.fitBounds( bounds, options );\n};\nTTMap.prototype.getCenter = function () {\n\treturn this._internal._leaflet_map.getCenter();\n};\nTTMap.prototype.panTo = function (latLng) {\n\treturn this._internal._leaflet_map.panTo( latLng );\n};\n\n/**\n * createLayer - Accessor function for layers. Adds layers.\n * Used to create new layers in the map. Returns false if layer already exists.\n * @param {String} layer - return a specific layer\n * @param {Object} [options] - supply optional params for layer creation. Such as marker cluster options.\n */\nTTMap.prototype.createLayer = function ( layer, options ) {\n\tif ( !layer || this._internal._layers[layer] !== undefined ) {\n\t\tDebug.Text( 'ERROR: Either missing layer param or layer already exists. Abort create.', 'leaflet-timetrex.js', 'TTMap', 'prototype.createLayer', 1 );\n\t\treturn false;\n\t}\n\tthis._internal._layers[layer] = new TTMapData.Layer( this._internal._leaflet_map, layer, options );\n\treturn this._internal._layers[layer];\n};\n\n/**\n * layers - Accessor function for layers. Retrieves layers.\n * Used to get layers in the map. Returns false if layer does not exist\n * @param {String} layer - return a specific layer\n */\nTTMap.prototype.getLayer = function ( layer ) {\n\tif ( !layer || this._internal._layers[layer] === undefined ) {\n\t\tDebug.Text( 'ERROR: Either missing layer param or layer does not exist.', 'leaflet-timetrex.js', 'TTMap', 'prototype.getLayer', 1 );\n\t\treturn false;\n\t}\n\treturn this._internal._layers[layer];\n};\n\n// ----------------------------------------------------- TTMapData Class ----------------------------------------------------------------------------------\n/*\n * TTMapData holds all classes/types for the timetrex map. All of these functions are classes which are instantiated using the 'new' keyword.\n * Unlike the other parent class containers, TTMapData is not instantiated directly using new, but instead its child classes are referenced with the new keyword.\n * E.g. new TTMapData.Layer() or new TTMapData.TTMarker\n */\nvar TTMapData = ( function () {\n\n\tfunction TTMarker( _latlng, _options ) {\n\t\tif ( !_latlng ) {\n\t\t\tDebug.Text( 'ERROR: No coordinates passed to function. Marker not created.', 'leaflet-timetrex.js', 'TTMapData', 'TTMarker', 1 );\n\t\t\treturn;\n\t\t}\n\t\tthis.latlng = _latlng;\n\t\tthis.position_accuracy = 0;\n\n\t\t// draggable default should be false as true requires the ViewController to have a map save function too. So false is the safer default if no save function exists.\n\t\t// note that draggable true needs both the save function, and potentially a dragend callback function. Search code for onMarkerDragend\n\t\tthis.draggable = false;\n\n\t\tthis.autoPan = true;\n\t\tthis.ref_id = this.latlng.toString();\n\n\t\tif ( _options ) {\n\t\t\tjQuery.extend( this, _options ); // override above defaults with 'options'\n\t\t}\n\t}\n\n\tfunction TTRoute( _route_markers, _options ) {\n\t\tif ( !_route_markers || _route_markers.length < 2 ) {\n\t\t\tDebug.Text( 'ERROR: Invalid parameters supplied to function. Route not created.', 'leaflet-timetrex.js', 'TTMapData', 'TTRoute', 1 );\n\t\t\treturn;\n\t\t}\n\t\tthis.route_markers = _route_markers; // array so that 0 is start, and length-1 is end\n\t\tthis.route_distance = null;\n\t\tthis.route_duration = null;\n\n\t\t// we want the ref_id created from route markers rather than TTUUID.generateUUID() so we can compare shared routes\n\t\t// The order of markers is important from array as otherwise they would be different routes.\n\t\tthis.ref_id = this.route_markers.reduce( function ( result, marker ) {\n\t\t\treturn result + marker.latlng.toString();\n\t\t}, '' );\n\n\t\tif ( _options ) {\n\t\t\tjQuery.extend( this, _options ); // override above defaults with 'options'\n\t\t}\n\t}\n\n\tTTRoute.prototype.getStartMarker = function () {\n\t\treturn this.route_markers[0];\n\t};\n\n\tTTRoute.prototype.getEndMarker = function () {\n\t\treturn this.route_markers[this.route_markers.length - 1];\n\t};\n\n\t/**\n\t * LayerClass - Create a new instance of LayerClass to hold map layer objects\n\t * Very generic class, do not put any business logic or non-generic codes here\n\t * @class\n\t */\n\tfunction Layer( _leaflet_map, _layer_name, _options ) {\n\t\tthis._references = {\n\t\t\t_leaflet_map: _leaflet_map,\n\t\t\t_layer_name: _layer_name\n\t\t};\n\t\tthis._objects = {};\n\n\t\tif ( _options && _options.type === 'marker-cluster' ) {\n\t\t\t// NOTE: These are global defaults (could get overridden). Set your actual preferences in MapViewController.initLeafletMap() or whereever you init your map from\n\t\t\tvar cluster_layer_options = {\n\t\t\t\tmaxClusterRadius: 80, // 80 is default. make sure not too big, else clusters cant spiderify, not too small for overlap\n\t\t\t\tspiderfyDistanceMultiplier: 5, // to prevent overlap, but with clickable tooltips to hide, not so much an issue now\n\t\t\t\tzoomToBoundsOnClick: false // used with cluster click bounds. if set to true, turn off the on clusterclick below.\n\t\t\t};\n\t\t\t// NOTE: These are global defaults (could get overridden). Set your actual preferences in MapViewController.initLeafletMap() or whereever you init your map from\n\t\t\tvar cluster_click_bounds_options = {\n\t\t\t\t// if these are too big, then may cause issues on smaller screens (less room to bound/show markers)\n\t\t\t\tpaddingTopLeft: [25, 90], // needed to stop markers and labels going under search box. Exact amount is tricky to get right\n\t\t\t\tpaddingBottomRight: [25, 25] // same as above but for attributions.\n\t\t\t};\n\n\t\t\t// Override above defaults if supplied in _options\n\t\t\tif ( _options.cluster_layer_options ) {\n\t\t\t\tjQuery.extend( cluster_layer_options, _options.cluster_layer_options );\n\t\t\t}\n\t\t\tif ( _options.cluster_click_bounds_options ) {\n\t\t\t\tjQuery.extend( cluster_click_bounds_options, _options.cluster_click_bounds_options );\n\t\t\t}\n\n\t\t\tthis._marker_cluster = L.markerClusterGroup( cluster_layer_options );\n\t\t\t// handle the zoom bounds differently to take into account search menu + footer space\n\t\t\tthis._marker_cluster.on( 'clusterclick', function ( a ) {\n\t\t\t\ta.layer.zoomToBounds( cluster_click_bounds_options );\n\t\t\t} );\n\t\t\t_leaflet_map.addLayer( this._marker_cluster );\n\t\t}\n\t}\n\n\t/**\n\t * Add a single object to the layer\n\t * @param {Object} object - The object you wish to add to the layer.\n\t * @param {string} [key] - The key you wish to search the objects by. By default object's coordinates will be used.\n\t * @return {(Object[]|boolean)} Array of currently stored objects.\n\t */\n\tLayer.prototype.add = function ( object, key ) {\n\t\tkey = key || object.coordinates;\n\t\tif ( this._objects[key] === undefined ) {\n\t\t\tif ( this._marker_cluster ) {\n\t\t\t\tthis._marker_cluster.addLayer( object );\n\t\t\t} else {\n\t\t\t\tobject.addTo( this._references._leaflet_map );\n\t\t\t}\n\t\t\tobject.tt_layer_group = this._references._layer_name;\n\t\t\tobject.tt_layer_key = key;\n\t\t\tthis._objects[key] = object;\n\t\t\treturn this._objects;\n\t\t} else {\n\t\t\t// Error rather than Note, because now that Markers have unique ID's there should be no duplicates.\n\t\t\tDebug.Arr( object, 'Note: Object already exists in layer. Not added again.', 'leaflet-timetrex.js', 'TTMapData', 'Layer.add', 10 );\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Get a single object (pass search param) or all objects for that layer (no param)\n\t * @param {string} [search] - The key you wish to search the objects by. If none, all are returned.\n\t * @return {(Object|Object[])} The object searched, or array of all objects.\n\t */\n\tLayer.prototype.get = function ( search ) {\n\t\tif ( search === undefined ) {\n\t\t\t// No search specified, return all objects in layer\n\t\t\treturn this._objects;\n\t\t} else {\n\t\t\treturn this._objects[search];\n\t\t}\n\t};\n\n\t/**\n\t * Remove a single object (pass search param)\n\t * @param {string} search - The key you wish to search the objects by.\n\t * @return {(Object|Object[])} The array with remaining objects for that layer\n\t */\n\tLayer.prototype.remove = function ( search ) {\n\t\tif ( search === undefined ) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tif ( this._objects[search] !== undefined ) {\n\t\t\t\tthis.get( search ).remove();\n\t\t\t\t// Note, the below does not remove the attribute key, that will still stay on the layer object. Good enough for at the moment though (and faster).\n\t\t\t\t// See https://stackoverflow.com/a/208106 for more info re: delete (slower) vs undefined (faster).\n\t\t\t\tthis._objects[search] = undefined;\n\t\t\t\treturn this._objects;\n\t\t\t} else {\n\t\t\t\tDebug.Arr( search, 'Note: Search key did not exist in layer. Not removed.', 'leaflet-timetrex.js', 'TTMapData', 'Layer.remove', 10 );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Remove all objects from layer and map\n\t */\n\tLayer.prototype.clear = function () {\n\t\tvar this_layer = this; // Reference local scope for callbacks to reference further down in the function. Var name also identifies what 'this' is referring to.\n\t\tObject.keys( this._objects ).map( function ( key ) {\n\t\t\tthis_layer.remove( key );\n\t\t} );\n\t};\n\n\treturn {\n\t\tTTMarker: TTMarker,\n\t\tTTRoute: TTRoute,\n\t\tLayer: Layer,\n\t\tLatLng: L.LatLng // Use the same format as L.LatLng, but link it here so it can be replaced in future if needed. Reduce dependance on leaflet\n\t};\n\n} )();\n\n// ----------------------------------------------------- TTConvertMapData Class ----------------------------------------------------------------------------------\nvar TTConvertMapData = ( function () {\n\t// TODO-future: Move TTConvertMapData to a separate independent file at some point / if needed to encourage lazy loading\n\n\t/* TTConvertMapData is split into 4 sections:\n\t- Stage 1: Initial processors from View Controllers (Public functions)\n\t\t- processPunchesFromViewController\n\t\t- processBasicFromGenericViewController\n\t- Stage 2: Bulk conversion\n\t\t- punches2MultidimensionalPunchArray\n\t\t- multidimensionalPunchArray2TTMapData\n\t\t- basicGenericLocationArray2TTMapData\n\t- Stage 3: Single to single\n\t\t- punch2TTMarker\n\t\t- punchControl2TTRoute\n\t\t- basicGeneric2TTMarker\n\t- Utilities\n\t\t- convertMetersToUserUnits (public)\n\t */\n\n\t// Stage 1 - Initial processors from View Controllers (Public functions)\n\t// -----------------------------------------------------------------------\n\n\tfunction processPunchesFromViewController( data, _options ) {\n\t\tvar options = {\n\t\t\t// default should be false as true requires the ViewController to have a map save function too. So false is the safer default if no save function exists.\n\t\t\t// note that draggable true needs both the save function, and potentially a dragend callback function. Search code for onMarkerDragend\n\t\t\tsingle_marker_draggable: false\n\t\t};\n\t\tjQuery.extend( options, _options ); // override above defaults with 'options'\n\n\t\t// Organise data into the right formats\n\t\tvar multi_d_punches = punches2MultidimensionalPunchArray( data );\n\t\tvar tt_map_data = multidimensionalPunchArray2TTMapData( multi_d_punches, options );\n\t\tvar geofence_filters = Global.groupArrayDataByKey( data, true );\n\t\treturn {\n\t\t\ttt_map_data: tt_map_data,\n\t\t\toptions: options,\n\t\t\tgeofence_filters: geofence_filters\n\t\t};\n\t}\n\n\tfunction processBasicFromGenericViewController( data, _options ) {\n\t\tvar options = {\n\t\t\t// default should be false as true requires the ViewController to have a map save function too. So false is the safer default if no save function exists.\n\t\t\t// note that draggable true needs both the save function, and potentially a dragend callback function. Search code for onMarkerDragend\n\t\t\tsingle_marker_draggable: false\n\t\t};\n\t\tjQuery.extend( options, _options ); // override above defaults with 'options'\n\n\t\t// Organise data into the right formats\n\t\tvar tt_map_data = basicGenericLocationArray2TTMapData( data, options );\n\t\t// var geofence_filters = Global.groupArrayDataByKey( data, true ); // do we need this for generic? start with just markers then expand if needed.\n\t\treturn {\n\t\t\ttt_map_data: tt_map_data,\n\t\t\toptions: options\n\t\t\t// geofence_filters: geofence_filters // commented out as geofence filters not used in generic scenarios\n\t\t};\n\t}\n\n\t// Stage 2 - bulk conversion of business logic to various forms\n\t// -----------------------------------------------------------------------\n\n\t/**\n\t * Pass in an array of punches.\n\t * This will output punches in the format Array[user_id][punch_date][punch_control_id] = {} which contains further structure\n\t * @param data - array of punches\n\t */\n\tfunction punches2MultidimensionalPunchArray( data ) {\n\t\tvar data_count = data.length;\n\t\tvar data_new_format = {};\n\t\tvar data_format_issues = 0;\n\t\tvar data_invalid_coordinates = 0;\n\n\t\tif ( !data || data_count === 0 ) {\n\t\t\tDebug.Text( 'ERROR: Either data is not an array, or data is empty', 'leaflet-timetrex.js', 'TTConvertMapData', 'punches2MultidimensionalPunchArray', 1 );\n\t\t\treturn null;\n\t\t}\n\n\t\t$.each( data, function ( punch_key, punch_value ) {\n\n\t\t\t// validation checks on location data\n\t\t\tif ( !punch_value.latitude || !punch_value.longitude ) {\n\t\t\t\t// Give error but continue. This function is focussed on converting data. Not handling missing coordinates. Do this elsewhere.\n\t\t\t\tDebug.Text( 'Note: Missing/invalid LatLng for punch. Ignoring and continuing.', 'leaflet-timetrex.js', 'TTConvertMapData', 'punches2MultidimensionalPunchArray', 10 );\n\t\t\t\tdata_invalid_coordinates++;\n\t\t\t\tdata_format_issues++;\n\t\t\t}\n\n\t\t\t// if no punch control id, it's likely a single record\n\t\t\tif ( !punch_value.punch_control_id ) {\n\t\t\t\tpunch_value.punch_control_id = TTUUID.zero_id;\n\t\t\t}\n\n\t\t\t// start populating new structure\n\n\t\t\t// check if the values of the multi-dimensional array need to be set-up first\n\t\t\tif ( data_new_format[punch_value.user_id] === undefined ) {\n\t\t\t\tdata_new_format[punch_value.user_id] = [];\n\t\t\t}\n\n\t\t\tif ( data_new_format[punch_value.user_id][punch_value.date_stamp] === undefined ) {\n\t\t\t\tdata_new_format[punch_value.user_id][punch_value.date_stamp] = [];\n\t\t\t}\n\n\t\t\tif ( data_new_format[punch_value.user_id][punch_value.date_stamp][punch_value.punch_control_id] === undefined ) {\n\t\t\t\tdata_new_format[punch_value.user_id][punch_value.date_stamp][punch_value.punch_control_id] = {\n\t\t\t\t\tpunch_objects: [],\n\t\t\t\t\troute_distance: null,\n\t\t\t\t\troute_duration: null\n\t\t\t\t};\n\n\t\t\t} else if ( data_new_format[punch_value.user_id][punch_value.date_stamp][punch_value.punch_control_id] !== undefined ) {\n\t\t\t\tvar tmp_punch_objects = data_new_format[punch_value.user_id][punch_value.date_stamp][punch_value.punch_control_id].punch_objects;\n\n\t\t\t\t// error if punch control has more than 2 punches or existing punch of same status\n\t\t\t\tif ( tmp_punch_objects.length > 1 || tmp_punch_objects[0].status === punch_value.status ) {\n\t\t\t\t\tDebug.Text( 'ERROR: Invalid  punches in punch control', 'leaflet-timetrex.js', 'TTConvertMapData', 'punches2MultidimensionalPunchArray', 1 );\n\t\t\t\t\tdata_format_issues++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata_new_format[punch_value.user_id][punch_value.date_stamp][punch_value.punch_control_id].punch_objects.push( punch_value );\n\t\t} );\n\n\t\treturn {\n\t\t\tdata: data_new_format,\n\t\t\tmetadata: {\n\t\t\t\tcount: data_count,\n\t\t\t\tdata_format: 'grouped_by-user_id-date_stamp-punch_control_id',\n\t\t\t\tdata_type: 'common_punches',\n\t\t\t\tdata_format_issues_count: data_format_issues,\n\t\t\t\tdata_invalid_coordinates: data_invalid_coordinates\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction multidimensionalPunchArray2TTMapData( data, options ) {\n\t\tif ( !data || !data.data || !data.metadata || data.metadata.data_type !== 'common_punches' ) {\n\t\t\tDebug.Text( 'ERROR: Invalid function parameter format', 'leaflet-timetrex.js', 'TTConvertMapData', 'multidimensionalPunchArray2TTMapData', 1 );\n\t\t}\n\t\tvar output_markers = [];\n\t\tvar output_routes = [];\n\t\t// iterate down the object - consider making this a reusable function in future\n\t\tvar user_objs = Object.entries( data.data ); // Grouped by USERS\n\t\tfor ( var i = 0, i_arr_length = user_objs.length; i < i_arr_length; i++ ) {\n\t\t\tvar punch_date_objs = Object.entries( user_objs[i][1] ); // Grouped by DATE\n\t\t\tfor ( var j = 0, j_arr_length = punch_date_objs.length; j < j_arr_length; j++ ) {\n\t\t\t\tvar punch_control_objs = Object.entries( punch_date_objs[j][1] ); // Grouped by PUNCH CONTROL ID\n\t\t\t\tfor ( var control_key = 0, total_punch_controls = punch_control_objs.length; control_key < total_punch_controls; control_key++ ) {\n\t\t\t\t\tvar current_punch_control = punch_control_objs[control_key][1];\n\t\t\t\t\tcurrent_punch_control.tt_markers = [];\n\t\t\t\t\tfor ( var punch_key = 0, punch_control_total_punches = current_punch_control.punch_objects.length; punch_key < punch_control_total_punches; punch_key++ ) {\n\t\t\t\t\t\t// START PUNCH HANDLING\n\t\t\t\t\t\tvar current_punch = ( current_punch_control.punch_objects[punch_key] );\n\t\t\t\t\t\tvar marker_converted = punch2TTMarker( current_punch, options );\n\t\t\t\t\t\tif ( marker_converted ) {\n\t\t\t\t\t\t\toutput_markers.push( marker_converted );\n\t\t\t\t\t\t\tcurrent_punch_control.tt_markers.push( marker_converted );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// check if this is a valid punch control pair, otherwise don't route\n\t\t\t\t\tif ( current_punch_control.tt_markers.length === 2 ) {\n\t\t\t\t\t\tvar route_converted = punchControl2TTRoute( current_punch_control, options );\n\t\t\t\t\t\toutput_routes.push( route_converted );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tDebug.Text( 'Note: Punch control record skipped from map as count is not equal to 2.', 'leaflet-timetrex.js', 'TTConvertMapData', 'multidimensionalPunchArray2TTMapData', 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // end for grouped by date\n\t\t} // end for grouped by user\n\n\t\t// Check to see if its a single punch, if so, enable dragging and add callbacks unless options override\n\t\t// Code ref: callbacks set in MapViewController, but added to marker in TTMap.prototype.addMarker(). Search onMarkerDragend\n\t\tif ( output_markers.length === 1 && options && options.single_marker_draggable) {\n\t\t\toutput_markers[0].draggable = true;\n\t\t}\n\n\t\treturn {\n\t\t\ttt_markers: output_markers,\n\t\t\ttt_routes: output_routes\n\t\t};\n\t}\n\n\tfunction basicGenericLocationArray2TTMapData( data, options ) {\n\n\t\t// check for existing data, if not, then exit\n\t\tif ( !data || data.length < 1 ) {\n\t\t\tDebug.Text( 'ERROR: Invalid data supplied to converter.', 'leaflet-timetrex.js', 'TTConvertMapData', 'BasicGenericLocationArray2TTMapData', 1 );\n\t\t\treturn false;\n\t\t}\n\n\t\tvar output_markers = [];\n\n\t\t$.each( data, function ( entry_key, entry_value ) {\n\n\t\t\t// Some warnings to help with tracking down problems, but they will not stop the flow/loop.\n\t\t\tif ( ( !entry_value.first_name || !entry_value.last_name ) && entry_value.name ) {\n\t\t\t\tDebug.Text( 'Note: Missing first/last name, but .name exists, so we could use that', 'leaflet-timetrex.js', 'TTConvertMapData', 'BasicGenericLocationArray2TTMapData', 10 );\n\t\t\t} else if ( !entry_value.first_name || !entry_value.last_name || !entry_value.latitude || !entry_value.longitude ) {\n\t\t\t\tDebug.Text( 'Note: Potentially invalid data supplied to converter. (firstname/lastname/lat/ng). Check if its a one off or if all data has same missing fields.', 'leaflet-timetrex.js', 'TTConvertMapData', 'BasicGenericLocationArray2TTMapData', 10 );\n\t\t\t}\n\n\t\t\tif(filterZeroCoordinates(entry_value)) {\n\t\t\t\tvar marker_converted = basicGeneric2TTMarker( entry_value, options );\n\t\t\t\tif ( marker_converted ) {\n\t\t\t\t\toutput_markers.push( marker_converted );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// check to see if its a single punch, if so, enable dragging and add callbacks\n\t\tif ( output_markers.length === 1 && options && options.single_marker_draggable ) {\n\t\t\toutput_markers[0].draggable = true;\n\t\t}\n\n\t\treturn {\n\t\t\ttt_markers: output_markers\n\t\t};\n\t}\n\n\t// Stage 3 - one-2-one conversion of business logic to generic\n\t// -----------------------------------------------------------------------\n\n\tfunction punch2TTMarker( _punch, _options ) {\n\t\t// TODO: Dev note: In future, consolidate this into basicGeneric2TTMarker, and pass in extra things like punch related things via options variable from punch2Marker functions.\n\n\t\t// check for valid coordinates\n\t\tif ( !_punch || !_punch.latitude || !_punch.longitude ) {\n\t\t\t// If issues, return undefined for instead of a TTMarker. Handle missing coordinates/marker later when plotting.\n\t\t\tDebug.Text( 'Note: Missing/invalid coordinates. Unable to generate TTMarker. Ignoring and continuing.', 'leaflet-timetrex.js', 'TTConvertMapData', 'punch2TTMarker', 10 );\n\t\t\treturn undefined;\n\t\t}\n\t\tvar position_coordinates = new TTMapData.LatLng( _punch.latitude, _punch.longitude );\n\t\tvar marker_ref_id = _punch.id;\n\t\tif ( !_punch.id ) {\n\t\t\t// unique reference for markers without ID:\n\t\t\tmarker_ref_id = TTUUID.generateUUID();\n\n\t\t\t// Unique scenario for new punch records.\n\t\t\t// When a marker for a new punch is chosen, and then the map is re-opened (but punch not yet saved), it does not yet have first/last name.\n\t\t\t_punch.first_name = 'New'; // TODO: not ideal, would prefer blank, as this may interfere elsewhere\n\t\t\t_punch.last_name = 'Punch';\n\t\t}\n\n\t\tvar options = {\n\t\t\tref_id: marker_ref_id,\n\t\t\tposition_accuracy: _punch.position_accuracy,\n\t\t\tpunch: _punch, // needed so that the getDistancesGridData() function can recall punch info for the distance table.\n\t\t\tpunch_id: _punch.id\n\t\t};\n\n\t\tif ( ( _punch.first_name || _punch.last_name ) && (_punch.punch_date || _punch.punch_time) ) {\n\t\t\toptions.title = Global.filterOutput( _punch.first_name ) + ' ' + Global.filterOutput( _punch.last_name );\n\t\t\toptions.permanent_title_text = '<strong>' + options.title + '</strong><br />' + _punch.punch_date + '&nbsp;' + _punch.punch_time;\n\t\t\toptions.permanent_title = true; // generates the square 'bubble' attached to marker\n\t\t} else if ( ( !_punch.first_name && !_punch.last_name ) && (_punch.punch_date || _punch.punch_time) ) {\n\t\t\toptions.title = Global.filterOutput( _punch.punch_date ) + ' ' + Global.filterOutput( _punch.punch_time );\n\t\t\toptions.permanent_title_text = options.title;\n\t\t\toptions.permanent_title = true;\n\t\t}\n\t\tif ( !options.title ) {\n\t\t\toptions.permanent_title = false;\n\t\t}\n\n\t\tif ( _options ) {\n\t\t\tjQuery.extend( options, _options ); // override above defaults\n\t\t}\n\n\t\treturn new TTMapData.TTMarker( position_coordinates, options );\n\t}\n\n\tfunction punchControl2TTRoute( _punch_control, _options ) {\n\t\tvar options = {};\n\t\tif ( _options ) {\n\t\t\tjQuery.extend( options, _options ); // override above defaults\n\t\t}\n\n\t\treturn new TTMapData.TTRoute( _punch_control.tt_markers, options );\n\t}\n\n\tfunction basicGeneric2TTMarker( entry, _options ) {\n\n\t\t// check for valid coordinates\n\t\tif ( !entry || !entry.latitude || !entry.longitude ) {\n\t\t\t// If issues, return undefined for instead of a TTMarker. Handle missing coordinates/marker later when plotting.\n\t\t\tDebug.Text( 'Note: Missing/invalid coordinates. Unable to generate TTMarker. Ignoring and continuing.', 'leaflet-timetrex.js', 'TTConvertMapData', 'basicGeneric2TTMarker', 10 );\n\t\t\treturn undefined;\n\t\t}\n\t\tvar position_coordinates = new TTMapData.LatLng( entry.latitude, entry.longitude );\n\t\tvar marker_ref_id = entry.id;\n\t\tif ( !marker_ref_id ) {\n\t\t\t// unique reference for markers without ID:\n\t\t\tmarker_ref_id = TTUUID.generateUUID();\n\t\t}\n\n\t\tvar options = {\n\t\t\ttitle: entry.first_name + ' ' + entry.last_name, // the on marker hover text\n\t\t\tpermanent_title_text: '<strong>' + entry.first_name + ' ' + entry.last_name + '</strong><br />',\n\t\t\tpermanent_title: true, // generates the square 'bubble' attached to marker\n\t\t\tref_id: marker_ref_id,\n\t\t\toriginal_entry: entry\n\t\t};\n\n\t\tif ( !entry.first_name && !entry.last_name && entry.name ) {\n\t\t\t// Debug.Text( 'Note: Missing first or last name, but .name exists, so will use that in marker label', 'leaflet-timetrex.js', 'TTConvertMapData', 'punch2TTMarker', 10 );\n\t\t\toptions.title = Global.filterOutput( entry.name );\n\t\t\toptions.permanent_title_text = '<strong>' + Global.filterOutput( entry.name ) + '</strong>';\n\t\t} else if ( !entry.first_name && !entry.last_name && !entry.name ) {\n\t\t\t// Debug.Text( 'Note: Missing first or last name, and no .name exists, so setting blank labels and turning off permanent marker', 'leaflet-timetrex.js', 'TTConvertMapData', 'punch2TTMarker', 10 );\n\t\t\toptions.title = '';\n\t\t\toptions.permanent_title_text = '';\n\t\t\toptions.permanent_title = false;\n\t\t}\n\n\t\tif ( _options ) {\n\t\t\tjQuery.extend( options, _options ); // override above defaults\n\t\t}\n\n\t\treturn new TTMapData.TTMarker( position_coordinates, options );\n\t}\n\n\t// Utilities\n\t// -----------------------------------------------------------------------\n\n\tfunction convertMetersToUserUnits( meters ) {\n\t\tif ( meters && meters >= 0 ) {\n\t\t\tvar distance_in_user_format;\n\t\t\tvar user_distance_unit;\n\t\t\tvar userDistanceFormat = LocalCacheData.getLoginUserPreference().distance_format;\n\n\t\t\tif ( userDistanceFormat == 20 ) {\n\t\t\t\tdistance_in_user_format = ( measurement( 'Distance' )\n\t\t\t\t\t.convert( meters )\n\t\t\t\t\t.from( measurement.Unit.Distance.METRE )\n\t\t\t\t\t.to( measurement.Unit.Distance.MILE ) ).toFixed( 2 ); // miles\n\t\t\t\tuser_distance_unit = $.i18n._( 'Miles' ); // miles\n\t\t\t} else if ( userDistanceFormat == 10 ) {\n\t\t\t\tdistance_in_user_format = ( measurement( 'Distance' )\n\t\t\t\t\t.convert( parseFloat( meters ) )\n\t\t\t\t\t.from( measurement.Unit.Distance.METRE )\n\t\t\t\t\t.to( measurement.Unit.Distance.KILOMETRE ) ).toFixed( 2 ); // kilometers\n\t\t\t\tuser_distance_unit = $.i18n._( 'Km' ); // kilometers\n\t\t\t} else {\n\t\t\t\tdistance_in_user_format = meters;\n\t\t\t\tuser_distance_unit = $.i18n._( 'm' ); // meters\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdistance_metres: meters,\n\t\t\t\tdistance_in_user_format: distance_in_user_format,\n\t\t\t\tuser_distance_unit: user_distance_unit\n\t\t\t};\n\t\t} else {\n\t\t\tDebug.Text( 'Distance is missing or not a valid number', 'leaflet-timetrex.js', 'TTConvertMapData', 'convertMetersToUserUnits', 10 );\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction filterZeroCoordinates( entry ) {\n\t\t// There is a small chance 0,0 could be a real coordinate, but its in the sea (Atlantic Ocean), so unlikely.\n\t\tvar coordinates = new TTMapData.LatLng( entry.latitude, entry.longitude );\n\t\t// Using LatLng rather than simple lat === 0, to normalize 0.0000000000, and string values of \"0\" etc.\n\t\tif ( coordinates.equals(new TTMapData.LatLng(0, 0)) ) {\n\t\t\t// Debug.Arr( entry, 'Coordinates of marker are 0,0 or similar. Not generating TTMarker. Ignoring and continuing.', 'leaflet-timetrex.js', 'TTConvertMapData', 'filterZeroCoordinates', 10 );\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn entry;\n\t\t}\n\t}\n\n\treturn {\n\t\tprocessPunchesFromViewController: processPunchesFromViewController,\n\t\tprocessBasicFromGenericViewController: processBasicFromGenericViewController,\n\t\tconvertMetersToUserUnits: convertMetersToUserUnits\n\t\t// Not all functions in TTConvertMapData are in the return object, as most are only needed internally\n\t};\n\n} )();\n\nexport {\n\tTTMap,\n\tTTMapData,\n\tTTConvertMapData\n};","\n/**\n * Measurement.Js\n * \n * Unit-of-Measure conversion made easy.\n * \n * @author Philipp Austermann\n * @version 0.1\n * @example text measurementJs.convert(3.5).from(DISTANCE.KMH).to(DISTANCE.M); or  measurementJs.convert(3.5).from(DISTANCE.KMH).to(DISTANCE.M);\n * \n * @param {Object} ns\n * @returns {undefined}\n */\n(function(win, ns) {\n\t\"use strict\";\n\n\tvar UNIT = {\n\t\tSpeed: {\n\t\t\tMILES_PER_HOUR: 'mph',\n\t\t\tKILOMETRE_PER_HOUR: 'km/h',\n\t\t\tMETRE_PER_SECOND: 'm/s',\n\t\t\tKNOT: 'kn'\n\t\t},\n\t\tDistance: {\n\t\t\tMILLIMETRE: 'mm',\n\t\t\tINCH: 'in',\n\t\t\tKILOMETRE: 'km',\n\t\t\tMILE: 'M',\n\t\t\tMETRE: 'm',\n\t\t\tYARDS: 'y'\n\t\t},\n\t\tPressure: {\n\t\t\tHECTOPASCAL: 'hPa',\n\t\t\tPASCAL: 'Pa',\n\t\t\tBAR: 'bar'\n\t\t},\n\t\tTemperature: {\n\t\t\tCELSIUS: 'c',\n\t\t\tFAHRENHEIT: 'f',\n\t\t\tKELVIN: 'k'\n\t\t},\n\t\tDuration: {\n\t\t\tHOUR: 'h',\n\t\t\tMINUTE: 'm',\n\t\t\tSECOND: 's'\n\t\t}\n\t};\n\n\tvar DEFINITIONS = {\n\t\tSpeed: {\n\t\t\t'mph': {\n\t\t\t\tkey: UNIT.Speed.MILES_PER_HOUR,\n\t\t\t\tbase: UNIT.Speed.KILOMETRE_PER_HOUR,\n\t\t\t\tfactor: 1.609344\n\t\t\t},\n\t\t\t'km/h': {\n\t\t\t\tkey: UNIT.Speed.KILOMETRE_PER_HOUR,\n\t\t\t\tbase: null\n\t\t\t},\n\t\t\t'm/s': {\n\t\t\t\tkey: UNIT.Speed.METRE_PER_SECOND,\n\t\t\t\tbase: UNIT.Speed.KILOMETRE_PER_HOUR,\n\t\t\t\tfactor: 3.6\n\t\t\t},\n\t\t\t'kn': {\n\t\t\t\tkey: UNIT.Speed.KNOT,\n\t\t\t\tbase: UNIT.Speed.KILOMETRE_PER_HOUR,\n\t\t\t\tfactor: 1.852\n\t\t\t}\n\t\t},\n\t\tDistance: {\n\t\t\t'M': {\n\t\t\t\tkey: UNIT.Distance.MILE,\n\t\t\t\tbase: 'm',\n\t\t\t\tfactor: 1609.34\n\t\t\t},\n\t\t\t'km': {\n\t\t\t\tkey: UNIT.Distance.KILOMETRE,\n\t\t\t\tbase: 'm',\n\t\t\t\tfactor: 1000,\n\t\t\t\tname: {\n\t\t\t\t\tde: 'Kilometer',\n\t\t\t\t\ten: 'Kilometer',\n\t\t\t\t\ten_GB: 'Kilometre'\n\t\t\t\t},\n\t\t\t\tplural: {\n\t\t\t\t\ten: 'Kilometers',\n\t\t\t\t\ten_GB: 'Kilometres'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'm': {\n\t\t\t\tkey: UNIT.Distance.METRE,\n\t\t\t\tbase: null, // equals factor of 1\n\t\t\t\tname: {\n\t\t\t\t\tde: 'Meter',\n\t\t\t\t\ten: 'Meter',\n\t\t\t\t\ten_GB: 'Metre'\n\t\t\t\t},\n\t\t\t\tplural: {\n\t\t\t\t\ten: 'Meters',\n\t\t\t\t\ten_GB: 'Metres'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'mm': {\n\t\t\t\tkey: UNIT.Distance.MILLIMETRE,\n\t\t\t\tbase: 'm',\n\t\t\t\tfactor: 0.001\n\t\t\t},\n\t\t\t'in': {\n\t\t\t\tkey: UNIT.Distance.INCH,\n\t\t\t\tbase: 'm',\n\t\t\t\tfactor: 0.0254\n\t\t\t}\n\t\t},\n\t\tPressure: {\n\t\t\t'hPa': {\n\t\t\t\tkey: UNIT.Pressure.HECTOPASCAL,\n\t\t\t\tbase: 'Pa',\n\t\t\t\tfactor: 100,\n\t\t\t\tname: {\n\t\t\t\t\tde: 'Hektopascal',\n\t\t\t\t\ten: 'Hectopascal',\n\t\t\t\t\ten_GB: 'Hectopascal'\n\t\t\t\t},\n\t\t\t\tplural: {\n\t\t\t\t\ten: 'Hectopascals'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'Pa': {\n\t\t\t\tkey: UNIT.Pressure.PASCAL,\n\t\t\t\tbase: null,\n\t\t\t\tname: {\n\t\t\t\t\tde: 'Pascal',\n\t\t\t\t\ten: 'Pascal',\n\t\t\t\t\ten_GB: 'Pascal'\n\t\t\t\t},\n\t\t\t\tplural: {\n\t\t\t\t\ten: 'Pascals'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'bar': {\n\t\t\t\tkey: UNIT.Pressure.BAR,\n\t\t\t\tbase: 'Pa',\n\t\t\t\tfactor: 1000000,\n\t\t\t\tname: {\n\t\t\t\t\tde: 'Bar',\n\t\t\t\t\ten: 'Bar',\n\t\t\t\t\ten_GB: 'Bar'\n\t\t\t\t},\n\t\t\t\tplural: {\n\t\t\t\t\ten: 'Bars'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tTemperature: {\n\t\t\t'c': {\n\t\t\t\tkey: UNIT.Temperature.CELSIUS,\n\t\t\t\tbase: null\n\t\t\t},\n\t\t\t'f': {\n\t\t\t\tkey: UNIT.Temperature.FAHRENHEIT,\n\t\t\t\tbase: UNIT.Temperature.CELSIUS,\n\t\t\t\tfactor: function(value, reverse) {\n\t\t\t\t\tif (reverse) {\n\t\t\t\t\t\treturn value * 1.8 + 32;\n                    }\n\n\t\t\t\t\treturn (value - 32) * 5 / 9;\n\t\t\t\t}\n\t\t\t},\n\t\t\t'k': {\n\t\t\t\tkey: UNIT.Temperature.KELVIN,\n\t\t\t\tbase: UNIT.Temperature.CELSIUS,\n\t\t\t\tfactor: function(value, reverse) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Really strange rounding error:\n\t\t\t\t\t * (100 - 273.15) gives -173.14999999999998 (tested in Chrome 26.0.1410.63)\n\t\t\t\t\t * \n\t\t\t\t\t * Following workarounds:\n\t\t\t\t\t */\n\t\t\t\t\tif (reverse) {\n\t\t\t\t\t\treturn parseFloat((value + 273 + 0.15).toFixed(10));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn (value - 273) - 0.15;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tDuration: {\n\t\t\t'h': {\n\t\t\t\tkey: UNIT.Duration.HOUR,\n\t\t\t\tbase: 's',\n\t\t\t\tfactor: 3600\n\t\t\t},\n\t\t\t'm': {\n\t\t\t\tkey: UNIT.Duration.MINUTE,\n\t\t\t\tbase: 's',\n\t\t\t\tfactor: 60\n\t\t\t},\n\t\t\t's': {\n\t\t\t\tkey: UNIT.Duration.SECOND,\n\t\t\t\tbase: null,\n\t\t\t\tfactor: 1\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction MeasurementConverter(unitType) {\n\t\tvar inputUnit = null,\n\t\t\toutputUnit = null,\n\t\t\tself = this;\n\n\t\tthis.convert = function(value) {\n\n\t\t\tif (DEFINITIONS[unitType]) {\n\t\t\t\tvar inputDef = DEFINITIONS[unitType][inputUnit],\n\t\t\t\t\toutputDef = DEFINITIONS[unitType][outputUnit];\n\t\t\t\t\n\t\t\t\tif (inputDef && outputDef) {\n\n\t\t\t\t\tif (inputDef.base === outputUnit) {\n\t\t\t\t\t\tif (typeof inputDef.factor === 'function') {\n\t\t\t\t\t\t\treturn inputDef.factor(value);\n                        }\n\n\t\t\t\t\t\treturn value * inputDef.factor;\n\t\t\t\t\t} else if (inputDef.key === outputDef.base) {\n\t\t\t\t\t\tif (typeof outputDef.factor === 'function') {\n\t\t\t\t\t\t\treturn outputDef.factor(value, true);\n                        }\n\n\t\t\t\t\t\treturn value / outputDef.factor;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We're here b/c neither input nor out type is base type to which we could directly convert\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * TODO use direct reconversion factors, while trading off the higher accuracy / performance\n\t\t\t\t\t\t * vs. larger configuration array/file size \n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar baseType = inputDef.base || outputDef.base, baseValue;\n\t\t\t\t\t\tif (typeof baseType === 'undefined') {\n\t\t\t\t\t\t\treturn false;\n                        }\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (baseType === inputDef.base) {\n\t\t\t\t\t\t\tbaseValue = mjs(unitType).convert(value).from(inputDef.key).to(inputDef.base);\n\t\t\t\t\t\t\tinputUnit = inputDef.base;\n\t\t\t\t\t\t} else if (baseType === outputDef.base) {\n\t\t\t\t\t\t\tbaseValue = mjs(unitType).convert(value).from(outputDef.key).to(outputDef.base);\n\t\t\t\t\t\t\tinputUnit = outputDef.base;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (baseType === UNIT.Temperature.CELSIUS) {\n\t\t\t\t\t\t\treturn parseFloat(self.convert(baseValue).toFixed(10));\n                        }\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn self.convert(baseValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tthis.inputUnit = null;\n\t\tthis.setInputUnit = function(unit) {\n\t\t\tinputUnit = unit || null;\n\t\t\tthis.inputUnit = inputUnit;\n\n\t\t\treturn self;\n\t\t};\n\n\t\tthis.outputUnit = null;\n\t\tthis.setOutputUnit = function(unit) {\n\t\t\toutputUnit = unit || null;\n\t\t\tthis.outputUnit = outputUnit;\n\n\t\t\treturn self;\n\t\t};\n\t}\n\n\tfunction MeasurementJs(UnitType) {\n\t\tvar self = this;\n\t\t/**\n\t\t * \n\t\t * @param {type} value\n\t\t * @returns {MeasurementConverter}\n\t\t */\n\t\tvar convert = function(value) {\n\t\t\tvar valueToConvert = value,\n\t\t\t\tconverter = new MeasurementConverter(UnitType);\n\n\t\t\tfunction readyToConvert() {\n\t\t\t\treturn converter.inputUnit !== null && converter.outputUnit !== null;\n\t\t\t}\n\n\t\t\tvar easyApiConverter = {\n\t\t\t\tfrom: function(inputUnit) {\n\t\t\t\t\tconverter.setInputUnit(inputUnit);\n\t\t\t\t\tif (readyToConvert()) {\n\t\t\t\t\t\treturn converter.convert(valueToConvert);\n                    }\n\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tto: function(outputUnit) {\n\t\t\t\t\tconverter.setOutputUnit(outputUnit);\n\t\t\t\t\tif (readyToConvert()) {\n\t\t\t\t\t\treturn converter.convert(valueToConvert);\n                    }\n\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn easyApiConverter;\n\t\t};\n\n\t\treturn {\n\t\t\tconvert: convert\n\t\t};\n\t}\n\n    var mjs = MeasurementJs;\n    mjs.Unit = UNIT;\n\n\tif (ns === undefined) {\n        win.measurement = mjs;\n\t} else {\n\t\tns.measurement = mjs;\n\t\tns.mJs = mjs;\n\t\tns.measurement.Converter = MeasurementConverter;\n    }\n\n    // AMD definition - i.e. for require.js\n    if (typeof win.define === \"function\" && win.define.amd) {\n        win.define(\"measurement\", [], function() {\n            return mjs;\n        });\n    } else if (win.module !== undefined && win.module.exports) {\n        win.module.exports.measurementjs = mjs;\n    }\n\n})(window, window.mJsNamespace);\n"],"sourceRoot":""}