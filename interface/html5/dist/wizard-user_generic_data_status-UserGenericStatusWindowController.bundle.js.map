{"version":3,"sources":["webpack://timetrex/./interface/html5/views/wizard/user_generic_data_status/UserGenericStatusWindowController.js"],"names":["UserGenericStatusWindowController","BaseViewController","options","_","defaults","el","batch_id","user_id","callback","events","super","this","content_div","$","find","api","TTAPI","APIUserGenericStatus","render","initData","$this","ProgressBar","showOverlay","getAllColumns","initLayout","getDefaultDisplayColumns","setSelectLayout","search","remove","text","i18n","callBack","getOptions","columns_result","columns_result_data","getResult","all_columns","Global","buildColumnArray","set_default_menu","isSet","filter","filter_data","filter_items_per_page","onResult","result","result_data","formatGridData","key_name","grid","setData","setGridSize","closeOverlay","setDefaultMenu","failed","warning","success","status","total","percent","column_start_from","column_info_array","select_layout","id","data","filter_sort","display_columns","default_display_columns","layout_data","buildDisplayColumns","len","length","start_from","i","view_column_data","value","column_info","name","index","label","width","sortable","title","formatter","cell_value","related_data","row","span","addClass","get","outerHTML","push","jqGrid","TTGrid","altRows","onSelectRow","proxy","onGridSelectRow","rowNum","datatype","colNames","viewrecords","setGridWidth","setGridHeight","height","window","resize","open","loadViewSource","TTUUID","isUUID","args","template","append","can_cache_controller","TAlertManager","showAlert","LocalCacheData","getApplicationName"],"mappings":"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","file":"wizard-user_generic_data_status-UserGenericStatusWindowController.bundle.js?v=c75f686e413081e4e043","sourcesContent":["export class UserGenericStatusWindowController extends BaseViewController {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\t// el: '.user-generic-data-status',\n\t\t\tel: '', // el is set to the DOM id which is set in UserGenericStatusWindowController.open()\n\n\t\t\tbatch_id: '',\n\t\t\tuser_id: '',\n\n\t\t\tcallback: null,\n\n\t\t\tevents: {\n\t\t\t\t'click .done-btn': 'onCloseClick'\n\t\t\t},\n\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinit( options ) {\n\t\tthis.options = options;\n\t\tthis.content_div = $( this.el ).find( '.content' );\n\t\tthis.batch_id = this.options.batch_id;\n\t\tthis.user_id = this.options.user_id;\n\n\t\tif ( this.options.callback ) {\n\t\t\tthis.callback = this.options.callback;\n\t\t}\n\n\t\tthis.api = TTAPI.APIUserGenericStatus;\n\t\tthis.render();\n\t\tthis.initData();\n\n\t}\n\n\t//Don't initOptions if edit_only_mode. Do it in sub views\n\tinitData() {\n\t\tvar $this = this;\n\t\tProgressBar.showOverlay();\n\t\tthis.getAllColumns( function() {\n\t\t\t$this.initLayout();\n\t\t} );\n\t}\n\n\tinitLayout() {\n\t\tvar $this = this;\n\t\t$this.getDefaultDisplayColumns( function() {\n\t\t\t$this.setSelectLayout();\n\t\t\t$this.search();\n\n\t\t} );\n\t}\n\n\tonCloseClick() {\n\t\t// UserGenericStatusWindowController.instance = null;\n\t\t$( this.el ).remove();\n\n\t\tif ( this.callback ) {\n\t\t\tthis.callback();\n\t\t}\n\t}\n\n\trender() {\n\t\tvar title = $( this.el ).find( '.title' );\n\t\ttitle.text( $.i18n._( 'Status Report' ) );\n\n\t}\n\n\tgetAllColumns( callBack ) {\n\n\t\tvar $this = this;\n\t\tthis.api.getOptions( 'columns', {\n\t\t\tonResult( columns_result ) {\n\t\t\t\tvar columns_result_data = columns_result.getResult();\n\t\t\t\t$this.all_columns = Global.buildColumnArray( columns_result_data );\n\n\t\t\t\tif ( callBack ) {\n\t\t\t\t\tcallBack();\n\t\t\t\t}\n\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tsearch( set_default_menu ) {\n\n\t\tif ( !Global.isSet( set_default_menu ) ) {\n\t\t\tset_default_menu = true;\n\t\t}\n\n\t\tvar $this = this;\n\n\t\tvar filter = {};\n\t\tfilter.filter_data = {};\n\t\tfilter.filter_data.batch_id = this.batch_id;\n\t\tfilter.filter_items_per_page = 0; // Default to 0 to load user preference defined\n\n\t\tthis.api['getUserGenericStatus']( filter, true, {\n\t\t\tonResult: function( result ) {\n\n\t\t\t\tvar result_data = result.getResult();\n\t\t\t\tresult_data = Global.formatGridData( result_data, $this.api.key_name );\n\n\t\t\t\t$this.grid.setData( result_data );\n\n\t\t\t\t$this.setGridSize();\n\n\t\t\t\tProgressBar.closeOverlay(); //Add this in initData\n\n\t\t\t\tif ( set_default_menu ) {\n\t\t\t\t\t$this.setDefaultMenu( true );\n\t\t\t\t}\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.api['getUserGenericStatusCountArray']( this.user_id, this.batch_id, {\n\t\t\tonResult: function( result ) {\n\n\t\t\t\tvar result_data = result.getResult();\n\n\t\t\t\tvar failed = $( $this.el ).find( '.failed' );\n\t\t\t\tvar warning = $( $this.el ).find( '.warning' );\n\t\t\t\tvar success = $( $this.el ).find( '.success' );\n\n\t\t\t\tif ( result_data != true && result_data.status ) {\n\t\t\t\t\tfailed.text( result_data.status[10].total + '/' + result_data.total + '( ' + result_data.status[10].percent + '% )' );\n\t\t\t\t\twarning.text( result_data.status[20].total + '/' + result_data.total + '( ' + result_data.status[20].percent + '% )' );\n\t\t\t\t\tsuccess.text( result_data.status[30].total + '/' + result_data.total + '( ' + result_data.status[30].percent + '% )' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tsetGridSize() {\n\n\t}\n\n\tsetSelectLayout( column_start_from ) {\n\n\t\tvar $this = this;\n\t\tvar column_info_array = [];\n\n\t\tthis.select_layout = { id: '' };\n\t\tthis.select_layout.data = { filter_data: {}, filter_sort: {} };\n\t\tthis.select_layout.data.display_columns = this.default_display_columns;\n\t\tvar layout_data = this.select_layout.data;\n\t\tvar display_columns = this.buildDisplayColumns( layout_data.display_columns );\n\n\t\t//Set Data Grid on List view\n\t\tvar len = display_columns.length;\n\n\t\tif ( layout_data.display_columns.length < 1 ) {\n\t\t\tlayout_data.display_columns = this.default_display_columns;\n\t\t}\n\n\t\tvar start_from = 0;\n\n\t\tif ( Global.isSet( column_start_from ) && column_start_from > 0 ) {\n\t\t\tstart_from = column_start_from;\n\t\t}\n\n\t\tfor ( var i = start_from; i < len; i++ ) {\n\t\t\tvar view_column_data = display_columns[i];\n\n\t\t\tif ( view_column_data.value === 'description' ) {\n\t\t\t\tvar column_info = {\n\t\t\t\t\tname: view_column_data.value,\n\t\t\t\t\tindex: view_column_data.value,\n\t\t\t\t\tlabel: view_column_data.label,\n\t\t\t\t\twidth: 400,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\ttitle: false\n\t\t\t\t};\n\n\t\t\t} else if ( view_column_data.value === 'status' ) {\n\t\t\t\tcolumn_info = {\n\t\t\t\t\tname: view_column_data.value, index: view_column_data.value, label: view_column_data.label,\n\t\t\t\t\twidth: 100, sortable: false, title: false, formatter: function( cell_value, related_data, row ) {\n\n\t\t\t\t\t\tvar span = $( '<span></span>' );\n\n\t\t\t\t\t\tif ( cell_value === 'Failed' ) {\n\t\t\t\t\t\t\tspan.addClass( 'failed-label' );\n\t\t\t\t\t\t} else if ( cell_value === 'Warning' ) {\n\t\t\t\t\t\t\tspan.addClass( 'warning-label' );\n\t\t\t\t\t\t} else if ( cell_value === 'Success' ) {\n\t\t\t\t\t\t\tspan.addClass( 'success-label' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tspan.text( cell_value );\n\t\t\t\t\t\treturn span.get( 0 ).outerHTML;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\tcolumn_info = {\n\t\t\t\t\tname: view_column_data.value,\n\t\t\t\t\tindex: view_column_data.value,\n\t\t\t\t\tlabel: view_column_data.label,\n\t\t\t\t\twidth: 100,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\ttitle: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcolumn_info_array.push( column_info );\n\t\t}\n\n\t\tif ( this.grid ) {\n\t\t\tthis.grid.grid.jqGrid( 'GridUnload' );\n\t\t\tthis.grid = null;\n\t\t}\n\n\t\tthis.grid = new TTGrid( 'user_generic_data_status_grid-' + this.batch_id, {\n\t\t\taltRows: true,\n\t\t\tonSelectRow: $.proxy( this.onGridSelectRow, this ),\n\t\t\tdata: [],\n\t\t\trowNum: 10000,\n\t\t\tsortable: false,\n\t\t\tdatatype: 'local',\n\t\t\twidth: 600,\n\t\t\tcolNames: [],\n\t\t\tviewrecords: true\n\t\t}, column_info_array );\n\n\t\tvar content_div = $( this.el ).find( '.content' );\n\n\t\tthis.grid.grid.setGridWidth( content_div.width() - 2 );\n\t\tthis.grid.grid.setGridHeight( content_div.height() - 25 );\n\t\t$( window ).resize( function() {\n\t\t\t$this.grid.grid.setGridWidth( content_div.width() - 2 );\n\t\t\t$this.grid.grid.setGridHeight( content_div.height() - 25 );\n\t\t} );\n\n\t\tthis.filter_data = this.select_layout.data.filter_data;\n\t}\n\n}\n\n// UserGenericStatusWindowController.instance = null;\n\nUserGenericStatusWindowController.open = function( batch_id, user_id, callback ) {\n\tGlobal.loadViewSource( 'UserGenericStatus', 'UserGenericStatusWindow.css' );\n\tGlobal.loadViewSource( 'UserGenericStatus', 'UserGenericStatusWindow.html', function( result ) {\n\t\tif ( TTUUID.isUUID( batch_id ) == true ) {\n\t\t\tvar args = {\n\t\t\t\tbatch_id: batch_id,\n\t\t\t\tfailed: $.i18n._( 'Failed' ),\n\t\t\t\twarning: $.i18n._( 'Warning' ),\n\t\t\t\tsuccess: $.i18n._( 'Success' )\n\t\t\t};\n\n\t\t\tvar template = _.template( result );\n\t\t\t$( 'body' ).append( template( args ) );\n\n\t\t\tnew UserGenericStatusWindowController( {\n\t\t\t\tel: '#' + batch_id,\n\t\t\t\tbatch_id: batch_id,\n\t\t\t\tuser_id: user_id,\n\t\t\t\tcan_cache_controller: false,\n\t\t\t\tcallback: callback,\n\t\t\t} );\n\t\t} else {\n\t\t\tTAlertManager.showAlert( $.i18n._( 'Status report is empty. Please try again.', LocalCacheData.getApplicationName() ), $.i18n._( 'NOTICE' ) );\n\t\t}\n\t} );\n};"],"sourceRoot":""}