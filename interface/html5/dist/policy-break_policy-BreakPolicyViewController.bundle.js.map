{"version":3,"sources":["webpack://timetrex/./interface/html5/views/policy/break_policy/BreakPolicyViewController.js"],"names":["BreakPolicyViewController","BaseViewController","options","_","defaults","el","type_array","auto_detect_type_array","allocation_type_array","date_api","super","this","edit_view_tpl","permission_id","viewId","script_name","table_name_key","context_menu_name","$","i18n","navigation_label","api","TTAPI","APIBreakPolicy","APITTDate","render","buildContextMenu","initData","setSelectRibbonMenuIfNecessary","initDropDownOption","buildEditViewUI","$this","tab_model","setTabModel","navigation","AComboBox","api_class","id","allow_multiple_selection","layout_name","navigation_mode","show_search_inputs","setNavigation","tab_break_policy_column1","edit_view_tab","find","edit_view_tabs","push","form_item_input","Global","loadWidgetByName","FormItemType","TEXT_INPUT","TTextInput","field","width","addEditFieldToColumn","parent","TEXT_AREA","TTextArea","COMBO_BOX","TComboBox","set_empty","setSourceData","mode","need_parser_sec","CHECKBOX","TCheckbox","AWESOME_BOX","APIPayCode","APIPayFormulaPolicy","custom_first_label","added_items","value","TTUUID","zero_id","label","buildSearchFields","search_fields","SearchField","in_column","multiple","basic_search","adv_search","form_item_type","APIUser","target","doNotValidate","setIsChanged","setMassEditingFieldsWhenFormChange","key","getField","c_value","getValue","current_edit_record","onTypeChange","onAutoDetectTypeChange","editFieldResize","validate","setEditViewDataDone","edit_view_form_item_dic","text","attachElement","detachElement"],"mappings":"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","file":"policy-break_policy-BreakPolicyViewController.bundle.js?v=0d4fa924b6f8ad1a5fc5","sourcesContent":["export class BreakPolicyViewController extends BaseViewController {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tel: '#break_policy_view_container',\n\n\t\t\ttype_array: null,\n\t\t\tauto_detect_type_array: null,\n\t\t\tallocation_type_array: null,\n\n\t\t\tdate_api: null\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinit( options ) {\n\t\t//this._super('initialize', options );\n\t\tthis.edit_view_tpl = 'BreakPolicyEditView.html';\n\t\tthis.permission_id = 'break_policy';\n\t\tthis.viewId = 'BreakPolicy';\n\t\tthis.script_name = 'BreakPolicyView';\n\t\tthis.table_name_key = 'break_policy';\n\t\tthis.context_menu_name = $.i18n._( 'Break Policy' );\n\t\tthis.navigation_label = $.i18n._( 'Break Policy' ) + ':';\n\t\tthis.api = TTAPI.APIBreakPolicy;\n\t\tthis.date_api = TTAPI.APITTDate;\n\t\tthis.render();\n\t\tthis.buildContextMenu();\n\n\t\tthis.initData();\n\t\tthis.setSelectRibbonMenuIfNecessary( 'BreakPolicy' );\n\t}\n\n\tinitOptions() {\n\t\tthis.initDropDownOption( 'type' );\n\t\tthis.initDropDownOption( 'auto_detect_type' );\n\t\tthis.initDropDownOption( 'allocation_type' );\n\t}\n\n\tbuildEditViewUI() {\n\n\t\tsuper.buildEditViewUI();\n\n\t\tvar $this = this;\n\n\t\tvar tab_model = {\n\t\t\t'tab_break_policy': { 'label': $.i18n._( 'Break Policy' ) },\n\t\t\t'tab_audit': true,\n\t\t};\n\t\tthis.setTabModel( tab_model );\n\n\t\tthis.navigation.AComboBox( {\n\t\t\tapi_class: TTAPI.APIBreakPolicy,\n\t\t\tid: this.script_name + '_navigation',\n\t\t\tallow_multiple_selection: false,\n\t\t\tlayout_name: 'global_break',\n\t\t\tnavigation_mode: true,\n\t\t\tshow_search_inputs: true\n\t\t} );\n\n\t\tthis.setNavigation();\n\n\t\t//Tab 0 start\n\n\t\tvar tab_break_policy = this.edit_view_tab.find( '#tab_break_policy' );\n\n\t\tvar tab_break_policy_column1 = tab_break_policy.find( '.first-column' );\n\n\t\tthis.edit_view_tabs[0] = [];\n\n\t\tthis.edit_view_tabs[0].push( tab_break_policy_column1 );\n\n\t\t//Name\n\t\tvar form_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\n\t\tform_item_input.TTextInput( { field: 'name', width: '100%' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Name' ), form_item_input, tab_break_policy_column1, '' );\n\n\t\tform_item_input.parent().width( '45%' );\n\n\t\t// Description\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_AREA );\n\t\tform_item_input.TTextArea( { field: 'description', width: '100%' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Description' ), form_item_input, tab_break_policy_column1, '', null, null, true );\n\n\t\tform_item_input.parent().width( '45%' );\n\n\t\t// Type\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.COMBO_BOX );\n\n\t\tform_item_input.TComboBox( { field: 'type_id', set_empty: false } );\n\t\tform_item_input.setSourceData( $this.type_array );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Type' ), form_item_input, tab_break_policy_column1 );\n\n\t\t//Active After\n\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\t\tform_item_input.TTextInput( { field: 'trigger_time', mode: 'time_unit', need_parser_sec: true } );\n\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Active After' ), form_item_input, tab_break_policy_column1, '', null );\n\n\t\t// Meal Time\n\t\t// Deduction/Addition Time\n\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\t\tform_item_input.TTextInput( { field: 'amount', mode: 'time_unit', need_parser_sec: true } );\n\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Deduction/Addition Time' ), form_item_input, tab_break_policy_column1, '', null, true );\n\n\t\t// Auto-Detect Meals By\n\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.COMBO_BOX );\n\n\t\tform_item_input.TComboBox( { field: 'auto_detect_type_id', set_empty: false } );\n\t\tform_item_input.setSourceData( $this.auto_detect_type_array );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Auto-Detect Breaks By' ), form_item_input, tab_break_policy_column1 );\n\n\t\t// Minimum Punch Time\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\t\tform_item_input.TTextInput( { field: 'minimum_punch_time', mode: 'time_unit', need_parser_sec: true } );\n\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Minimum Punch Time' ), form_item_input, tab_break_policy_column1, '', null, true );\n\n\t\t// Maximum Punch Time\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\t\tform_item_input.TTextInput( { field: 'maximum_punch_time', mode: 'time_unit', need_parser_sec: true } );\n\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Maximum Punch Time' ), form_item_input, tab_break_policy_column1, '', null, true );\n\n\t\t// Start Window\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\t\tform_item_input.TTextInput( { field: 'start_window', mode: 'time_unit', need_parser_sec: true } );\n\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Start Window' ), form_item_input, tab_break_policy_column1, '', null, true );\n\n\t\t// Window Length\n\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\t\tform_item_input.TTextInput( { field: 'window_length', mode: 'time_unit', need_parser_sec: true } );\n\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Window Length' ), form_item_input, tab_break_policy_column1, '', null, true );\n\n\t\t// Include Any Punched Time for Break\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.CHECKBOX );\n\t\tform_item_input.TCheckbox( { field: 'include_break_punch_time' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Include Any Punched Time for Break' ), form_item_input, tab_break_policy_column1, '', null, true );\n\n\t\t// Include Multiple Breaks\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.CHECKBOX );\n\t\tform_item_input.TCheckbox( { field: 'include_multiple_breaks' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Include Multiple Breaks' ), form_item_input, tab_break_policy_column1, '', null, true );\n\n\t\t// Allocation Type\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.COMBO_BOX );\n\t\tform_item_input.TComboBox( { field: 'allocation_type_id', set_empty: false } );\n\t\tform_item_input.setSourceData( $this.allocation_type_array );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Allocation Type' ), form_item_input, tab_break_policy_column1, '', null, true );\n\n\t\t//Pay Code\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.AWESOME_BOX );\n\t\tform_item_input.AComboBox( {\n\t\t\tapi_class: TTAPI.APIPayCode,\n\t\t\tallow_multiple_selection: false,\n\t\t\tlayout_name: 'global_pay_code',\n\t\t\tshow_search_inputs: true,\n\t\t\tset_empty: true,\n\t\t\tfield: 'pay_code_id'\n\t\t} );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Pay Code' ), form_item_input, tab_break_policy_column1 );\n\n\t\t//Pay Formula Policy\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.AWESOME_BOX );\n\t\tform_item_input.AComboBox( {\n\t\t\tapi_class: TTAPI.APIPayFormulaPolicy,\n\t\t\tallow_multiple_selection: false,\n\t\t\tlayout_name: 'global_pay_formula_policy',\n\t\t\tshow_search_inputs: true,\n\t\t\tset_empty: true,\n\t\t\tfield: 'pay_formula_policy_id',\n\t\t\tcustom_first_label: $.i18n._( '-- Defined By Pay Code --' ),\n\t\t\tadded_items: [\n\t\t\t\t{ value: TTUUID.zero_id, label: $.i18n._( '-- Defined By Pay Code --' ) }\n\t\t\t]\n\t\t} );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Pay Formula Policy' ), form_item_input, tab_break_policy_column1 );\n\t}\n\n\tbuildSearchFields() {\n\n\t\tsuper.buildSearchFields();\n\t\tthis.search_fields = [\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Name' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'name',\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.TEXT_INPUT\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Type' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'type_id',\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tlayout_name: 'global_option_column',\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Pay Code' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'pay_code_id',\n\t\t\t\tlayout_name: 'global_pay_code',\n\t\t\t\tapi_class: TTAPI.APIPayCode,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Pay Formula Policy' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'pay_formula_policy_id',\n\t\t\t\tlayout_name: 'global_pay_formula_policy',\n\t\t\t\tapi_class: TTAPI.APIPayFormulaPolicy,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Created By' ),\n\t\t\t\tin_column: 2,\n\t\t\t\tfield: 'created_by',\n\t\t\t\tlayout_name: 'global_user',\n\t\t\t\tapi_class: TTAPI.APIUser,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Updated By' ),\n\t\t\t\tin_column: 2,\n\t\t\t\tfield: 'updated_by',\n\t\t\t\tlayout_name: 'global_user',\n\t\t\t\tapi_class: TTAPI.APIUser,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} )\n\t\t];\n\t}\n\n\tonFormItemChange( target, doNotValidate ) {\n\t\tthis.setIsChanged( target );\n\t\tthis.setMassEditingFieldsWhenFormChange( target );\n\n\t\tvar key = target.getField();\n\t\tvar c_value = target.getValue();\n\n//\t\tswitch ( key ) {\n//\t\t\tcase 'trigger_time':\n//\t\t\tcase 'amount':\n//\t\t\tcase 'minimum_punch_time':\n//\t\t\tcase 'maximum_punch_time':\n//\t\t\tcase 'window_length':\n//\t\t\tcase 'start_window':\n//\t\t\t\tc_value = this.date_api.parseTimeUnit( target.getValue(), {async: false} ).getResult();\n//\t\t\t\tbreak;\n//\t\t}\n\n\t\tthis.current_edit_record[key] = c_value;\n\n\t\tif ( key === 'type_id' ) {\n\t\t\tthis.onTypeChange();\n\t\t} else if ( key === 'auto_detect_type_id' ) {\n\t\t\tthis.onAutoDetectTypeChange();\n\t\t}\n\n\t\tthis.editFieldResize( 0 );\n\n\t\tif ( !doNotValidate ) {\n\t\t\tthis.validate();\n\t\t}\n\t}\n\n\tsetEditViewDataDone() {\n\t\tsuper.setEditViewDataDone();\n\t\tthis.onTypeChange();\n\t\tthis.onAutoDetectTypeChange();\n\t\tthis.editFieldResize( 0 );\n\t}\n\n\tonTypeChange() {\n\t\tthis.edit_view_form_item_dic['amount'].find( '.edit-view-form-item-label' ).text( $.i18n._( 'Break Time' ) + ': ' ); //Keep consistent field label for all types, also simplifies the documentation.\n\t\tif ( this.current_edit_record['type_id'] == 10 || this.current_edit_record['type_id'] == 15 ) {\n\t\t\t//this.edit_view_form_item_dic['amount'].find( '.edit-view-form-item-label' ).text( $.i18n._( 'Deduction/Addition Time' ) + ': ' );\n\t\t\tthis.attachElement( 'include_break_punch_time' );\n\t\t\tthis.attachElement( 'allocation_type_id' );\n\t\t\tthis.attachElement( 'include_multiple_breaks' );\n\t\t} else if ( this.current_edit_record['type_id'] == 20 ) {\n\t\t\tthis.detachElement( 'include_break_punch_time' );\n\t\t\tthis.detachElement( 'allocation_type_id' );\n\t\t\tthis.detachElement( 'include_multiple_breaks' );\n\t\t}\n\n\t\tthis.editFieldResize();\n\t}\n\n\tonAutoDetectTypeChange() {\n\t\tif ( this.current_edit_record['auto_detect_type_id'] == 10 ) {\n\t\t\tthis.attachElement( 'start_window' );\n\t\t\tthis.attachElement( 'window_length' );\n\t\t\tthis.detachElement( 'minimum_punch_time' );\n\t\t\tthis.detachElement( 'maximum_punch_time' );\n\t\t} else if ( this.current_edit_record['auto_detect_type_id'] == 20 ) {\n\t\t\tthis.detachElement( 'start_window' );\n\t\t\tthis.detachElement( 'window_length' );\n\t\t\tthis.attachElement( 'minimum_punch_time' );\n\t\t\tthis.attachElement( 'maximum_punch_time' );\n\t\t}\n\n\t\tthis.editFieldResize();\n\t}\n\n}\n"],"sourceRoot":""}