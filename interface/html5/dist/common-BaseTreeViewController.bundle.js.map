{"version":3,"sources":["webpack://timetrex/./interface/html5/views/common/BaseTreeViewController.js"],"names":["BaseTreeViewController","BaseViewController","column_start_from","Global","isSet","this","grid","$","el","find","attr","ui_id","column_info_array","select_layout","id","data","filter_data","filter_sort","display_columns","default_display_columns","layout_data","length","buildDisplayColumns","view_column_data","column_info","name","value","index","label","grid_table_name","width","sortable","title","push","jqGrid","TTGrid","multiselect","winMultiSelect","tree_mode","onSelectRow","proxy","onGridSelectRow","bindGridColumnEvents","setGridHeaderStyle","showGridBorders","setGridSize","set_default_menu","page_action","page_number","$this","filter","filter_columns","getFilterColumnsFromDisplayColumns","filter_items_per_page","sub_view_mode","parent_key","parent_value","getSubViewFilter","last_select_ids","getGridSelectIdArray","convertLayoutFilterToAPIFilter","api","key_name","onResult","result","result_data","getResult","buildTreeRecord","grid_current_page_items","isArray","removeNoResultCover","showNoResultCover","reSetGridTreeData","ProgressBar","closeOverlay","setDefaultMenu","LocalCacheData","paging_type","pager_data","is_last_page","paging_widget","css","reSelectLastSelectItems","autoOpenEditViewIfNecessary","searchDone","val","col_model","getGridParam","datastr","datatype","click","grid_select_id_array","ondblClickRow","onGridDblClickRow","gridview","treeGrid","treeGridModel","treedatatype","ExpandColumn","real_this","constructor","__super__","getDefaultDisplayColumns","setSelectLayout","search","callBack","getOptions","columns_result","columns_result_data","all_columns","buildColumnArray","key","current_edit_record","widget","edit_view_ui_dic","setSourceData","setValue","collectUIDataToCurrentEditRecord","setEditViewDataDone","is_changed","edit_only_mode","navigation_div","edit_view","navigation","getSourceData","default_args","setDefaultArgs","is_mass_editing","setNavigationArrowsStatus","setCurrentEditRecordData","SaveAndContinueBox","related_view_controller","edit_view_tab","tabs","initSubLogView","switchToProperTab","array","each","item","i_key","i_item","_id_","super","doViewAPICall","handleAPICallbackResult","record_id","getCurrentSelectedRecord","getParentIdByTreeRecord","handleViewAPICallbackResult","removeDeletedRows","doEditAPICall","current_doing_context_action","setEditMenu","setTabStatus","grid_selected_id_array","TAlertManager","showAlert","i18n","_","selectedId","onCancelClick","openEditView","initEditView","navigation_widget_div","loadWidgetByName","FormItemType","AWESOME_BOX","text","navigation_label","append","edit_view_close_icon","hide","onCloseIconClick","tab_model","Array","primary_tab_key","primary_tab_label","setTabModel","AComboBox","script_name","allow_multiple_selection","layout_name","navigation_mode","show_search_inputs","on_tree_grid_row_select","tree_mode_collapse","onTreeGridNavigationRowSelect","left_click","right_click","getRealImagePath","setNavigation","tab_group_column1","edit_view_tabs","form_item_input","set_empty","field","addEditFieldToColumn","TEXT_INPUT","TTextInput","parent"],"mappings":"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","file":"common-BaseTreeViewController.bundle.js?v=5e3819a46dd740484cb2","sourcesContent":["export class BaseTreeViewController extends BaseViewController {\n\tsetSelectLayout( column_start_from ) {\n\t\tvar $this = this;\n\n\t\tvar grid;\n\t\tif ( !Global.isSet( this.grid ) ) {\n\t\t\tgrid = $( this.el ).find( '#grid' );\n\n\t\t\tgrid.attr( 'id', this.ui_id + '_grid' );  //Grid's id is ScriptName + _grid\n\n\t\t\tgrid = $( this.el ).find( '#' + this.ui_id + '_grid' );\n\t\t}\n\n\t\tvar column_info_array = [];\n\n\t\tif ( !this.select_layout ) { //Set to defalt layout if no layout at all\n\t\t\tthis.select_layout = { id: '' };\n\t\t\tthis.select_layout.data = { filter_data: {}, filter_sort: {} };\n\t\t\tthis.select_layout.data.display_columns = this.default_display_columns;\n\t\t}\n\t\tvar layout_data = this.select_layout.data;\n\n\t\tif ( layout_data.display_columns.length < 1 ) {\n\t\t\tlayout_data.display_columns = this.default_display_columns;\n\t\t}\n\n\t\tvar display_columns = this.buildDisplayColumns( layout_data.display_columns );\n\t\t//Set Data Grid on List view\n\t\tvar len = display_columns.length;\n\n\t\tvar start_from = 0;\n\n\t\tif ( Global.isSet( column_start_from ) && column_start_from > 0 ) {\n\t\t\tstart_from = column_start_from;\n\t\t}\n\n\t\tvar view_column_data = display_columns[0];\n\n\t\tvar column_info = {\n\t\t\tname: view_column_data.value,\n\t\t\tindex: view_column_data.value,\n\t\t\tlabel: $this.grid_table_name,\n\t\t\twidth: 100,\n\t\t\tsortable: false,\n\t\t\ttitle: false\n\t\t};\n\n\t\tcolumn_info_array.push( column_info );\n\n\t\tif ( this.grid ) {\n\t\t\tthis.grid.jqGrid( 'GridUnload' );\n\t\t\tthis.grid = null;\n\t\t}\n\n\t\tthis.grid = new TTGrid( this.ui_id + '_grid', {\n\t\t\tmultiselect: false,\n\t\t\twinMultiSelect: false,\n\t\t\ttree_mode: true,\n\t\t\tonSelectRow: $.proxy( this.onGridSelectRow, this )\n\t\t}, column_info_array );\n\n\t\tthis.bindGridColumnEvents();\n\n\t\tthis.setGridHeaderStyle(); //Set Sort Style\n\n\t\tthis.filter_data = this.select_layout.data.filter_data;\n\n\t\tthis.showGridBorders();\n\n\t\t$this.setGridSize();\n\t}\n\n\tsearch( set_default_menu, page_action, page_number ) {\n\t\tvar $this = this;\n\n\t\tif ( !Global.isSet( set_default_menu ) ) {\n\t\t\tset_default_menu = true;\n\t\t}\n\n\t\tvar filter = {};\n\t\tfilter.filter_data = {};\n\t\tfilter.filter_sort = {};\n\t\tfilter.filter_columns = this.getFilterColumnsFromDisplayColumns();\n\t\tfilter.filter_items_per_page = 0; // Default to 0 to load user preference defined\n\n\t\tif ( this.sub_view_mode && this.parent_key ) {\n\t\t\tthis.select_layout.data.filter_data[this.parent_key] = this.parent_value;\n\n\t\t\t//If sub view controller set custom filters, get it\n\t\t\tif ( Global.isSet( this.getSubViewFilter ) ) {\n\n\t\t\t\tthis.select_layout.data.filter_data = this.getSubViewFilter( this.select_layout.data.filter_data );\n\n\t\t\t}\n\t\t}\n\n\t\tthis.last_select_ids = this.getGridSelectIdArray();\n\t\t//select_layout will not be null, it's set in setSelectLayout function\n\t\tfilter.filter_data = Global.convertLayoutFilterToAPIFilter( this.select_layout );\n\t\tfilter.filter_sort = this.select_layout.data.filter_sort;\n\n\t\tthis.api['get' + this.api.key_name]( filter, false, false, {\n\t\t\tonResult: function( result ) {\n\n\t\t\t\tvar result_data = result.getResult();\n\n\t\t\t\tresult_data = Global.buildTreeRecord( result_data );\n\n\t\t\t\t$this.grid_current_page_items = result_data; // For tree mode only\n\n\t\t\t\tif ( !Global.isArray( result_data ) ) {\n\t\t\t\t\t$this.showNoResultCover();\n\t\t\t\t} else {\n\t\t\t\t\t$this.removeNoResultCover();\n\t\t\t\t}\n\n\t\t\t\t$this.reSetGridTreeData( result_data );\n\n\t\t\t\t$this.setGridSize();\n\n\t\t\t\tProgressBar.closeOverlay(); //Add this in initData\n\t\t\t\tif ( set_default_menu ) {\n\t\t\t\t\t$this.setDefaultMenu();\n\t\t\t\t}\n\n\t\t\t\tif ( LocalCacheData.paging_type === 0 ) {\n\t\t\t\t\tif ( !$this.pager_data || $this.pager_data.is_last_page ) {\n\t\t\t\t\t\t$this.paging_widget.css( 'display', 'none' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$this.paging_widget.css( 'display', 'block' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$this.reSelectLastSelectItems();\n\t\t\t\t$this.autoOpenEditViewIfNecessary();\n\t\t\t\t$this.searchDone();\n\t\t\t}\n\t\t} );\n\t}\n\n\treSetGridTreeData( val ) {\n\t\tvar $this = this;\n\n\t\tvar col_model = this.grid.getGridParam( 'colModel' );\n\t\tthis.grid.grid.jqGrid( 'GridUnload' );\n\t\tthis.grid = null;\n\n\t\tthis.grid = new TTGrid( this.ui_id + '_grid', {\n\t\t\tmultiselect: false,\n\t\t\twinMultiSelect: false,\n\t\t\tdatastr: val,\n\t\t\tdatatype: 'jsonstring',\n\t\t\tsortable: false,\n\t\t\tonSelectRow: function( id ) {\n\t\t\t\t$( '#ribbon_view_container .context-menu:visible a' ).click();\n\t\t\t\t$this.grid_select_id_array = [id];\n\t\t\t\t$this.setDefaultMenu();\n\n\t\t\t},\n\t\t\tondblClickRow: function() {\n\t\t\t\t$this.onGridDblClickRow();\n\t\t\t},\n\t\t\tgridview: true,\n\t\t\ttreeGrid: true,\n\t\t\ttreeGridModel: 'adjacency',\n\t\t\ttreedatatype: 'local',\n\t\t\tExpandColumn: 'name',\n\t\t}, col_model );\n\t}\n\n\tgetGridSelectIdArray() {\n\t\tvar result = [];\n\t\tresult = this.grid_select_id_array;\n\n\t\treturn result;\n\t}\n\n\tinitLayout() {\n\t\tvar $this = this;\n\t\tthis.real_this = this.constructor.__super__; // this seems first entry point. needed where view controller is extended twice, Base->Tree-View, used with onViewClick _super\n\n\t\t$this.getDefaultDisplayColumns( function() {\n\t\t\t$this.setSelectLayout();\n\t\t\t$this.search();\n\t\t} );\n\t}\n\n\tgetAllColumns( callBack ) {\n\t\tvar $this = this;\n\n\t\tthis.api.getOptions( 'columns', {\n\t\t\tonResult: function( columns_result ) {\n\n\t\t\t\tvar columns_result_data = columns_result.getResult();\n\t\t\t\t$this.all_columns = Global.buildColumnArray( columns_result_data );\n\n\t\t\t\tif ( callBack ) {\n\t\t\t\t\tcallBack();\n\t\t\t\t}\n\n\t\t\t}\n\t\t} );\n\t}\n\n\tsetCurrentEditRecordData() {\n\t\t//Set current edit record data to all widgets\n\t\tfor ( var key in this.current_edit_record ) {\n\t\t\tvar widget = this.edit_view_ui_dic[key];\n\t\t\tif ( Global.isSet( widget ) ) {\n\t\t\t\tswitch ( key ) {\n\t\t\t\t\tcase 'parent_id':\n\t\t\t\t\t\twidget.setSourceData( this.grid_current_page_items );\n\t\t\t\t\t\twidget.setValue( this.current_edit_record[key] );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\twidget.setValue( this.current_edit_record[key] );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tthis.collectUIDataToCurrentEditRecord();\n\t\tthis.setEditViewDataDone();\n\t}\n\n\tsetEditViewData() {\n\t\tvar $this = this;\n\n\t\tthis.is_changed = false;\n\n\t\tif ( !this.edit_only_mode ) {\n\n\t\t\tvar navigation_div = this.edit_view.find( '.navigation-div' );\n\n\t\t\tif ( Global.isSet( this.current_edit_record.id ) && this.current_edit_record.id ) {\n\t\t\t\tnavigation_div.css( 'display', 'block' );\n\t\t\t\t//Set Navigation Awesomebox\n\n\t\t\t\t//init navigation only when open edit view\n\t\t\t\tif ( !this.navigation.getSourceData() ) {\n\t\t\t\t\tthis.navigation.setSourceData( this.grid_current_page_items );\n\n\t\t\t\t\tvar default_args = {};\n\t\t\t\t\tdefault_args.filter_data = Global.convertLayoutFilterToAPIFilter( this.select_layout );\n\t\t\t\t\tdefault_args.filter_sort = this.select_layout.data.filter_sort;\n\t\t\t\t\tthis.navigation.setDefaultArgs( default_args );\n\t\t\t\t}\n\n\t\t\t\tthis.navigation.setValue( this.current_edit_record );\n\n\t\t\t} else {\n\t\t\t\tnavigation_div.css( 'display', 'none' );\n\t\t\t}\n\t\t}\n\n\t\tfor ( var key in this.edit_view_ui_dic ) {\n\n\t\t\t//Set all UI field to current edit reocrd, we need validate all UI fielld when save and validate\n\t\t\tif ( !Global.isSet( $this.current_edit_record[key] ) && !this.is_mass_editing ) {\n\t\t\t\t$this.current_edit_record[key] = false;\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setNavigationArrowsStatus();\n\n\t\t// Create this function alone because of the column value of view is different from each other, some columns need to be handle specially. and easily to rewrite this function in sub-class.\n\n\t\tthis.setCurrentEditRecordData();\n\n\t\t//Init *Please save this record before modifying any related data* box\n\t\tthis.edit_view.find( '.save-and-continue-div' ).SaveAndContinueBox( { related_view_controller: this } );\n\t\tthis.edit_view.find( '.save-and-continue-div' ).css( 'display', 'none' );\n\n\t\tif ( this.edit_view_tab.tabs( 'option', 'active' ) === 1 ) {\n\t\t\tif ( this.current_edit_record.id ) {\n\t\t\t\tthis.edit_view_tab.find( '#tab_audit' ).find( '.first-column-sub-view' ).css( 'display', 'block' );\n\t\t\t\tthis.initSubLogView( 'tab_audit' );\n\t\t\t} else {\n\t\t\t\tthis.edit_view_tab.find( '#tab_audit' ).find( '.first-column-sub-view' ).css( 'display', 'none' );\n\t\t\t\tthis.edit_view.find( '.save-and-continue-div' ).css( 'display', 'block' );\n\t\t\t}\n\t\t}\n\t\tthis.switchToProperTab();\n\t}\n\n\taddIdFieldToNavigation( array ) {\n\t\t$.each( array, function( key, item ) {\n\t\t\t$( item ).each( function( i_key, i_item ) {\n\t\t\t\ti_item.id = i_item._id_;\n\t\t\t} );\n\t\t} );\n\n\t\treturn array;\n\t}\n\n\tdoViewAPICall( filter ) {\n\t\treturn super.doViewAPICall( filter, [filter, false, false] );\n\t}\n\n\thandleViewAPICallbackResult( result ) {\n\t\treturn this.handleAPICallbackResult( result );\n\t}\n\n\thandleAPICallbackResult( result ) {\n\t\tvar result_data = result.getResult();\n\t\tvar record_id = this.getCurrentSelectedRecord();\n\t\tresult_data = Global.getParentIdByTreeRecord( Global.buildTreeRecord( result_data ), record_id );\n\t\tresult_data = result_data[0];\n\t\tresult_data.id = record_id;\n\n\t\tsuper.handleViewAPICallbackResult( result_data );\n\t}\n\n\thandleEditAPICallbackResult( result ) {\n\t\treturn this.handleAPICallbackResult( result );\n\t}\n\n\tonDeleteDone( result ) {\n\t\tthis.grid_select_id_array = [];\n\t\tthis.setDefaultMenu();\n\t\tthis.removeDeletedRows();\n\t}\n\n\tonSaveDone( result ) {\n\t\tthis.grid_select_id_array = [];\n\t}\n\n\tdoEditAPICall( filter ) {\n\t\treturn super.doEditAPICall( filter, [filter, false, false] );\n\t}\n\n\t_continueDoCopyAsNew() {\n\t\tvar $this = this;\n\n\t\tLocalCacheData.current_doing_context_action = 'copy_as_new';\n\n\t\tif ( Global.isSet( this.edit_view ) ) {\n\n\t\t\tthis.current_edit_record.id = '';\n\t\t\tvar navigation_div = this.edit_view.find( '.navigation-div' );\n\t\t\tnavigation_div.css( 'display', 'none' );\n\t\t\tthis.setEditMenu();\n\t\t\tthis.setTabStatus();\n\t\t\tthis.is_changed = false;\n\t\t\tProgressBar.closeOverlay();\n\n\t\t} else {\n\t\t\tvar filter = {};\n\t\t\tvar grid_selected_id_array = this.getGridSelectIdArray();\n\t\t\tvar grid_selected_length = grid_selected_id_array.length;\n\n\t\t\tif ( grid_selected_length > 0 ) {\n\t\t\t\tvar selectedId = grid_selected_id_array[0];\n\t\t\t} else {\n\t\t\t\tTAlertManager.showAlert( $.i18n._( 'No selected record' ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfilter.filter_data = {};\n\n\t\t\tthis.api['get' + this.api.key_name]( filter, false, false, {\n\t\t\t\tonResult: function( result ) {\n\t\t\t\t\tvar result_data = result.getResult();\n\t\t\t\t\tresult_data = Global.buildTreeRecord( result_data );\n\t\t\t\t\tresult_data = Global.getParentIdByTreeRecord( result_data, selectedId );\n\n\t\t\t\t\tif ( !result_data ) {\n\t\t\t\t\t\tTAlertManager.showAlert( $.i18n._( 'Record does not exist' ) );\n\t\t\t\t\t\t$this.onCancelClick();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t$this.openEditView(); // Put it here is to avoid if the selected one is not existed in data or have deleted by other pragram. in this case, the edit view should not be opend.\n\n\t\t\t\t\tresult_data = result_data[0];\n\t\t\t\t\tif ( $this.sub_view_mode && $this.parent_key ) {\n\t\t\t\t\t\tresult_data[$this.parent_key] = $this.parent_value;\n\t\t\t\t\t}\n\n\t\t\t\t\t$this.current_edit_record = result_data;\n\t\t\t\t\t$this.current_edit_record.id = '';\n\n\t\t\t\t\t$this.initEditView();\n\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\tbuildEditViewUI() {\n\t\tvar $this = this;\n\n\t\t//No navigation when edit only mode\n\t\tif ( !this.edit_only_mode ) {\n\t\t\tvar navigation_div = this.edit_view.find( '.navigation-div' );\n\t\t\tvar label = navigation_div.find( '.navigation-label' );\n\n\t\t\tvar navigation_widget_div = navigation_div.find( '.navigation-widget-div' );\n\n\t\t\tthis.navigation = Global.loadWidgetByName( FormItemType.AWESOME_BOX );\n\n\t\t\tlabel.text( this.navigation_label );\n\n\t\t\tnavigation_widget_div.append( this.navigation );\n\t\t}\n\n\t\tthis.edit_view_close_icon = this.edit_view.find( '.close-icon' );\n\t\tthis.edit_view_close_icon.hide();\n\t\tthis.edit_view_close_icon.click( function() {\n\t\t\t$this.onCloseIconClick();\n\t\t} );\n\n\t\tvar tab_model = Array();\n\t\ttab_model[this.primary_tab_key] = { 'label': this.primary_tab_label };\n\t\ttab_model['tab_audit'] = {\n\t\t\t'label': $.i18n._( 'Audit' ),\n\t\t\t'init_callback': 'initSubLogView',\n\t\t\t'display_on_mass_edit': false,\n\t\t\t'display_on_add': false\n\t\t};\n\t\tthis.setTabModel( tab_model );\n\n\t\tthis.navigation.AComboBox( {\n\t\t\tid: this.script_name + '_navigation',\n\t\t\ttree_mode: true,\n\t\t\tallow_multiple_selection: false,\n\t\t\tlayout_name: 'global_tree_column',\n\t\t\tnavigation_mode: true,\n\t\t\tshow_search_inputs: false,\n\t\t\ton_tree_grid_row_select: function( id, tree_mode_collapse ) {\n\t\t\t\t$this.onTreeGridNavigationRowSelect( id, tree_mode_collapse );\n\t\t\t}\n\t\t} );\n\n\t\tvar left_click = navigation_div.find( '.left-click' );\n\t\tvar right_click = navigation_div.find( '.right-click' );\n\t\tleft_click.attr( 'src', Global.getRealImagePath( 'images/left_arrow.png' ) );\n\t\tright_click.attr( 'src', Global.getRealImagePath( 'images/right_arrow.png' ) );\n\n\t\tthis.setNavigation();\n\n\t\t//Tab 0 start\n\t\tvar tab_group = this.edit_view_tab.find( '#' + this.primary_tab_key );\n\n\t\tvar tab_group_column1 = tab_group.find( '.first-column' );\n\n\t\tthis.edit_view_tabs[0] = [];\n\n\t\tthis.edit_view_tabs[0].push( tab_group_column1 );\n\n\t\t//Parent\n\t\t//Group\n\t\tvar form_item_input = Global.loadWidgetByName( FormItemType.AWESOME_BOX );\n\n\t\tform_item_input.AComboBox( {\n\t\t\ttree_mode: true,\n\t\t\tallow_multiple_selection: false,\n\t\t\tlayout_name: 'global_tree_column',\n\t\t\tset_empty: true,\n\t\t\tfield: 'parent_id'\n\t\t} );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Parent' ), form_item_input, tab_group_column1, '' );\n\n\t\t//Name\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\n\t\tform_item_input.TTextInput( { field: 'name', width: '100%' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Name' ), form_item_input, tab_group_column1, '' );\n\n\t\tform_item_input.parent().width( '45%' );\n\t}\n}\n"],"sourceRoot":""}