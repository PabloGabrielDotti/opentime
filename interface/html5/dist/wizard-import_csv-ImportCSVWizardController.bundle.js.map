{"version":3,"sources":["webpack://timetrex/./interface/html5/global/widgets/filebrowser/TImageBrowser.js","webpack://timetrex/./interface/html5/views/wizard/import_csv/ImportCSVWizardController.js"],"names":["$","fn","TImageBrowser","options","Global","addCss","field","browser","opts","extend","defaults","$this","this","name","accept_filter","default_width","default_height","setEnabled","val","btn","find","removeAttr","removeClass","attr","addClass","clearErrorStyle","getFileName","getField","setEnableDelete","image","getValue","FormData","getImageSrc","setImage","hide","d","Date","getTime","css","setValue","each","o","meta","data","isSet","on","image_height","height","naturalHeight","image_width","width","naturalWidth","trigger","show","onImageLoad","changeHandler","bind","deleteImageHandler","FileReader","files","length","window","reader","readAsDataURL","onloadend","url","result","jQuery","ImportCSVWizardController","BaseWizardController","_","el","api_import","parse_hint_source","field_source","select_grid_last_row","last_id","saved_layout_array","column_map_data","super","title","i18n","steps","current_step","wizard_id","TTAPI","APIImport","render","initCurrentStep","content_div","empty","label","getLabel","text","combo_box","getComboBox","example_label","stepsWidgetDic","unbind","current_value","import_class","toLowerCase","ServiceCaller","getURLByObjectType","open","e","append","file_browser","getFileBrowser","setWidgetEnabled","back_btn","next_btn","saved_layout_div","form_item_label","save_mapping_input","loadWidget","TTextInput","save_btn","previous_saved_layout_selector","loadWidgetByName","FormItemType","COMBO_BOX","TComboBox","setValueKey","setLabelKey","update_btn","del_btn","saveNewMapping","TAlertManager","showAlert","updateSelectMapping","deleteSelectMapping","target","onSavedLayoutChange","action_button_div","add_icon","minus_icon","grid_id","grid_div","setImportGrid","addRow","minusRow","value","grid","import_data","len","id","select_data","i","layout","item","TTUUID","zero_id","setSampleRowBaseOnImportFile","slice","setData","bindGridRenderEvents","grid_data","row_1","j","map_column_name","trim","select_layout_id","args","filter_data","script","stepsDataDic","deleted","APIUserGenericData","getUserGenericData","onResult","res_data","getResult","type","BaseViewController","default_layout_name","sort","a","b","compare","is_default","setSavedMappingOptions","select_id","select_layout","getLayoutById","showConfirmAlert","flag","deleteUserGenericData","getSavedMapping","saveCurrentStep","import_data_for_layout","setUserGenericData","isValid","showErrorAlert","array","selector","setSourceData","all_data","getData","default_value","parse_hint","push","jqGrid","sel_id","getGridParam","splice","gridId","callBack","column_info_array","column_info","index","sortable","formatter","cell_value","related_data","row","onTextInputRender","onFieldRender","onParseHintRender","widget","col_model","colModel","row_id","rowId","set_empty","source","buildRecordArray","get","outerHTML","acombobox","current_step_data","current_step_ui","getImportObjects","default_data","setButtonsStatus","saved_mapping","getOptions","getRawData","getRawDataRes","raw_data","buildMappingGridDataArray","generateColumnMap","generateColumnMapRes","key","raw_data_item","col_map_data_item","result_data","div","check_box","getCheckBox","prepend","import_options","import","data_grid_error_source","createErrorSource","getDetails","showErrorGrid","getRecordDetails","setIsIdempotent","top_des","bottom_des","records_details","columns","fixed","total","valid","invalid","TTGrid","setGridColumnsWidth","max_grid_width","error_array","error_row","error_info","error_key","hasOwnProperty","import_key","rowIndex","parseInt","column","message","field_name","inputs","select","onCellInputChange","onCellFocusIn","split","target_id","substring","indexOf","target_val","row_data","parse_hint_widget","parent","remove","updateParseHintWidget","allMultipleSelection","getGridColumns","column_model","multiselect","multiboxonly","editurl","setGridSize","setGridGroupColumns","mappingData","cleanStepsData","LocalCacheData","current_open_wizard_controller","saveAllStepsToUserGenericData","call_back","progress_label","progress","buildCurrentStepUI","buildCurrentStepData","setCurrentStepValues","file_uploader","uploadFile","className","upload_file_result","content","formatted_import_class","charAt","toUpperCase","key_name","buildImportMapping"],"mappings":"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","file":"wizard-import_csv-ImportCSVWizardController.bundle.js?v=a331ab4eb4e50843d311","sourcesContent":["( function( $ ) {\n\n\t$.fn.TImageBrowser = function( options ) {\n\t\tGlobal.addCss( 'global/widgets/filebrowser/TImageBrowser.css' );\n\t\tvar opts = $.extend( {}, $.fn.TImageBrowser.defaults, options );\n\n\t\tvar $this = this;\n\t\tvar field;\n\t\tvar id = 'file_browser';\n\t\tvar name = 'filedata';\n\t\tvar browser;\n\n\t\tvar accept_filter = '';\n\n\t\tvar default_width = 177;\n\t\tvar default_height = 42;\n\t\tvar enabled = true;\n\n\t\tthis.setEnabled = function( val ) {\n\t\t\tenabled = val;\n\n\t\t\tvar btn = this.find( '.browser-form input' );\n\n\t\t\tif ( !val ) {\n\t\t\t\tbtn.attr( 'disabled', true );\n\t\t\t\tbtn.removeClass( 'disable-element' ).addClass( 'disable-element' );\n\t\t\t} else {\n\t\t\t\tbtn.removeAttr( 'disabled' );\n\t\t\t\tbtn.removeClass( 'disable-element' );\n\t\t\t}\n\n\t\t};\n\n\t\tthis.clearErrorStyle = function() {\n\n\t\t};\n\n\t\tthis.getFileName = function() {\n\n\t\t\treturn browser.val();\n\t\t};\n\n\t\tthis.getField = function() {\n\t\t\treturn field;\n\t\t};\n\n\t\tthis.setEnableDelete = function( val ) {\n\t\t\tvar image = $this.find( '.image' );\n\t\t\tif ( !val ) {\n\t\t\t\timage.removeAttr( 'enable-delete' );\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\timage.attr( 'enable-delete', 1 );\n\t\t\t}\n\t\t};\n\n\t\tthis.getValue = function() {\n\t\t\tvar form_data;\n\t\t\tif ( browser && browser.val() ) {\n\n\t\t\t\tif ( typeof FormData == 'undefined' ) {\n\t\t\t\t\tform_data = $this.find( '.browser-form' );\n\t\t\t\t} else {\n\t\t\t\t\tform_data = new FormData( $( $this.find( '.browser-form' ) )[0] );\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tform_data = null;\n\t\t\t}\n\n\t\t\treturn form_data;\n\t\t};\n\n\t\tthis.getImageSrc = function() {\n\t\t\tvar image = $this.find( '.image' );\n\t\t\treturn image.attr( 'src' );\n\t\t};\n\n\t\tthis.setImage = function( val ) {\n\t\t\tvar image = $this.find( '.image' );\n\n\t\t\tif ( !val ) {\n\t\t\t\timage.attr( 'src', '' );\n\t\t\t\timage.hide();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar d = new Date();\n\t\t\timage.hide();\n\t\t\timage.attr( 'src', val + '&t=' + d.getTime() );\n\t\t\timage.css( 'height', 'auto' );\n\t\t\timage.css( 'width', 'auto' );\n\n\t\t};\n\n\t\tvar onImageLoad = function( image ) {\n\n\t\t\tvar image_height = $( image ).height() > 0 ? $( image ).height() : image.naturalHeight;\n\t\t\tvar image_width = $( image ).width() > 0 ? $( image ).width() : image.naturalWidth;\n\n\t\t\tif ( image_height > default_height ) {\n\t\t\t\t$( image ).css( 'height', default_height );\n\n\t\t\t}\n\n\t\t\tif ( image_width > default_width ) {\n\t\t\t\t$( image ).css( 'width', default_width );\n\t\t\t\t$( image ).css( 'height', 'auto' );\n\t\t\t}\n\n\t\t\t$this.trigger( 'setSize' );\n\n\t\t\tif ( image_height < 5 ) {\n\t\t\t\t$( image ).hide();\n\t\t\t} else {\n\t\t\t\t$( image ).show();\n\t\t\t}\n\t\t};\n\n\t\tthis.setValue = function( val ) {\n\n\t\t\tif ( !val ) {\n\t\t\t\tval = '';\n\t\t\t}\n\n\t\t};\n\n\t\tthis.each( function() {\n\t\t\tvar o = $.meta ? $.extend( {}, opts, $( this ).data() ) : opts;\n\n\t\t\tfield = o.field;\n\n\t\t\t// var $this = this;\n\n\t\t\tif ( o.default_width > 0 ) {\n\t\t\t\tdefault_width = o.default_width;\n\t\t\t}\n\n\t\t\tif ( o.default_height > 0 ) {\n\t\t\t\tdefault_height = o.default_height;\n\t\t\t}\n\n\t\t\tif ( Global.isSet( o.name ) ) {\n\t\t\t\tname = o.name;\n\t\t\t}\n\n\t\t\tif ( Global.isSet( accept_filter ) ) {\n\t\t\t\taccept_filter = o.accept_filter;\n\t\t\t}\n\n\t\t\tbrowser = $( this ).find( '.browser' );\n\t\t\tvar image = $( this ).find( '.image' );\n\t\t\timage.hide();\n\t\t\timage.on( 'load', function() {\n\t\t\t\tonImageLoad( this );\n\n\t\t\t} );\n\n\t\t\tif ( accept_filter ) {\n\t\t\t\tbrowser.attr( 'accept', accept_filter );\n\t\t\t} else {\n\t\t\t\taccept_filter = 'image/*';\n\t\t\t\tbrowser.attr( 'accept', 'image/*' );\n\t\t\t}\n\n\t\t\tbrowser.attr( 'id', id );\n\t\t\tbrowser.attr( 'name', name );\n\n\t\t\tif ( Global.isSet( o.changeHandler ) ) {\n\n\t\t\t\t$this.bind( 'imageChange', o.changeHandler );\n\t\t\t}\n\t\t\tif ( Global.isSet( o.deleteImageHandler ) ) {\n\t\t\t\tthis.find( '.file-browser' ).on( 'deleteClick', function() {\n\t\t\t\t\to.deleteImageHandler();\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tbrowser.bind( 'change', function() {\n\t\t\t\timage.hide();\n\n\t\t\t\tif ( typeof FileReader != 'undefined' ) {\n\n\t\t\t\t\tvar files = !!this.files ? this.files : [];\n\n\t\t\t\t\t// If no files were selected, or no FileReader support, return\n\t\t\t\t\tif ( !files.length || !window.FileReader ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( accept_filter === 'image/*' ) {\n\t\t\t\t\t\t// Create a new instance of the FileReader\n\t\t\t\t\t\tvar reader = new FileReader();\n\n\t\t\t\t\t\t// Read the local file as a DataURL\n\t\t\t\t\t\treader.readAsDataURL( files[0] );\n\n\t\t\t\t\t\t// When loaded, set image data as background of div\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = this.result;\n\t\t\t\t\t\t\timage.attr( 'src', url );\n\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t$this.trigger( 'imageChange', [$this] );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn this;\n\n\t};\n\n\t$.fn.TImageBrowser.defaults = {};\n\n} )( jQuery );","import '@/global/widgets/filebrowser/TImageBrowser';\n\nexport class ImportCSVWizardController extends BaseWizardController {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tel: '.wizard-bg',\n\n\t\t\tapi_import: null,\n\n\t\t\tparse_hint_source: null,\n\n\t\t\tfield_source: null,\n\n\t\t\tselect_grid_last_row: null,\n\n\t\t\tlast_id: 0, // Last grid id\n\n\t\t\tsaved_layout_array: null,\n\n\t\t\tcolumn_map_data: null, //Used to build grid data\n\n\t\t\t// _required_files: ['TImageBrowser']\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinit( options ) {\n\t\t//this._super('initialize', options );\n\n\t\tthis.title = $.i18n._( 'Import Wizard' );\n\t\tthis.steps = 6;\n\t\tthis.current_step = 1;\n\t\tthis.wizard_id = 'ProcessPayrollWizard';\n\t\tthis.api_import = TTAPI.APIImport;\n\n\t\tthis.render();\n\t}\n\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.initCurrentStep();\n\t}\n\n\t//Create each page UI\n\tbuildCurrentStepUI() {\n\n\t\tvar $this = this;\n\t\tthis.content_div.empty();\n\t\tswitch ( this.current_step ) {\n\t\t\tcase 1:\n\t\t\t\tvar label = this.getLabel();\n\t\t\t\tlabel.text( $.i18n._( 'Select the type of objects that you wish to import' ) + ':' );\n\n\t\t\t\tvar combo_box = this.getComboBox( 'import_class' );\n\n\t\t\t\tvar example_label = this.getLabel();\n\t\t\t\texample_label.text( $.i18n._( 'Download example CSV file' ) );\n\t\t\t\texample_label.css( 'text-decoration', 'underline' );\n\t\t\t\texample_label.css( 'cursor', 'pointer' );\n\t\t\t\texample_label.css( 'margin-top', '25px' );\n\n\t\t\t\tthis.stepsWidgetDic[this.current_step] = {};\n\t\t\t\tthis.stepsWidgetDic[this.current_step][combo_box.getField()] = combo_box;\n\n\t\t\t\texample_label.unbind( 'click' ).bind( 'click', function() {\n\n\t\t\t\t\tvar current_step_ui = $this.stepsWidgetDic[$this.current_step];\n\t\t\t\t\tvar current_value = current_step_ui.import_class.getValue().toLowerCase();\n\t\t\t\t\tvar url = ServiceCaller.getURLByObjectType( 'import_csv_example' ) + 'import_' + current_value + '_example.csv';\n\t\t\t\t\twindow.open( url, '_blank' );\n\t\t\t\t} );\n\n\t\t\t\tthis.stepsWidgetDic[this.current_step]['example_label'] = example_label;\n\n\t\t\t\tcombo_box.unbind( 'change' ).bind( 'change', function( e ) {\n\t\t\t\t\texample_label.text( $.i18n._( 'Download example' ) + ' ' + combo_box.getLabel() + ' ' + $.i18n._( 'CSV file' ) );\n\t\t\t\t} );\n\n\t\t\t\tthis.content_div.append( label );\n\t\t\t\tthis.content_div.append( combo_box );\n\t\t\t\tthis.content_div.append( example_label );\n\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tlabel = this.getLabel();\n\t\t\t\tlabel.text( $.i18n._( 'Upload Comma Separated Value (CSV) text file' ) );\n\n\t\t\t\tvar file_browser = this.getFileBrowser( 'file_uploader', '.csv' );\n\n\t\t\t\tthis.stepsWidgetDic[this.current_step] = {};\n\t\t\t\tthis.stepsWidgetDic[this.current_step][file_browser.getField()] = file_browser;\n\n\t\t\t\tthis.content_div.append( label );\n\t\t\t\tthis.content_div.append( file_browser );\n\n\t\t\t\tfile_browser.unbind( 'imageChange' ).bind( 'imageChange', function() {\n\t\t\t\t\tif ( file_browser.getValue() ) {\n\t\t\t\t\t\tGlobal.setWidgetEnabled( $this.back_btn, true );\n\t\t\t\t\t\tGlobal.setWidgetEnabled( $this.next_btn, true );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tlabel = this.getLabel();\n\t\t\t\tlabel.text( $.i18n._( 'Map columns from the uploaded file' ) + ':' );\n\n\t\t\t\tthis.stepsWidgetDic[this.current_step] = {};\n\n\t\t\t\t//Saved layout\n\n\t\t\t\tvar saved_layout_div = $( '<div></div>' );\n\n\t\t\t\tvar form_item_label = $( '<span></span>' );\n\n\t\t\t\tsaved_layout_div.append( form_item_label );\n\n\t\t\t\tform_item_label.text( $.i18n._( 'Save Mapping As' ) + ':' );\n\n\t\t\t\tvar save_mapping_input = Global.loadWidget( 'global/widgets/text_input/TTextInput.html' );\n\t\t\t\tsave_mapping_input = $( save_mapping_input ).TTextInput();\n\n\t\t\t\tvar save_btn = $( '<input class=\\'t-button\\' style=\\'margin-left: 5px\\' type=\\'button\\' value=\\'' + $.i18n._( 'Save' ) + '\\'></input>' );\n\n\t\t\t\tsaved_layout_div.append( save_mapping_input );\n\t\t\t\tsaved_layout_div.append( save_btn );\n\n\t\t\t\tform_item_label = $( '<span style=\\'margin-left: 5px\\' >' + $.i18n._( 'Saved Mapping' ) + ':</span>' );\n\n\t\t\t\tvar previous_saved_layout_selector = Global.loadWidgetByName( FormItemType.COMBO_BOX );\n\t\t\t\tprevious_saved_layout_selector = previous_saved_layout_selector.TComboBox();\n\t\t\t\tprevious_saved_layout_selector.setValueKey( 'id' );\n\t\t\t\tprevious_saved_layout_selector.setLabelKey( 'name' );\n\n\t\t\t\tvar update_btn = $( '<input class=\\'t-button\\' style=\\'margin-left: 5px\\' type=\\'button\\' value=\\'' + $.i18n._( 'Update' ) + '\\'></input>' );\n\t\t\t\tvar del_btn = $( '<input class=\\'t-button\\' style=\\'margin-left: 5px\\' type=\\'button\\' value=\\'' + $.i18n._( 'Delete' ) + '\\'></input>' );\n\n\t\t\t\tsave_btn.unbind( 'click' ).bind( 'click', function() {\n\t\t\t\t\tvar name = save_mapping_input.getValue();\n\t\t\t\t\tif ( !name ) {\n\t\t\t\t\t\tTAlertManager.showAlert( $.i18n._( 'Mapping Name is blank' ) );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t$this.saveNewMapping( save_mapping_input.getValue() );\n\t\t\t\t} );\n\n\t\t\t\tupdate_btn.unbind( 'click' ).bind( 'click', function() {\n\t\t\t\t\t$this.updateSelectMapping( previous_saved_layout_selector.getValue() );\n\t\t\t\t} );\n\n\t\t\t\tdel_btn.unbind( 'click' ).bind( 'click', function() {\n\t\t\t\t\t$this.deleteSelectMapping( previous_saved_layout_selector.getValue() );\n\t\t\t\t} );\n\n\t\t\t\tsaved_layout_div.append( form_item_label );\n\t\t\t\tsaved_layout_div.append( previous_saved_layout_selector );\n\t\t\t\tsaved_layout_div.append( update_btn );\n\t\t\t\tsaved_layout_div.append( del_btn );\n\n\t\t\t\tthis.stepsWidgetDic[this.current_step]['saved_mapping'] = previous_saved_layout_selector;\n\n\t\t\t\tprevious_saved_layout_selector.bind( 'formItemChange', function( e, target ) {\n\t\t\t\t\t$this.onSavedLayoutChange( target.getValue() );\n\t\t\t\t} );\n\n\t\t\t\t//add minus buttons\n\t\t\t\tvar action_button_div = $( '<div style=\"margin-left: 15px;text-align: left; margin-bottom: 5px;\"></div>' );\n\t\t\t\tvar add_icon = $( '<button class=\"plus-icon\" style=\"margin-right: 5px;\"></button>' );\n\t\t\t\tvar minus_icon = $( '<button class=\"minus-icon\"></button>' );\n\n\t\t\t\taction_button_div.append( add_icon );\n\t\t\t\taction_button_div.append( minus_icon );\n\n\t\t\t\tthis.content_div.append( label );\n\t\t\t\tthis.content_div.append( saved_layout_div );\n\t\t\t\tthis.content_div.append( action_button_div );\n\n\t\t\t\tvar grid_id = 'import_data';\n\t\t\t\tvar grid_div = $( '<div class=\\'grid-div wizard-grid-div\\'> <table id=\\'' + grid_id + '\\'></table></div>' );\n\t\t\t\tthis.setImportGrid( grid_id, grid_div );\n\n\t\t\t\tadd_icon.bind( 'click', function() {\n\t\t\t\t\t$this.addRow();\n\t\t\t\t} );\n\n\t\t\t\tminus_icon.bind( 'click', function() {\n\t\t\t\t\t$this.minusRow();\n\t\t\t\t} );\n\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tlabel = this.getLabel();\n\t\t\t\tlabel.text( $.i18n._( 'Select import settings' ) );\n\n\t\t\t\tthis.content_div.append( label );\n\n\t\t\t\tthis.stepsWidgetDic[this.current_step] = {};\n\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\n\t\t}\n\t}\n\n\tonSavedLayoutChange( value ) {\n\t\tvar grid = this.stepsWidgetDic[this.current_step].import_data;\n\n\t\tvar len = this.saved_layout_array.length;\n\n\t\tvar id = 1;\n\n\t\tvar select_data = {};\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tvar layout = this.saved_layout_array[i];\n\n\t\t\tif ( layout.id === value ) {\n\t\t\t\tselect_data = layout.data;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor ( var i = 0; i < select_data.length; i++ ) {\n\t\t\tvar item = select_data[i];\n\t\t\titem.id = 'csv' + id;\n\t\t\titem.field = item.field ? item.field : TTUUID.zero_id; //Make sure any blank fields are converted to zero_ids to prevent \"undefined\" from appearing in place of the dropdown box.\n\t\t\tid = id + 1;\n\t\t}\n\n\t\tthis.last_id = id;\n\n\t\t//Clone this array because its currently a reference to the raw grid data itself and grid.setData() clears out the grid before rendering it again, which results in a blank grid when switching from a saved mapping, then back to the original.\n\t\tselect_data = this.setSampleRowBaseOnImportFile( select_data ).slice( 0 );\n\n\t\tgrid.setData( select_data );\n\n\t\tthis.bindGridRenderEvents( grid );\n\t}\n\n\tsetSampleRowBaseOnImportFile( grid_data ) {\n\t\tif ( !this.import_data || !grid_data ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( var i = 0; i < grid_data.length; i++ ) {\n\t\t\tvar item = grid_data[i];\n\t\t\titem.row_1 = '';\n\t\t\tfor ( var j = 0; j < this.import_data.length; j++ ) {\n\t\t\t\tvar import_data = this.import_data[j];\n\n\t\t\t\t//#2132 - match based on map_column_name\n\t\t\t\tif ( item && item.map_column_name && import_data && import_data.map_column_name ) {\n\t\t\t\t\tif ( item.map_column_name.trim() === import_data.map_column_name.trim() ) {\n\t\t\t\t\t\titem.row_1 = import_data.row_1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn grid_data;\n\t}\n\n\tgetSavedMapping( select_layout_id ) {\n\t\tvar $this = this;\n\t\tvar args = {};\n\t\tvar filter_data = {};\n\t\tfilter_data.script = 'import_wizard' + this.stepsDataDic[1].import_class;\n\t\tfilter_data.deleted = false;\n\t\targs.filter_data = filter_data;\n\t\tTTAPI.APIUserGenericData.getUserGenericData( args, {\n\t\t\tonResult: function( result ) {\n\t\t\t\tvar res_data = result.getResult();\n\t\t\t\tif ( $.type( res_data ) !== 'array' ) {\n\t\t\t\t\t$this.saveNewMapping( BaseViewController.default_layout_name, true );\n\t\t\t\t} else {\n\t\t\t\t\t//Force sorting by name so -- DEFAULT -- record appears at the top.\n\t\t\t\t\tres_data.sort( function( a, b ) {\n\t\t\t\t\t\t\treturn Global.compare( a, b, 'name' );\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t$this.saved_layout_array = res_data;\n\n\t\t\t\t\t//If not set select layout, default to first one and update it to current upload columns\n\t\t\t\t\tif ( !select_layout_id ) {\n\t\t\t\t\t\tselect_layout_id = res_data[0].id;\n\n\t\t\t\t\t\t//Only update the first saved import data record if it is infact the DEFAULT one, otherwise it could overwrite some other random saved mapping, especially if they happen to the delete the default one.\n\t\t\t\t\t\t//  It has to update the DEFAULT saved mapping, otherwise if the user changes to a different mapping, then changes back, all the settings will be lost.\n\t\t\t\t\t\tif ( res_data[0].is_default == true || res_data[0].name == BaseViewController.default_layout_name ) {\n\t\t\t\t\t\t\t$this.updateSelectMapping( select_layout_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$this.saveNewMapping( BaseViewController.default_layout_name, true );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$this.setSavedMappingOptions( res_data, select_layout_id );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t} );\n\t}\n\n\tgetLayoutById( select_id ) {\n\t\tvar len = this.saved_layout_array.length;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tvar layout = this.saved_layout_array[i];\n\n\t\t\tif ( layout.id === select_id ) {\n\t\t\t\treturn layout;\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteSelectMapping( select_id ) {\n\t\tvar $this = this;\n\t\tvar select_layout = this.getLayoutById( select_id );\n\n\t\tif ( select_layout.is_default == true || select_layout.name === BaseViewController.default_layout_name ) {\n\t\t\tTAlertManager.showAlert( $.i18n._( 'Can\\'t delete default layout' ) );\n\t\t\treturn;\n\t\t}\n\n\t\tTAlertManager.showConfirmAlert( $.i18n._( 'Are you sure you wish to continue?' ), null, function( flag ) {\n\t\t\tif ( flag ) {\n\t\t\t\tTTAPI.APIUserGenericData.deleteUserGenericData( select_id, {\n\t\t\t\t\tonResult: function( result ) {\n\t\t\t\t\t\t$this.onSavedLayoutChange( $this.saved_layout_array[0].id );\n\t\t\t\t\t\t$this.getSavedMapping();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\tupdateSelectMapping( select_id ) {\n\t\tvar $this = this;\n\n\t\tthis.saveCurrentStep();\n\t\tvar select_layout = this.getLayoutById( select_id );\n\n\t\tselect_layout.data = this.stepsDataDic[this.current_step].import_data_for_layout;\n\n\t\tTTAPI.APIUserGenericData.setUserGenericData( select_layout, {\n\t\t\tonResult: function( result ) {\n\t\t\t\t//Refresh saved mapping data once it has been saved on the server.\n\t\t\t\t// This makes it so if the user clicks the UPDATE button, then switches to another saved mapping, then switches back, they will see their most recent settings.\n\t\t\t\t$this.getSavedMapping( select_id );\n\t\t\t}\n\t\t} );\n\t}\n\n\tsaveNewMapping( name, is_default ) {\n\t\tthis.saveCurrentStep();\n\n\t\tvar $this = this;\n\t\tvar args = {};\n\t\targs.script = 'import_wizard' + this.stepsDataDic[1].import_class;\n\t\targs.name = name;\n\t\targs.is_default = ( is_default && is_default == true ? true : false );\n\t\targs.data = this.stepsDataDic[this.current_step].import_data_for_layout;\n\n\t\tTTAPI.APIUserGenericData.setUserGenericData( args, {\n\t\t\tonResult: function( result ) {\n\t\t\t\tif ( !result.isValid() ) {\n\t\t\t\t\tTAlertManager.showErrorAlert( result );\n\t\t\t\t} else {\n\t\t\t\t\t$this.getSavedMapping( result.getResult() );\n\t\t\t\t}\n\n\t\t\t}\n\t\t} );\n\t}\n\n\tsetSavedMappingOptions( array, select_layout_id ) {\n\t\tvar $this = this;\n\n\t\tif ( Global.isSet( $this.stepsWidgetDic[$this.current_step]['saved_mapping'] ) == true ) {\n\t\t\tvar selector = $this.stepsWidgetDic[$this.current_step]['saved_mapping'];\n\n\t\t\tselector.setSourceData( array );\n\n\t\t\tif ( select_layout_id ) {\n\t\t\t\tselector.setValue( select_layout_id );\n\t\t\t}\n\t\t}\n\t\t$this.saved_layout_array = array;\n\t}\n\n\taddRow() {\n\t\tvar grid = this.stepsWidgetDic[this.current_step].import_data;\n\t\tvar all_data = grid.getData();\n\n\t\tvar data = {};\n\t\tdata.id = 'csv' + this.last_id;\n\t\tdata.field = TTUUID.zero_id;\n\t\tdata.default_value = '';\n\t\tdata.parse_hint = '';\n\t\tdata.map_column_name = $.i18n._( 'New Field Column' );\n\t\tdata.row_1 = '';\n\n\t\tthis.last_id = this.last_id + 1;\n\n\t\tall_data.push( data );\n\n\t\tgrid.setData( all_data, false );\n\n\t\tgrid.grid.jqGrid( 'setSelection', data.id );\n\n\t\tthis.bindGridRenderEvents( grid );\n\t}\n\n\tminusRow() {\n\n\t\tvar grid = this.stepsWidgetDic[this.current_step].import_data;\n\t\tvar sel_id = grid.getGridParam( 'selrow' );\n\n\t\tif ( !sel_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar all_data = grid.getGridParam( 'data' );\n\n\t\tfor ( var i = all_data.length - 1; i >= 0; i-- ) {\n\t\t\tvar data = all_data[i];\n\n\t\t\tif ( data.id === sel_id ) {\n\t\t\t\tall_data.splice( i, 1 );\n\t\t\t}\n\t\t}\n\n\t\tgrid.setData( all_data, false );\n\n\t\tgrid.grid.jqGrid( 'setSelection', all_data[all_data.length - 1].id );\n\t}\n\n\tgetGridColumns( gridId, callBack ) {\n\t\tvar column_info_array = [];\n\t\tvar $this = this;\n\n\t\tswitch ( gridId ) {\n\t\t\tcase 'import_data':\n\n\t\t\t\tvar column_info = {\n\t\t\t\t\tname: 'map_column_name',\n\t\t\t\t\tindex: 'map_column_name',\n\t\t\t\t\tlabel: $.i18n._( 'File Column' ),\n\t\t\t\t\twidth: 100,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\ttitle: false,\n\t\t\t\t\tformatter: function( cell_value, related_data, row ) {\n\t\t\t\t\t\treturn $this.onTextInputRender( cell_value, related_data, row );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcolumn_info_array.push( column_info );\n\n\t\t\t\tcolumn_info = {\n\t\t\t\t\tname: 'field',\n\t\t\t\t\tindex: 'field',\n\t\t\t\t\tlabel: $.i18n._( 'Field' ),\n\t\t\t\t\twidth: 100,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\ttitle: false,\n\t\t\t\t\tformatter: function( cell_value, related_data, row ) {\n\t\t\t\t\t\treturn $this.onFieldRender( cell_value, related_data, row );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcolumn_info_array.push( column_info );\n\n\t\t\t\tcolumn_info = {\n\t\t\t\t\tname: 'default_value',\n\t\t\t\t\tindex: 'default_value',\n\t\t\t\t\tlabel: $.i18n._( 'Default Value' ),\n\t\t\t\t\twidth: 100,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\ttitle: false,\n\t\t\t\t\tformatter: function( cell_value, related_data, row ) {\n\t\t\t\t\t\treturn $this.onTextInputRender( cell_value, related_data, row );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcolumn_info_array.push( column_info );\n\n\t\t\t\tcolumn_info = {\n\t\t\t\t\tname: 'parse_hint',\n\t\t\t\t\tindex: 'parse_hint',\n\t\t\t\t\tlabel: $.i18n._( 'Parse Hint' ),\n\t\t\t\t\twidth: 100,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\ttitle: false,\n\t\t\t\t\tformatter: function( cell_value, related_data, row ) {\n\t\t\t\t\t\treturn $this.onParseHintRender( cell_value, related_data, row );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcolumn_info_array.push( column_info );\n\n\t\t\t\tcolumn_info = {\n\t\t\t\t\tname: 'row_1',\n\t\t\t\t\tindex: 'row_1',\n\t\t\t\t\tlabel: $.i18n._( 'Sample Row' ),\n\t\t\t\t\twidth: 100,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\ttitle: false\n\t\t\t\t};\n\t\t\t\tcolumn_info_array.push( column_info );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tcallBack( column_info_array );\n\t}\n\n\tonParseHintRender( cell_value, related_data, row ) {\n\t\tvar widget;\n\t\tvar col_model = related_data.colModel;\n\t\tvar row_id = related_data.rowId;\n\n\t\tif ( this.parse_hint_source[row.field] ) {\n\t\t\twidget = Global.loadWidgetByName( FormItemType.COMBO_BOX );\n\t\t\twidget = widget.TComboBox( { set_empty: false } );\n\n\t\t\twidget.attr( 'custom_cell', 'true' );\n\t\t\twidget.attr( 'render_type', 'combobox' );\n\t\t\twidget.attr( 'id', row_id + '_' + col_model.name );\n\t\t\twidget.width( '97%' );\n\n\t\t\tvar source = Global.buildRecordArray( this.parse_hint_source[row.field] );\n\t\t\twidget.setSourceData( source );\n\n\t\t\tif ( cell_value ) {\n\t\t\t\twidget.setValue( cell_value );\n\t\t\t} else {\n\t\t\t\twidget.setValue( source[0].value );\n\t\t\t\trow.parse_hint = source[0].value;\n\t\t\t}\n\n\t\t} else {\n\t\t\twidget = $( '<input custom_cell=\"true\" ' +\n\t\t\t\t'render_type=\"text\" ' +\n\t\t\t\t'id=\"' + row_id + '_' + col_model.name + '\" ' +\n\t\t\t\t'type=\"text\" ' +\n\t\t\t\t'class=\"t-text-input\" ' +\n\t\t\t\t'style=\"width: 97%\">' );\n\n\t\t\twidget.text( cell_value );\n\t\t}\n\n\t\treturn widget.get( 0 ).outerHTML;\n\t}\n\n\tonFieldRender( cell_value, related_data, row ) {\n\t\tif ( !cell_value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar col_model = related_data.colModel;\n\t\tvar row_id = related_data.rowId;\n\n\t\tvar acombobox = Global.loadWidgetByName( FormItemType.COMBO_BOX );\n\t\tacombobox = acombobox.TComboBox( { set_empty: true } );\n\n\t\tacombobox.attr( 'custom_cell', 'true' );\n\t\tacombobox.attr( 'render_type', 'combobox' );\n\t\tacombobox.attr( 'id', row_id + '_' + col_model.name );\n\t\tacombobox.width( '97%' );\n\n\t\tacombobox.setSourceData( this.field_source );\n\n\t\t$( acombobox[0] ).find( '[value=' + cell_value + ']' ).attr( 'selected', true );\n\n\t\treturn acombobox.get( 0 ).outerHTML;\n\t}\n\n\tonTextInputRender( cell_value, related_data, row ) {\n\n\t\tvar col_model = related_data.colModel;\n\t\tvar row_id = related_data.rowId;\n\n\t\treturn '<input custom_cell=\"true\" render_type=\"text\" id=\"' + row_id + '_' + col_model.name + '\" value=\"' + cell_value + '\" type=\"text\" class=\"t-text-input\" style=\"width: 97%\">';\n\t}\n\n\tbuildCurrentStepData() {\n\n\t\tvar grid;\n\t\tvar $this = this;\n\n\t\tvar current_step_data = this.stepsDataDic[this.current_step];\n\t\tvar current_step_ui = this.stepsWidgetDic[this.current_step];\n\n\t\tswitch ( this.current_step ) {\n\t\t\tcase 1:\n\t\t\t\tthis.api_import.getImportObjects( {\n\t\t\t\t\tonResult: function( result ) {\n\t\t\t\t\t\tvar combo_box = current_step_ui['import_class'];\n\t\t\t\t\t\tvar array = Global.buildRecordArray( result.getResult() );\n\t\t\t\t\t\tcombo_box.setSourceData( array );\n\n\t\t\t\t\t\tif ( current_step_data ) {\n\t\t\t\t\t\t\tcombo_box.setValue( current_step_data.import_class );\n\t\t\t\t\t\t} else if ( $this.default_data ) {\n\t\t\t\t\t\t\tcombo_box.setValue( $this.default_data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar example_label = current_step_ui.example_label;\n\t\t\t\t\t\texample_label.text( $.i18n._( 'Download example' ) + ' ' + combo_box.getLabel() + ' ' + $.i18n._( 'CSV file' ) );\n\t\t\t\t\t\t$this.setButtonsStatus(); // set button enabled or disabled\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\n\t\t\t\tgrid = current_step_ui.import_data;\n\t\t\t\tif ( current_step_data && current_step_data.import_data_for_layout ) {\n\n\t\t\t\t\tcurrent_step_data.import_data_for_layout = this.setSampleRowBaseOnImportFile( current_step_data.import_data_for_layout );\n\n\t\t\t\t\tgrid.setData( current_step_data.import_data_for_layout );\n\n\t\t\t\t\t$this.bindGridRenderEvents( grid );\n\n\t\t\t\t\t$this.setSavedMappingOptions( $this.saved_layout_array, current_step_data.saved_mapping );\n\n\t\t\t\t\t$this.setButtonsStatus(); // set button enabled or disabled\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.api_import.getOptions( 'parse_hint', {\n\t\t\t\t\tonResult: function( result ) {\n\t\t\t\t\t\t$this.parse_hint_source = result.getResult();\n\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.api_import.getOptions( 'columns', {\n\t\t\t\t\tonResult: function( result ) {\n\t\t\t\t\t\t$this.field_source = Global.buildRecordArray( result.getResult() );\n\t\t\t\t\t\t$this.api_import.getRawData( 1, {\n\t\t\t\t\t\t\tonResult: function( getRawDataRes ) {\n\n\t\t\t\t\t\t\t\tvar raw_data = getRawDataRes.getResult();\n\t\t\t\t\t\t\t\traw_data = $this.buildMappingGridDataArray( raw_data[0] );\n\n\t\t\t\t\t\t\t\t$this.api_import.generateColumnMap( {\n\t\t\t\t\t\t\t\t\tonResult: function( generateColumnMapRes ) {\n\t\t\t\t\t\t\t\t\t\t$this.column_map_data = generateColumnMapRes.getResult();\n\n\t\t\t\t\t\t\t\t\t\tvar len = raw_data.length;\n\t\t\t\t\t\t\t\t\t\tfor ( var key in $this.column_map_data ) {\n\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar raw_data_item = raw_data[i];\n\t\t\t\t\t\t\t\t\t\t\t\tvar col_map_data_item = $this.column_map_data[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif ( raw_data_item.map_column_name == col_map_data_item.map_column_name ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\traw_data_item.field = key;\n\t\t\t\t\t\t\t\t\t\t\t\t\traw_data_item.default_value = $this.column_map_data[key].default_value ? $this.column_map_data[key].default_value : '';\n\t\t\t\t\t\t\t\t\t\t\t\t\traw_data_item.parse_hint = $this.column_map_data[key].parse_hint ? $this.column_map_data[key].parse_hint : '';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\traw_data.sort( function( a, b ) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Global.compare( a, b, 'map_column_name' );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// use to set Sample row to same layout\n\t\t\t\t\t\t\t\t\t\t$this.import_data = raw_data;\n\n\t\t\t\t\t\t\t\t\t\tgrid.setData( raw_data );\n\n\t\t\t\t\t\t\t\t\t\t$this.bindGridRenderEvents( grid );\n\n\t\t\t\t\t\t\t\t\t\t$this.getSavedMapping();\n\t\t\t\t\t\t\t\t\t\t$this.setButtonsStatus(); // set button enabled or disabled\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.api_import.getOptions( 'import_options', {\n\t\t\t\t\tonResult: function( result ) {\n\t\t\t\t\t\tvar result_data = Global.buildRecordArray( result.getResult() );\n\t\t\t\t\t\tvar div = $( '<div style=\"text-align: left;margin-left: 15px;\"></div>' );\n\n\t\t\t\t\t\tfor ( var i = 0; i < result_data.length; i++ ) {\n\t\t\t\t\t\t\tvar item = result_data[i];\n\t\t\t\t\t\t\tvar check_box = $this.getCheckBox( item.value );\n\n\t\t\t\t\t\t\tif ( current_step_data && current_step_data[item.value] ) {\n\t\t\t\t\t\t\t\tcheck_box.setValue( current_step_data[item.value] );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar label = $( '<label class=\"wizard-checkbox-label\" style=\"display: block;\">' + item.label + '</label>' );\n\t\t\t\t\t\t\tlabel.prepend( check_box );\n\t\t\t\t\t\t\t$this.stepsWidgetDic[$this.current_step][item.value] = check_box;\n\n\t\t\t\t\t\t\tdiv.append( label );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$this.content_div.append( div );\n\t\t\t\t\t\t$this.setButtonsStatus(); // set button enabled or disabled\n\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tvar import_data = this.stepsDataDic[3].import_data;\n\t\t\t\tvar import_options = this.stepsDataDic[4];\n\n\t\t\t\tthis.api_import.import( import_data, import_options, true, {\n\t\t\t\t\tonResult: function( result ) {\n\n\t\t\t\t\t\tif ( $this.current_step != 5 ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( result.isValid() ) {\n\t\t\t\t\t\t\tvar label = $this.getLabel();\n\t\t\t\t\t\t\tlabel.text( $.i18n._( 'Data verification successful' ) );\n\n\t\t\t\t\t\t\t$this.content_div.append( label );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar data_grid_error_source = $this.createErrorSource( result.getDetails() );\n\t\t\t\t\t\t\t$this.showErrorGrid( $.i18n._( 'Verification failed due to the following reasons' ) + ': ',\n\t\t\t\t\t\t\t\tdata_grid_error_source,\n\t\t\t\t\t\t\t\t$.i18n._( 'Continue to the next step to skip importing invalid records.' ),\n\t\t\t\t\t\t\t\tresult.getRecordDetails() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$this.setButtonsStatus(); // set button enabled or disabled\n\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\timport_data = this.stepsDataDic[3].import_data;\n\t\t\t\timport_options = this.stepsDataDic[4];\n\n\t\t\t\tthis.api_import.setIsIdempotent( true ); //Force to idempotent API call to avoid duplicate network requests from causing errors displayed to the user.\n\t\t\t\tthis.api_import.import( import_data, import_options, false, {\n\t\t\t\t\tonResult: function( result ) {\n\n\t\t\t\t\t\tif ( $this.current_step != 6 ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( result.isValid() ) {\n\t\t\t\t\t\t\tvar label = $this.getLabel();\n\t\t\t\t\t\t\tlabel.text( $.i18n._( 'Import successful' ) );\n\n\t\t\t\t\t\t\t$this.content_div.append( label );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar data_grid_error_source = $this.createErrorSource( result.getDetails() );\n\n\t\t\t\t\t\t\t$this.showErrorGrid( $.i18n._( 'Import failed due to the following reasons' ) + ':',\n\t\t\t\t\t\t\t\tdata_grid_error_source,\n\t\t\t\t\t\t\t\t$.i18n._( 'Invalid records have been skipped, all other records have been imported successfully.' ),\n\t\t\t\t\t\t\t\tresult.getRecordDetails() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$this.setButtonsStatus(); // set button enabled or disabled\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$this.setButtonsStatus(); // set button enabled or disabled\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n\n\tshowErrorGrid( top_des, data_grid_error_source, bottom_des, records_details ) {\n\t\tvar label = $( '<span class=\\'top-des clear-both-div\\'></span>' );\n\t\tlabel.text( top_des );\n\n\t\tthis.content_div.append( label );\n\n\t\tvar grid = $( '<table id=\"error_grid\"></table>' );\n\n\t\tvar columns = [];\n\n\t\tvar column_info = {\n\t\t\tname: 'rowIndex',\n\t\t\tindex: 'rowIndex',\n\t\t\tlabel: $.i18n._( 'Row' ),\n\t\t\twidth: 60,\n\t\t\tsortable: false,\n\t\t\ttitle: false,\n\t\t\tfixed: true\n\t\t};\n\t\tcolumns.push( column_info );\n\n\t\tcolumn_info = {\n\t\t\tname: 'row',\n\t\t\tindex: 'row',\n\t\t\tlabel: $.i18n._( 'File Column' ),\n\t\t\twidth: 100,\n\t\t\tsortable: false,\n\t\t\ttitle: false\n\t\t};\n\t\tcolumns.push( column_info );\n\n\t\tcolumn_info = {\n\t\t\tname: 'column',\n\t\t\tindex: 'column',\n\t\t\tlabel: $.i18n._( 'Field' ),\n\t\t\twidth: 100,\n\t\t\tsortable: false,\n\t\t\ttitle: false\n\t\t};\n\t\tcolumns.push( column_info );\n\n\t\tcolumn_info = {\n\t\t\tname: 'message',\n\t\t\tindex: 'message',\n\t\t\tlabel: $.i18n._( 'Message' ),\n\t\t\twidth: 100,\n\t\t\tsortable: false,\n\t\t\ttitle: false\n\t\t};\n\t\tcolumns.push( column_info );\n\n\t\tthis.content_div.append( grid );\n\n\t\tlabel = $( '<span class=\\'total-des clear-both-div\\'></span>' );\n\t\tlabel.text( $.i18n._( 'Records' ) + ':' + $.i18n._( 'Total' ) + ': ' + records_details.total + ' ' + $.i18n._( 'Valid' ) + ': ' + records_details.valid + ' ' + $.i18n._( 'Invalid' ) + ': ' + records_details.invalid );\n\n\t\tthis.content_div.append( label );\n\n\t\tlabel = $( '<span class=\\'bottom-des clear-both-div\\'></span>' );\n\t\tlabel.text( bottom_des );\n\n\t\tthis.content_div.append( label );\n\n\t\tgrid = new TTGrid( 'error_grid', {\n\t\t\tsortable: false,\n\t\t\twidth: ( this.content_div.width() - 2 )\n\t\t}, columns );\n\t\tgrid.setData( data_grid_error_source );\n\t\tgrid.setGridColumnsWidth( null, { max_grid_width: ( this.content_div.width() - 2 ) } );\n\t}\n\n\tcreateErrorSource( error_array ) {\n\n\t\t//Error: Uncaught TypeError: Cannot read property 'import_data' of undefined in /interface/html5/#!m=TimeSheet&date=00070609&user_id=14372 line 773\n\t\tif ( !this.stepsDataDic || !this.stepsDataDic[3] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar import_data = this.stepsDataDic[3].import_data;\n\t\tvar result = [];\n\t\tvar error_row = {};\n\n\t\tfor ( var key in error_array ) {\n\t\t\tvar error_info = error_array[key]['error'];\n\t\t\tfor ( var error_key in error_info ) {\n\t\t\t\tif ( !error_info.hasOwnProperty( error_key ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\terror_row = {};\n\t\t\t\t// #2345 - we always want the row and column name to show in the error report.\n\t\t\t\terror_row.rowIndex = parseInt( key ) + 2;\n\t\t\t\terror_row.row = $.i18n._( 'Unknown' );\n\t\t\t\terror_row.column = error_key;\n\t\t\t\terror_row.message = error_info[error_key][0];\n\n\t\t\t\t// Try to get more specific error info.\n\t\t\t\tfor ( var import_key in import_data ) {\n\t\t\t\t\tif ( import_key == error_key ) {  // #2345 - This won't match in cases where the csv columns do not match the object properties being validated. For example 'branch' != 'branch_id'\n\t\t\t\t\t\terror_row.row = import_data[import_key].map_column_name;\n\t\t\t\t\t\terror_row.column = import_data[import_key].field_name;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push( error_row );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tbindGridRenderEvents( grid ) {\n\t\tvar $this = this;\n\t\tvar inputs = grid.grid.find( 'input[custom_cell=\"true\"]' );\n\t\tvar select = grid.grid.find( 'select[custom_cell=\"true\"]' );\n\n\t\tinputs.unbind( 'change' ).bind( 'change', function( e ) {\n\t\t\t$this.onCellInputChange( e );\n\t\t} );\n\n\t\tselect.unbind( 'change' ).bind( 'change', function( e ) {\n\t\t\t$this.onCellInputChange( e );\n\t\t} );\n\n\t\tinputs.unbind( 'focusin' ).bind( 'focusin', function( e ) {\n\t\t\t$this.onCellFocusIn( e );\n\t\t} );\n\n\t\tselect.unbind( 'focusin' ).bind( 'focusin', function( e ) {\n\t\t\t$this.onCellFocusIn( e );\n\t\t} );\n\t}\n\n\tonCellFocusIn( e ) {\n\t\tvar current_step_ui = this.stepsWidgetDic[this.current_step];\n\t\tvar grid = current_step_ui['import_data'];\n\t\tvar target = $( e.target );\n\t\tvar target_id = target.attr( 'id' );\n\t\tvar row_id = target_id.split( '_' )[0];\n\n\t\tgrid.grid.jqGrid( 'setSelection', row_id );\n\t}\n\n\tonCellInputChange( e ) {\n\t\tvar $this = this;\n\t\tvar current_step_ui = this.stepsWidgetDic[this.current_step];\n\t\tvar grid = current_step_ui['import_data'];\n\t\tvar target = $( e.target );\n\t\tvar target_id = target.attr( 'id' );\n\t\tvar row_id = target_id.split( '_' )[0];\n\t\tvar field = target_id.substring( target_id.indexOf( '_' ) + 1, target_id.length );\n\t\tvar data = grid.getData();\n\t\tvar target_val = target.val();\n\n\t\tvar len = data.length;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tvar row_data = data[i];\n\t\t\tif ( row_data.id === row_id ) {\n\t\t\t\trow_data[field] = target_val;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( field === 'field' ) {\n\t\t\tupdateParseHintWidget();\n\t\t}\n\n\t\tfunction updateParseHintWidget() {\n\t\t\tvar widget;\n\t\t\tvar parse_hint_widget = target.parent().parent().find( '#' + row_id + '_parse_hint' );\n\t\t\tvar render_type = parse_hint_widget.attr( 'render_type' );\n\n\t\t\trow_data['parse_hint'] = '';\n\n\t\t\tif ( $this.parse_hint_source[target_val] ) {\n\n\t\t\t\twidget = Global.loadWidgetByName( FormItemType.COMBO_BOX );\n\t\t\t\twidget = widget.TComboBox( { set_empty: false } );\n\n\t\t\t\twidget.attr( 'custom_cell', 'true' );\n\t\t\t\twidget.attr( 'render_type', 'combobox' );\n\t\t\t\twidget.attr( 'id', row_id + '_parse_hint' );\n\t\t\t\twidget.width( '97%' );\n\n\t\t\t\tvar source = Global.buildRecordArray( $this.parse_hint_source[target_val] );\n\t\t\t\twidget.setSourceData( Global.buildRecordArray( $this.parse_hint_source[target_val] ) );\n\t\t\t\twidget.setValue( source[0].value );\n\t\t\t\trow_data['parse_hint'] = source[0].value;\n\n\t\t\t\tparse_hint_widget.parent().append( widget );\n\t\t\t\tparse_hint_widget.remove();\n\n\t\t\t} else {\n\n\t\t\t\twidget = $( '<input custom_cell=\"true\" ' +\n\t\t\t\t\t'render_type=\"text\" ' +\n\t\t\t\t\t'id=\"' + row_id + '_parse_hint\" ' +\n\t\t\t\t\t'value=\"\" ' +\n\t\t\t\t\t'type=\"text\" ' +\n\t\t\t\t\t'class=\"t-text-input\" ' +\n\t\t\t\t\t'style=\"width: 97%\">' );\n\n\t\t\t\tparse_hint_widget.parent().append( widget );\n\t\t\t\tparse_hint_widget.remove();\n\n\t\t\t}\n\n\t\t\twidget.bind( 'change', function( e ) {\n\t\t\t\t$this.onCellInputChange( e );\n\t\t\t} );\n\n\t\t}\n\t}\n\n\tsetImportGrid( gridId, grid_div, allMultipleSelection ) {\n\n\t\tif ( !allMultipleSelection ) {\n\t\t\tallMultipleSelection = false;\n\t\t}\n\n\t\tvar $this = this;\n\n\t\tthis.content_div.append( grid_div );\n\n\t\tthis.getGridColumns( gridId, function( column_model ) {\n\n\t\t\t$this.stepsWidgetDic[$this.current_step][gridId] = new TTGrid( gridId, {\n\t\t\t\tsortable: false,\n\t\t\t\theight: 300,\n\t\t\t\tmultiselect: allMultipleSelection,\n\t\t\t\tmultiboxonly: allMultipleSelection,\n\t\t\t\tediturl: 'clientArray'\n\t\t\t}, column_model );\n\n\t\t\t$this.setGridSize( $this.stepsWidgetDic[$this.current_step][gridId] );\n\n\t\t\t$this.setGridGroupColumns( gridId );\n\n\t\t} );\n\t}\n\n\tbuildMappingGridDataArray( mappingData ) {\n\n\t\tvar result = [];\n\t\tvar id = 1;\n\t\tfor ( var key in mappingData ) {\n\t\t\tif ( !mappingData.hasOwnProperty( key ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar item = mappingData[key];\n\t\t\tvar data = {};\n\t\t\tdata.id = 'csv' + id;\n\t\t\tdata.field = item.field ? item.field : TTUUID.zero_id;\n\t\t\tdata.default_value = item.default_value ? item.default_value : '';\n\t\t\tdata.parse_hint = item.parse_hint ? item.parse_hint : '';\n\t\t\tdata.map_column_name = item.map_column_name ? item.map_column_name : key;\n\t\t\tdata.row_1 = item.row_1 ? item.row_1 : item;\n\t\t\tresult.push( data );\n\n\t\t\tid = id + 1;\n\n\t\t}\n\n\t\tthis.last_id = id;\n\n\t\treturn result;\n\t}\n\n\tonDoneClick() {\n\t\tthis.cleanStepsData();\n\t\tLocalCacheData.current_open_wizard_controller = null;\n\t\tthis.saveAllStepsToUserGenericData( function() {\n\n\t\t} );\n\n\t\tif ( this.call_back ) {\n\t\t\tthis.call_back();\n\t\t}\n\n\t\t$( this.el ).remove();\n\t}\n\n\tinitCurrentStep() {\n\n\t\tvar $this = this;\n\t\t$this.progress_label.text( 'Step ' + $this.current_step + ' of ' + $this.steps );\n\t\t$this.progress.attr( 'max', $this.steps );\n\t\t$this.progress.val( $this.current_step );\n\n\t\t$this.buildCurrentStepUI();\n\t\t$this.buildCurrentStepData();\n\t\t$this.setCurrentStepValues();\n\t}\n\n\tonNextClick() {\n\t\tvar $this = this;\n\t\tthis.saveCurrentStep();\n\t\tvar current_step_data = this.stepsDataDic[this.current_step];\n\t\tGlobal.setWidgetEnabled( this.back_btn, false );\n\t\tGlobal.setWidgetEnabled( this.next_btn, false );\n\t\tif ( this.current_step === 2 ) {\n\n\t\t\tif ( !current_step_data.file_uploader ) {\n\t\t\t\tTAlertManager.showAlert( $.i18n._( 'Please choose a CSV file first' ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$this.api_import.uploadFile( current_step_data.file_uploader, 'object_type=import&object_id=' + this.api_import.className, {\n\t\t\t\tonResult: function( upload_file_result ) {\n\t\t\t\t\tif ( upload_file_result.toLowerCase() !== 'true' ) {\n\t\t\t\t\t\t$this.setButtonsStatus(); // set button enabled or disabled\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t$this.current_step = $this.current_step + 1;\n\n\t\t\t\t\t$this.stepsDataDic[$this.current_step] = null;\n\t\t\t\t\t$this.initCurrentStep();\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\tthis.current_step = this.current_step + 1;\n\t\t\tthis.initCurrentStep();\n\t\t}\n\t}\n\n\tbuildImportMapping( array ) {\n\n\t\tvar result = {};\n\t\tvar content;\n\n\t\tvar len = array.length;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tvar item = array[i];\n\t\t\tif ( item.field ) {\n\t\t\t\tcontent = {};\n\t\t\t\tcontent.field = item.field;\n\t\t\t\tcontent.map_column_name = item.map_column_name;\n\t\t\t\tcontent.default_value = item.default_value;\n\t\t\t\tcontent.parse_hint = item.parse_hint;\n\t\t\t\tresult[item.field] = content;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/* jshint ignore:start */\n\tsaveCurrentStep() {\n\t\tthis.stepsDataDic[this.current_step] = {};\n\t\tvar current_step_data = this.stepsDataDic[this.current_step];\n\t\tvar current_step_ui = this.stepsWidgetDic[this.current_step];\n\t\tswitch ( this.current_step ) {\n\t\t\tcase 1:\n\t\t\t\tcurrent_step_data.import_class = current_step_ui.import_class.getValue();\n\n\t\t\t\tvar formatted_import_class = current_step_data.import_class.charAt( 0 ).toUpperCase() + current_step_data.import_class.slice( 1 );\n\n\t\t\t\tthis.api_import.className = 'APIImport' + formatted_import_class;\n\t\t\t\tthis.api_import.key_name = 'Import' + formatted_import_class;\n\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcurrent_step_data.file_uploader = current_step_ui.file_uploader.getValue();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvar grid = current_step_ui.import_data;\n\t\t\t\tcurrent_step_data.import_data = this.buildImportMapping( grid.getData() );\n\t\t\t\tcurrent_step_data.import_data_for_layout = grid.getData();\n\t\t\t\tcurrent_step_data.saved_mapping = current_step_ui.saved_mapping.getValue();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tfor ( var key in current_step_ui ) {\n\n\t\t\t\t\tif ( !current_step_ui.hasOwnProperty( key ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tcurrent_step_data[key] = current_step_ui[key].getValue();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* jshint ignore:end */\n\tsetDefaultDataToSteps() {\n\n\t\tif ( !this.default_data ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n"],"sourceRoot":""}