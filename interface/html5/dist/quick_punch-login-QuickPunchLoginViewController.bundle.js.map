{"version":3,"sources":["webpack://timetrex/./interface/html5/views/quick_punch/QuickPunchBaseViewController.js","webpack://timetrex/./interface/html5/views/quick_punch/login/QuickPunchLoginViewController.js"],"names":["QuickPunchBaseViewController","TTBackboneView","options","_","defaults","super","QuickPunchLoginViewController","events","authentication_api","initialize","row","Global","loadWidget","this","template","setElement","contentContainer","html","$el","checkForWebkitTextSecuritySupport","api","currentUser_api","user_preference_api","date_api","permission_api","edit_view_error_ui_dic","LocalCacheData","setAllURLArgs","render","$this","login_btn","$","on","e","onLogin","focus","setLanguageSourceData","document","off","event","attrs","target","attributes","keyCode","attr","preventDefault","shiftKey","quick_punch_id","val","quick_punch_password","clearErrorTips","refreshCSRFToken","PunchLogin","onResult","raw_result","isValid","result","getResult","TTPromise","add","getCurrentStation","getCurrentUser","setCookie","SessionID","expires","path","cookie_path","getPermissions","permissionRes","permission_result","setPermissionData","resolve","Debug","Text","i18n","Logout","window","location","reload","getCurrentCompany","current_company_result","com_result","is_setup_complete","setCurrentCompany","APIGlobal","pre_login_data","application_build","production","getLocale","wait","goToView","setErrorTips","CSS","supports","old_elem","new_elem","clone","replaceWith","login_language","message_id","getLoginData","locale","ProgressBar","showProgressBar","changeProgressBarMessage","setLanguageCookie","setI18nDic","setTimeout","onGetCurrentUser","delegate","callBack","station_id","getStationID","setPunchLoginUser","doing_login","currentShownContextMenuName","setURLToBrowser","getBaseURL","current_company","setAnalyticDimensions","getPunchLoginUser","first_name","id","name","error_list","getDetails","key","hasOwnProperty","error","field_obj","error_string","addClass","isArray","tooltip","size","removeAttr","min","item","parseInt","clear_all","destroy","removeClass","field","source_data","set_empty","field_selector","empty","language_options","removeSortPrefixFromArray","append","prop","text","each","value","label","language"],"mappings":"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","file":"quick_punch-login-QuickPunchLoginViewController.bundle.js?v=f9c9f620d6a9b48def20","sourcesContent":["import { TTBackboneView } from '@/views/TTBackboneView';\n\nexport class QuickPunchBaseViewController extends TTBackboneView {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {} );\n\n\t\tsuper( options );\n\t}\n\n\t// getRequiredFiles() {\n\t// \t//override in child class\n\t// \treturn [];\n\t// }\n\n\t/**\n\t * When changing this function, you need to look for all occurences of this function because it was needed in several bases\n\t * BaseViewController, HomeViewController, BaseWizardController, QuickPunchBaseViewControler\n\t *\n\t * @returns {Array}\n\t */\n\t// filterRequiredFiles() {\n\t// \tvar retval = [];\n\t// \tvar required_files;\n\t//\n\t// \tif ( typeof this._required_files == 'object' ) {\n\t// \t\trequired_files = this._required_files;\n\t// \t} else {\n\t// \t\trequired_files = this.getRequiredFiles();\n\t// \t}\n\t//\n\t// \tif ( required_files && required_files[0] ) {\n\t// \t\tretval = required_files;\n\t// \t} else {\n\t// \t\tfor ( var edition_id in required_files ) {\n\t// \t\t\tif ( Global.getProductEdition() >= edition_id ) {\n\t// \t\t\t\tretval = retval.concat( required_files[edition_id] );\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t//\n\t// \tDebug.Arr( retval, 'RETVAL', 'BaseViewController.js', 'BaseViewController', 'filterRequiredFiles', 10 );\n\t// \treturn retval;\n\t// }\n}\n","import { QuickPunchBaseViewController } from '@/views/quick_punch/QuickPunchBaseViewController';\nimport { TTAPI } from '@/services/TimeTrexClientAPI';\nimport { TTUUID } from '@/global/TTUUID';\nimport { TAlertManager } from '@/global/TAlertManager';\n\nexport class QuickPunchLoginViewController extends QuickPunchBaseViewController {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tevents: {\n\t\t\t\t'change #language': 'onLanguageChange'\n\t\t\t},\n\t\t\tauthentication_api: null,\n\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinitialize( options ) {\n\t\tsuper.initialize( options );\n\n\t\tvar row = Global.loadWidget( 'views/quick_punch/login/QuickPunchLoginView.html' );\n\t\tthis.template = _.template( row );\n\t\tthis.setElement( this.template( {} ) );\n\t\tGlobal.contentContainer().html( this.$el );\n\n\t\tthis.checkForWebkitTextSecuritySupport();\n\t\tthis.api = TTAPI.APIPunch;\n\t\tthis.authentication_api = TTAPI.APIAuthentication;\n\t\tthis.currentUser_api = TTAPI.APIAuthentication;\n\t\tthis.user_preference_api = TTAPI.APIUserPreference;\n\t\tthis.date_api = TTAPI.APITTDate;\n\t\tthis.permission_api = TTAPI.APIPermission;\n\t\tthis.edit_view_error_ui_dic = {};\n\t\tLocalCacheData.setAllURLArgs( {} );\n\t\tthis.render();\n\t}\n\n\trender() {\n\t\tvar $this = this;\n\t\tthis.login_btn = this.$( 'button#punch_login' );\n\t\tthis.login_btn.on( 'click', function( e ) {\n\t\t\t$this.onLogin( e );\n\t\t} );\n\t\tthis.$( 'input[name=\"quick_punch_id\"]' ).focus();\n\t\tthis.setLanguageSourceData( 'language' );\n\t\t$( document ).off( 'keydown' ).on( 'keydown', function( event ) {\n\t\t\tvar attrs = event.target.attributes;\n\t\t\tif ( event.keyCode === 13 ) {\n\t\t\t\tif ( $this.login_btn.attr( 'disabled' ) == 'disabled' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$this.onLogin();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\tif ( event.keyCode === 9 && event.shiftKey ) {\n\t\t\t\tif ( attrs['tab-start'] ) {\n\t\t\t\t\t$this.$( 'button[tabindex=0]', $this.$el )[0].focus();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( attrs['tab-end'] && event.shiftKey === false ) {\n\t\t\t\t$this.$( 'input[tabindex=1]', $this.$el )[0].focus();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} );\n\t\treturn this;\n\t}\n\n\t// doLogin: function ( e ) {\n\t//     if ( e.keyCode === 13 ) {\n\t//         this.onLogin();\n\t//     }\n\t// },\n\n\tonLogin( e ) {\n\t\tvar $this = this;\n\t\tvar quick_punch_id = this.$( '#quick_punch_id' ).val();\n\t\tvar quick_punch_password = this.$( '#quick_punch_password' ).val();\n\t\tthis.login_btn.attr( 'disabled', 'disabled' );\n\t\tthis.clearErrorTips( true, true );\n\n\t\tGlobal.refreshCSRFToken( function( e ) {\n\t\t\t$this.authentication_api.PunchLogin( quick_punch_id, quick_punch_password, {\n\t\t\t\tonResult: function( raw_result ) {\n\t\t\t\t\tif ( raw_result.isValid() ) {\n\t\t\t\t\t\tvar result = raw_result.getResult();\n\n\t\t\t\t\t\tTTPromise.add( 'QPLogin', 'init' );\n\n\t\t\t\t\t\tTTPromise.add( 'QPLogin', 'CurrentStation' );\n\t\t\t\t\t\t$this.getCurrentStation();\n\n\t\t\t\t\t\tTTPromise.add( 'QPLogin', 'CurrentUser' );\n\t\t\t\t\t\t$this.getCurrentUser();\n\n\t\t\t\t\t\t// LocalCacheData.setSessionID( result.SessionID );\n\t\t\t\t\t\tsetCookie( 'SessionID-QP', result.SessionID, {\n\t\t\t\t\t\t\texpires: 30,\n\t\t\t\t\t\t\tpath: LocalCacheData.cookie_path\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tTTPromise.add( 'QPLogin', 'Permissions' );\n\t\t\t\t\t\t$this.permission_api.getPermissions( {\n\t\t\t\t\t\t\tonResult: function( permissionRes ) {\n\t\t\t\t\t\t\t\tvar permission_result = permissionRes.getResult();\n\n\t\t\t\t\t\t\t\tif ( permission_result != false ) {\n\t\t\t\t\t\t\t\t\tLocalCacheData.setPermissionData( permission_result );\n\t\t\t\t\t\t\t\t\tTTPromise.resolve( 'QPLogin', 'Permissions' );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//User does not have any permissions.\n\t\t\t\t\t\t\t\t\tDebug.Text( 'User does not have any permissions!', 'QuickPunchLoginController.js', 'QuickPunchViewController', 'getPermission', 10 );\n\t\t\t\t\t\t\t\t\tTAlertManager.showAlert( $.i18n._( 'Unable to login due to permissions, please try again and if the problem persists contact customer support.' ), '', function() {\n\t\t\t\t\t\t\t\t\t\tGlobal.Logout();\n\t\t\t\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tTTPromise.add( 'QPLogin', 'CurrentCompany' );\n\t\t\t\t\t\t$this.authentication_api.getCurrentCompany( {\n\t\t\t\t\t\t\tonResult: function( current_company_result ) {\n\t\t\t\t\t\t\t\tvar com_result = current_company_result.getResult();\n\n\t\t\t\t\t\t\t\tif ( com_result != false ) {\n\t\t\t\t\t\t\t\t\tif ( com_result.is_setup_complete == 1 ) {\n\t\t\t\t\t\t\t\t\t\tcom_result.is_setup_complete = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcom_result.is_setup_complete = false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tLocalCacheData.setCurrentCompany( com_result );\n\t\t\t\t\t\t\t\t\tDebug.Text( 'Version: Client: ' + APIGlobal.pre_login_data.application_build + ' Server: ' + com_result.application_build, 'LoginViewController.js', 'LoginViewController', 'onUserPreference:next', 10 );\n\n\t\t\t\t\t\t\t\t\tif ( APIGlobal.pre_login_data.production == true && APIGlobal.pre_login_data.application_build != com_result.application_build ) {\n\t\t\t\t\t\t\t\t\t\tDebug.Text( 'Version mismatch on login: Reloading...', 'LoginViewController.js', 'LoginViewController', 'onUserPreference:next', 10 );\n\t\t\t\t\t\t\t\t\t\twindow.location.reload( true );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tTTPromise.resolve( 'QPLogin', 'CurrentCompany' );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tDebug.Text( 'Unable to get company information!', 'QuickPunchLoginController.js', 'QuickPunchViewController', 'getPermission', 10 );\n\t\t\t\t\t\t\t\t\tTAlertManager.showAlert( $.i18n._( 'Unable to download required information, please check your network connection and try again. If the problem persists contact customer support.' ), '', function() {\n\t\t\t\t\t\t\t\t\t\tGlobal.Logout();\n\t\t\t\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tTTPromise.add( 'QPLogin', 'Locale' );\n\t\t\t\t\t\t$this.getLocale();\n\n\t\t\t\t\t\t//When all QPLogin promises complete, forward to punch view\n\t\t\t\t\t\tTTPromise.wait( 'QPLogin', null, function() {\n\t\t\t\t\t\t\t$this.goToView();\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tTTPromise.resolve( 'QPLogin', 'init' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$this.setErrorTips( raw_result );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t});\n\t}\n\n\t/* Checks if browser supports the use of -webkit-text-security, so we can obscure the password.\n\t * We want type number so that mobile devices will trigger the numeric keypad rather than the alphabet keyboard.\n\t * If not supported by browser (E.g. IE), replace element type number with type password.\n\t * Note: type=\"number\" is default in html, otherwise chrome on android does not change the keyboard to numeric keypad if other way around and converting to number from password. Seems to miss/ignore the type change.\n\t */\n\tcheckForWebkitTextSecuritySupport() {\n\t\tif ( typeof CSS !== 'function' || !CSS.supports( '-webkit-text-security', 'disc' ) ) {\n\t\t\tvar old_elem = $( 'input#quick_punch_password' );\n\t\t\tvar new_elem = old_elem.clone( true ); // clone all, including bound events\n\t\t\tnew_elem.attr( 'type', 'password' );\n\t\t\t// Replace the element rather than simply changing the original, as IE does not support input type change well.\n\t\t\told_elem.replaceWith( new_elem );\n\t\t}\n\t}\n\n\tgetLocale() {\n\t\tvar result = this.authentication_api.getLocale( $( 'select[name=\"language\"]' ).val(), {\n\t\t\tonResult: function( result ) {\n\t\t\t\tvar login_language = 'en_US';\n\t\t\t\tif ( result ) {\n\t\t\t\t\tlogin_language = result.getResult();\n\t\t\t\t}\n\t\t\t\tvar message_id = TTUUID.generateUUID();\n\t\t\t\tif ( LocalCacheData.getLoginData().locale != null && login_language !== LocalCacheData.getLoginData().locale ) {\n\t\t\t\t\tProgressBar.showProgressBar( message_id );\n\t\t\t\t\tProgressBar.changeProgressBarMessage( $.i18n._( 'Language changed, reloading' ) + '...' );\n\n\t\t\t\t\tGlobal.setLanguageCookie( login_language );\n\t\t\t\t\tLocalCacheData.setI18nDic( null );\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\twindow.location.reload( true );\n\t\t\t\t\t}, 5000 );\n\t\t\t\t}\n\t\t\t\tTTPromise.resolve( 'QPLogin', 'Locale' );\n\t\t\t}\n\t\t} );\n\t}\n\n\tgetCurrentUser() {\n\t\tthis.currentUser_api.getCurrentUser( { onResult: this.onGetCurrentUser, delegate: this } );\n\t}\n\n\tgetCurrentStation( callBack ) {\n\t\tvar $this = this;\n\n\t\tvar station_id = Global.getStationID();\n\t\tvar api_station = TTAPI.APIStation;\n\n\t\tif ( !station_id ) {\n\t\t\tstation_id = '';\n\t\t}\n\t\tapi_station.getCurrentStation( station_id, '10', {\n\t\t\tonResult: function( result ) {\n\t\t\t\tTTPromise.resolve( 'QPLogin', 'CurrentStation' );\n\t\t\t\t//doNext( result );\n\t\t\t}\n\t\t} );\n\t}\n\n\tonGetCurrentUser( e ) {\n\t\tLocalCacheData.setPunchLoginUser( e.getResult() );\n\t\tTTPromise.resolve( 'QPLogin', 'CurrentUser' );\n\t}\n\n\tgoToView() {\n\t\tthis.doing_login = false;\n\t\t// TopMenuManager.ribbon_view_controller = null;\n\t\t// TopMenuManager.ribbon_menus = null;\n\t\t// Global.topContainer().empty();\n\t\tLocalCacheData.currentShownContextMenuName = null;\n\n\t\t//Ensure that the language chosen at the login screen is passed in so that the user's country can be appended to create a proper locale.IndexViewController.instance.router.removeCurrentView();\n\t\t// var target_view = getCookie( 'PreviousSessionType' );\n\t\t// if ( target_view && !getCookie( 'PreviousSessionID' ) ) {\n\t\t//     TopMenuManager.goToView( target_view );\n\t\t//     setCookie( 'PreviousSessionType', null,  30,\n\t\t//  LocalCacheData.cookie_path,\n\t\t//  Global.getHost()\n\t\t//  );\n\t\t// } else {\n\t\t//     if (Global.getDeepLink() != false){\n\t\t//         TopMenuManager.goToView(Global.getDeepLink());\n\t\t//     }else if ( LocalCacheData.getLoginUserPreference().default_login_screen ) {\n\t\t//         TopMenuManager.goToView( LocalCacheData.getLoginUserPreference().default_login_screen );\n\t\t//     } else {\n\t\t//         TopMenuManager.goToView( 'Home' );\n\t\t//     }\n\t\t// }\n\n\t\t// if ( !LocalCacheData.getCurrentCompany().is_setup_complete ) {\n\t\t//     IndexViewController.openWizard( 'QuickStartWizard' );\n\t\t// }\n\t\tGlobal.setURLToBrowser( Global.getBaseURL() + '#!m=QuickPunch' );\n\t\tvar current_company = LocalCacheData.getCurrentCompany();\n\t\tif ( LocalCacheData && current_company ) {\n\t\t\tGlobal.setAnalyticDimensions( LocalCacheData.getPunchLoginUser().first_name + ' (' + LocalCacheData.getPunchLoginUser().id + ')', current_company.name );\n\t\t}\n\t}\n\n\tsetErrorTips( result ) {\n\t\tthis.clearErrorTips( true );\n\t\tvar error_list = result.getDetails() ? result.getDetails()[0] : {};\n\t\tif ( error_list && error_list.hasOwnProperty( 'error' ) ) {\n\t\t\terror_list = error_list.error;\n\t\t}\n\t\tfor ( var key in error_list ) {\n\t\t\tif ( !error_list.hasOwnProperty( key ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar field_obj;\n\t\t\tif ( this.$( 'input[name=\"' + key + '\"]' )[0] ) {\n\t\t\t\tfield_obj = this.$( 'input[name=\"' + key + '\"]' );\n\t\t\t} else if ( this.$( 'select[name=\"' + key + '\"]' )[0] ) {\n\t\t\t\tfield_obj = this.$( 'select[name=\"' + key + '\"]' );\n\t\t\t}\n\t\t\tif ( field_obj ) {\n\t\t\t\tfield_obj.addClass( 'error-tip' );\n\t\t\t\tvar error_string;\n\t\t\t\tif ( _.isArray( error_list[key] ) ) {\n\t\t\t\t\terror_string = error_list[key][0];\n\t\t\t\t} else {\n\t\t\t\t\terror_string = error_list[key];\n\t\t\t\t}\n\t\t\t\tfield_obj.attr( 'data-original-title', error_string );\n\t\t\t\t// field_obj.tooltip({\n\t\t\t\t//     'title': error_string,\n\t\t\t\t// })\n\t\t\t\tfield_obj.tooltip( 'show' );\n\t\t\t\tthis.edit_view_error_ui_dic[key] = field_obj;\n\t\t\t}\n\t\t\t// if ( field_obj ) {\n\t\t\t// \t$('html, body').animate({\n\t\t\t// \t\tscrollTop: field_obj.offset().top\n\t\t\t// \t}, 2000);\n\t\t\t// }\n\t\t}\n\t\tif ( _.size( this.edit_view_error_ui_dic ) > 0 ) {\n\t\t\tthis.login_btn.removeAttr( 'disabled' );\n\t\t\t_.min( this.edit_view_error_ui_dic, function( item ) {\n\t\t\t\tif ( item.attr( 'tabindex' ) ) {\n\t\t\t\t\treturn parseInt( item.attr( 'tabindex' ) );\n\t\t\t\t}\n\t\t\t} ).focus();\n\t\t}\n\t}\n\n\tclearErrorTips( clear_all, destroy ) {\n\t\tfor ( var key in this.edit_view_error_ui_dic ) {\n\t\t\tif ( this.edit_view_error_ui_dic[key].val() !== '' || clear_all ) {\n\t\t\t\tthis.edit_view_error_ui_dic[key].removeClass( 'error-tip' );\n\t\t\t\tthis.edit_view_error_ui_dic[key].attr( 'data-original-title', '' );\n\t\t\t}\n\t\t\tif ( destroy ) {\n\t\t\t\tthis.edit_view_error_ui_dic[key].tooltip( 'dispose' );\n\t\t\t}\n\t\t}\n\t\tthis.edit_view_error_ui_dic = {};\n\t}\n\n\tsetLanguageSourceData( field, source_data, set_empty ) {\n\t\tvar $this = this;\n\t\tvar field_selector = 'select[name=\"' + field + '\"]';\n\t\tif ( this.$( field_selector ) && this.$( field_selector )[0] ) {\n\t\t\tthis.$( field_selector ).empty();\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\tif ( !source_data ) {\n\t\t\tsource_data = LocalCacheData.getLoginData().language_options;\n\t\t\tsource_data = Global.removeSortPrefixFromArray( ( LocalCacheData.getLoginData().language_options ) );\n\t\t}\n\t\tif ( _.size( source_data ) == 0 ) {\n\t\t\tset_empty = true;\n\t\t}\n\t\tif ( set_empty === true ) {\n\t\t\tthis.$( field_selector ).append( $( '<option></option>' ).prop( 'value', '0' ).text( '-- ' + $.i18n._( 'None' ) + ' --' ) ).attr( 'selected', 'selected' );\n\t\t}\n\t\tif ( _.size( source_data ) > 0 ) {\n\t\t\t$.each( source_data, function( value, label ) {\n\t\t\t\t$this.$( field_selector ).append( $( '<option></option>' ).attr( 'value', value ).text( label ) );\n\t\t\t\tif ( LocalCacheData.getLoginData().language == value ) {\n\t\t\t\t\t$this.$( field_selector ).val( value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t// $this.$( field_selector ).selectpicker();\n\t}\n\n\tonLanguageChange( e ) {\n\t\tGlobal.setLanguageCookie( $( e.target ).val() );\n\t\tLocalCacheData.setI18nDic( null );\n\t\tvar message_id = TTUUID.generateUUID();\n\t\tProgressBar.showProgressBar( message_id );\n\t\tProgressBar.changeProgressBarMessage( $.i18n._( 'Language changed, reloading' ) + '...' );\n\n\t\tsetTimeout( function() {\n\t\t\twindow.location.reload( true );\n\t\t}, 2000 );\n\t}\n}\n\n\n"],"sourceRoot":""}